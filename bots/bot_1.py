import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)
BOT_TOKEN = "7552080497:AAEJFmsxmY8PnDzgoUpM5NDg5E1ehNYAHYU"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def start_handler(message: types.Message):
    text = "üöÄ –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π –±–æ—Ç!

–¢—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å:
‚Ä¢ /start - —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–Ω—è
‚Ä¢ —Å—Ç–∞—Ä—Ç - —ç—Ç–æ —Ç–æ–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!

–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
    builder.add(KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"))
    keyboard = builder.as_markup(resize_keyboard=True, one_time_keyboard=False)
    await message.answer(text, reply_markup=keyboard)

@dp.message()
async def message_info_1_handler(message: types.Message):
    text = "üìã **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:**

–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç-–ø—Ä–∏–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç:
‚Ä¢ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ–º–∞–Ω–¥—ã
‚Ä¢ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–Ω–æ–Ω–∏–º—ã
‚Ä¢ –ë–∞–∑–æ–≤—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é

–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ!"
    
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥"))
    keyboard = builder.as_markup(resize_keyboard=True, one_time_keyboard=False)
    await message.answer(text, reply_markup=keyboard)

@dp.message()
async def message_help_1_handler(message: types.Message):
    text = "‚ùì **–°–ø—Ä–∞–≤–∫–∞:**

üî§ **–ö–æ–º–∞–Ω–¥—ã:**
‚Ä¢ /start –∏–ª–∏ —Å—Ç–∞—Ä—Ç - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞

üéØ **–°–æ–≤–µ—Ç—ã:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
‚Ä¢ –°–∏–Ω–æ–Ω–∏–º—ã –¥–µ–ª–∞—é—Ç –±–æ—Ç–∞ —É–¥–æ–±–Ω–µ–µ
‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!"
    
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥"))
    keyboard = builder.as_markup(resize_keyboard=True, one_time_keyboard=False)
    await message.answer(text, reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –∫–æ–º–∞–Ω–¥
@dp.message(lambda message: message.text and message.text.lower() == "—Å—Ç–∞—Ä—Ç")
async def start_synonym_—Å—Ç–∞—Ä—Ç_handler(message: types.Message):
    # –°–∏–Ω–æ–Ω–∏–º –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
    await start_handler(message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    try:
        print("–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
        await dp.start_polling(bot)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        raise

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        exit(1)
