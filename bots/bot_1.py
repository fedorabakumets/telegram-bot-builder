"""
–ú–æ–π –ø–µ—Ä–≤—ã–π –±–æ—Ç - Telegram Bot
–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é TelegramBot Builder
"""

import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand, ReplyKeyboardRemove, URLInputFile, FSInputFile
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.enums import ParseMode

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)
BOT_TOKEN = "8082906513:AAEkTEm-HYvpRkI8ZuPuWmx3f25zi5tm1OE"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π Telegram ID)
ADMIN_IDS = [123456789]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
user_data = {}


# –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async def is_admin(user_id: int) -> bool:
    return user_id in ADMIN_IDS

async def is_private_chat(message: types.Message) -> bool:
    return message.chat.type == "private"

async def check_auth(user_id: int) -> bool:
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    return user_id in user_data

def is_local_file(url: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –ª–æ–∫–∞–ª—å–Ω—ã–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º"""
    return url.startswith("/uploads/") or url.startswith("uploads/")

def get_local_file_path(url: str) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–∑ URL"""
    if url.startswith("/"):
        return url[1:]  # –£–±–∏—Ä–∞–µ–º –≤–µ–¥—É—â–∏–π —Å–ª–µ—à
    return url

def extract_coordinates_from_yandex(url: str) -> tuple:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ —Å—Å—ã–ª–∫–∏ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç"""
    import re
    # –ò—â–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ ll=longitude,latitude
    match = re.search(r"ll=([\d.-]+),([\d.-]+)", url)
    if match:
        return float(match.group(2)), float(match.group(1))  # lat, lon
    # –ò—â–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ /longitude,latitude/
    match = re.search(r"/([\d.-]+),([\d.-]+)/", url)
    if match:
        return float(match.group(2)), float(match.group(1))  # lat, lon
    return None, None

def extract_coordinates_from_google(url: str) -> tuple:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ —Å—Å—ã–ª–∫–∏ Google Maps"""
    import re
    # –ò—â–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ @latitude,longitude
    match = re.search(r"@([\d.-]+),([\d.-]+)", url)
    if match:
        return float(match.group(1)), float(match.group(2))  # lat, lon
    # –ò—â–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ /latitude,longitude/
    match = re.search(r"/([\d.-]+),([\d.-]+)/", url)
    if match:
        return float(match.group(1)), float(match.group(2))  # lat, lon
    return None, None

def extract_coordinates_from_2gis(url: str) -> tuple:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ —Å—Å—ã–ª–∫–∏ 2–ì–ò–°"""
    import re
    # –ò—â–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö 2–ì–ò–°
    # –§–æ—Ä–º–∞—Ç: center/longitude,latitude
    match = re.search(r"center/([\d.-]+),([\d.-]+)", url)
    if match:
        return float(match.group(2)), float(match.group(1))  # lat, lon
    # –§–æ—Ä–º–∞—Ç: /longitude,latitude/
    match = re.search(r"/([\d.-]+),([\d.-]+)/", url)
    if match:
        return float(match.group(2)), float(match.group(1))  # lat, lon
    return None, None

def generate_map_urls(latitude: float, longitude: float, title: str = "") -> dict:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã"""
    import urllib.parse
    
    encoded_title = urllib.parse.quote(title) if title else ""
    
    return {
        "yandex": f"https://yandex.ru/maps/?ll={longitude},{latitude}&z=15&l=map&pt={longitude},{latitude}",
        "google": f"https://maps.google.com/?q={latitude},{longitude}",
        "2gis": f"https://2gis.ru/geo/{longitude},{latitude}",
        "openstreetmap": f"https://www.openstreetmap.org/?mlat={latitude}&mlon={longitude}&zoom=15"
    }


@dp.message(CommandStart())
async def start_handler(message: types.Message):

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ
    user_data[message.from_user.id] = {
        "username": message.from_user.username,
        "first_name": message.from_user.first_name,
        "last_name": message.from_user.last_name,
        "registered_at": message.date
    }

    text = """üèõÔ∏è **–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –£–õ–¨–¢–†–ê-–ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –ü–û–õ–ò–¢–ò–ö–û-–ò–°–¢–û–†–ò–ß–ï–°–ö–ò–ô –û–ü–†–û–°!**

üìö –≠—Ç–æ—Ç –æ–ø—Ä–æ—Å –≤–∫–ª—é—á–∞–µ—Ç:
‚Ä¢ üó≥Ô∏è **–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã** (20+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ üìú **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞–Ω–∏–µ** (25+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ ü§î **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –≤–æ–∑–∑—Ä–µ–Ω–∏—è** (15+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ üåç **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑** (20+ –≤–æ–ø—Ä–æ—Å–æ–≤)

‚è±Ô∏è **–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:** 45-60 –º–∏–Ω—É—Ç
üéØ **–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –≤–∑–≥–ª—è–¥–æ–≤

**–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –≥–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?**"""
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å", callback_data="political-intro"))
    builder.add(InlineKeyboardButton(text="üìã –û–±–∑–æ—Ä —Ä–∞–∑–¥–µ–ª–æ–≤", callback_data="sections-overview"))
    builder.add(InlineKeyboardButton(text="üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", callback_data="survey-instructions"))
    keyboard = builder.as_markup()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º–∏ inline –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline –∫–Ω–æ–ø–æ–∫

@dp.callback_query(lambda c: c.data == "political-intro")
async def handle_callback_political_intro(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–ë–õ–û–ö –ê: –ü–û–õ–ò–¢–û–õ–û–ì–ò–Ø**

**–ò—Å—Å–ª–µ–¥—É–µ–º –≤–∞—à–∏ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è**

–í —ç—Ç–æ–º –±–ª–æ–∫–µ 20 –≤–æ–ø—Ä–æ—Å–æ–≤ –æ:
‚Ä¢ –†–æ–ª–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–µ
‚Ä¢ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö
‚Ä¢ –ü—Ä–∞–≤–∞—Ö –∏ —Å–≤–æ–±–æ–¥–∞—Ö
‚Ä¢ –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö

**–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑?**"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üó≥Ô∏è –ù–∞—á–∞—Ç—å –ø–æ–ª–∏—Ç–±–ª–æ–∫", callback_data="pol-q1"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "sections-overview")
async def handle_callback_sections_overview(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìã **–†–ê–ó–î–ï–õ–´ –û–ü–†–û–°–ê:**

üó≥Ô∏è **–ë–õ–û–ö –ê: –ü–û–õ–ò–¢–û–õ–û–ì–ò–Ø** (20 –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
‚Ä¢ –û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –≤–ª–∞—Å—Ç–∏ –∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤—É
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞

üìú **–ë–õ–û–ö –ë: –ò–°–¢–û–†–ò–Ø** (25 –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ –ó–Ω–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π
‚Ä¢ –û—Ü–µ–Ω–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π
‚Ä¢ –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
‚Ä¢ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è

ü§î **–ë–õ–û–ö –í: –§–ò–õ–û–°–û–§–ò–Ø** (15 –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ –≠—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–∑—Ä–µ–Ω–∏—è
‚Ä¢ –ú–µ—Ç–∞—Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã
‚Ä¢ –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è
‚Ä¢ –°–º—ã—Å–ª –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏

üåç **–ë–õ–û–ö –ì: –°–û–¶–ò–û–õ–û–ì–ò–Ø** (20 –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
‚Ä¢ –ú–µ–∂–≥—Ä—É–ø–ø–æ–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
‚Ä¢ –ì–ª–æ–±–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∫—É–ª—å—Ç—É—Ä–∞
‚Ä¢ –ë—É–¥—É—â–µ–µ –æ–±—â–µ—Å—Ç–≤–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—á–∞–ª—É", callback_data="start-poll"))
    builder.add(InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å", callback_data="political-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "survey-instructions")
async def handle_callback_survey_instructions(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìñ **–ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–†–û–•–û–ñ–î–ï–ù–ò–Æ:**

‚úÖ **–ö–∞–∫ –æ—Ç–≤–µ—á–∞—Ç—å:**
‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç
‚Ä¢ –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –≤—ã–±–µ—Ä–∏—Ç–µ –±–ª–∏–∂–∞–π—à–∏–π –ø–æ –¥—É—Ö—É
‚Ä¢ –ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤

‚è±Ô∏è **–í—Ä–µ–º—è:**
‚Ä¢ –ú–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤—ã –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –±–ª–æ–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—Å—è –∑–∞ 10-15 –º–∏–Ω—É—Ç
‚Ä¢ –û–±—â–µ–µ –≤—Ä–µ–º—è: 45-60 –º–∏–Ω—É—Ç

üéØ **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:**
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ –∫–∞–∂–¥–æ–º—É –±–ª–æ–∫—É
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ç–∏–ø–∏—á–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É –∏–∑—É—á–µ–Ω–∏—é

üîí **–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:**
‚Ä¢ –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –∞–Ω–æ–Ω–∏–º–Ω—ã
‚Ä¢ –î–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∏–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ö –Ω–∞—á–∞–ª—É", callback_data="start-poll"))
    builder.add(InlineKeyboardButton(text="‚úÖ –ü–æ–Ω—è—Ç–Ω–æ, –Ω–∞—á–∏–Ω–∞–µ–º!", callback_data="political-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "start-poll")
async def handle_callback_start_poll(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üèõÔ∏è **–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –£–õ–¨–¢–†–ê-–ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –ü–û–õ–ò–¢–ò–ö–û-–ò–°–¢–û–†–ò–ß–ï–°–ö–ò–ô –û–ü–†–û–°!**

üìö –≠—Ç–æ—Ç –æ–ø—Ä–æ—Å –≤–∫–ª—é—á–∞–µ—Ç:
‚Ä¢ üó≥Ô∏è **–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã** (20+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ üìú **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞–Ω–∏–µ** (25+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ ü§î **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –≤–æ–∑–∑—Ä–µ–Ω–∏—è** (15+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ üåç **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑** (20+ –≤–æ–ø—Ä–æ—Å–æ–≤)

‚è±Ô∏è **–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:** 45-60 –º–∏–Ω—É—Ç
üéØ **–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –≤–∑–≥–ª—è–¥–æ–≤

**–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –≥–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?**"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å", callback_data="political-intro"))
    builder.add(InlineKeyboardButton(text="üìã –û–±–∑–æ—Ä —Ä–∞–∑–¥–µ–ª–æ–≤", callback_data="sections-overview"))
    builder.add(InlineKeyboardButton(text="üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", callback_data="survey-instructions"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q1")
async def handle_callback_pol_q1(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 1/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫—É—é —Ä–æ–ª—å –¥–æ–ª–∂–Ω–æ –∏–≥—Ä–∞—Ç—å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–æ–ª—å - —Å–≤–æ–±–æ–¥–Ω—ã–π —Ä...", callback_data="pol-q1-result"))
    builder.add(InlineKeyboardButton(text="B) –£–º–µ—Ä–µ–Ω–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤...", callback_data="pol-q1-result"))
    builder.add(InlineKeyboardButton(text="C) –ê–∫—Ç–∏–≤–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –ø–ª–∞–Ω–∏...", callback_data="pol-q1-result"))
    builder.add(InlineKeyboardButton(text="D) –ü–æ–ª–Ω—ã–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª...", callback_data="pol-q1-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "history-intro")
async def handle_callback_history_intro(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–ë–õ–û–ö –ë: –ò–°–¢–û–†–ò–Ø**

**–ü—Ä–æ–≤–µ—Ä–∏–º –≤–∞—à–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏**

–í —ç—Ç–æ–º –±–ª–æ–∫–µ 25 –≤–æ–ø—Ä–æ—Å–æ–≤ –æ:
‚Ä¢ –ö–ª—é—á–µ–≤—ã—Ö –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö
‚Ä¢ –í–µ–ª–∏–∫–∏—Ö –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç—è—Ö
‚Ä¢ –ü—Ä–∏—á–∏–Ω–∞—Ö –∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö —Å–æ–±—ã—Ç–∏–π
‚Ä¢ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö —Ä–∞–∑–≤–∏—Ç–∏—è
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–ª–ª–µ–ª—è—Ö

**–ì–æ—Ç–æ–≤—ã –æ–∫—É–Ω—É—Ç—å—Å—è –≤ –∏—Å—Ç–æ—Ä–∏—é?**"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìú –ù–∞—á–∞—Ç—å –∏—Å—Ç–±–ª–æ–∫", callback_data="hist-q1"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q1-result")
async def handle_callback_pol_q1_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–æ–ª—å - —Å–≤–æ–±–æ–¥–Ω—ã–π —Ä—ã–Ω–æ–∫

B) –£–º–µ—Ä–µ–Ω–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –æ—Ç—Ä–∞—Å–ª–µ–π

C) –ê–∫—Ç–∏–≤–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ

D) –ü–æ–ª–Ω—ã–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 1/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q2"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q2")
async def handle_callback_pol_q2(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 2/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–º—É –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—é?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ü—Ä–æ—Ç–∏–≤ - –ø–ª–æ—Å–∫–∞—è –Ω–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞...", callback_data="pol-q2-result"))
    builder.add(InlineKeyboardButton(text="B) –£–º–µ—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å...", callback_data="pol-q2-result"))
    builder.add(InlineKeyboardButton(text="C) –°–∏–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å...", callback_data="pol-q2-result"))
    builder.add(InlineKeyboardButton(text="D) –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å —Å...", callback_data="pol-q2-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q2-result")
async def handle_callback_pol_q2_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ü—Ä–æ—Ç–∏–≤ - –ø–ª–æ—Å–∫–∞—è –Ω–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –¥–ª—è –≤—Å–µ—Ö

B) –£–º–µ—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å

C) –°–∏–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å

D) –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å —Å –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 2/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q3"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q3")
async def handle_callback_pol_q3(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 3/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –ø–æ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∞–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ - —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –Ω–µ–æ...", callback_data="pol-q3-result"))
    builder.add(InlineKeyboardButton(text="B) –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏...", callback_data="pol-q3-result"))
    builder.add(InlineKeyboardButton(text="C) –®–∏—Ä–æ–∫–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏...", callback_data="pol-q3-result"))
    builder.add(InlineKeyboardButton(text="D) –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∞–∑–æ–≤—ã–π –¥–æ—Ö–æ–¥...", callback_data="pol-q3-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q3-result")
async def handle_callback_pol_q3_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ - —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ

B) –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏

C) –®–∏—Ä–æ–∫–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏

D) –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∞–∑–æ–≤—ã–π –¥–æ—Ö–æ–¥

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 3/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q4"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q4")
async def handle_callback_pol_q4(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 4/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –¥–æ–ª–∂–Ω–∞ —Å—Ç—Ä–æ–∏—Ç—å—Å—è –≤–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ò–∑–æ–ª—è—Ü–∏–æ–Ω–∏–∑–º –∏ –Ω–µ–≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ...", callback_data="pol-q4-result"))
    builder.add(InlineKeyboardButton(text="B) –ü—Ä–∞–≥–º–∞—Ç–∏—á–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ...", callback_data="pol-q4-result"))
    builder.add(InlineKeyboardButton(text="C) –ê–∫—Ç–∏–≤–Ω–∞—è –¥–∏–ø–ª–æ–º–∞—Ç–∏—è –∏ –∞–ª—å—è–Ω—Å—ã...", callback_data="pol-q4-result"))
    builder.add(InlineKeyboardButton(text="D) –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ –∏ –≤–ª–∏—è–Ω–∏–µ...", callback_data="pol-q4-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q4-result")
async def handle_callback_pol_q4_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ò–∑–æ–ª—è—Ü–∏–æ–Ω–∏–∑–º –∏ –Ω–µ–≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ

B) –ü—Ä–∞–≥–º–∞—Ç–∏—á–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ

C) –ê–∫—Ç–∏–≤–Ω–∞—è –¥–∏–ø–ª–æ–º–∞—Ç–∏—è –∏ –∞–ª—å—è–Ω—Å—ã

D) –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ –∏ –≤–ª–∏—è–Ω–∏–µ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 4/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q5"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q5")
async def handle_callback_pol_q5(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 5/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º (–û–û–ù, –í–¢–û)?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –í—ã—Ö–æ–¥ –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å...", callback_data="pol-q5-result"))
    builder.add(InlineKeyboardButton(text="B) –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ...", callback_data="pol-q5-result"))
    builder.add(InlineKeyboardButton(text="C) –ê–∫—Ç–∏–≤–Ω–æ–µ —á–ª–µ–Ω—Å—Ç–≤–æ...", callback_data="pol-q5-result"))
    builder.add(InlineKeyboardButton(text="D) –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–º–æ—á–∏–π –º–µ–∂–¥—É–Ω–∞—Ä...", callback_data="pol-q5-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q5-result")
async def handle_callback_pol_q5_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –í—ã—Ö–æ–¥ –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å

B) –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ

C) –ê–∫—Ç–∏–≤–Ω–æ–µ —á–ª–µ–Ω—Å—Ç–≤–æ

D) –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–º–æ—á–∏–π –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 5/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q6"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q6")
async def handle_callback_pol_q6(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 6/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫–∞—è –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ú–∞–∂–æ—Ä–∏—Ç–∞—Ä–Ω–∞—è (–ø–æ–±–µ–∂–¥–∞–µ—Ç –æ–¥–∏–Ω)...", callback_data="pol-q6-result"))
    builder.add(InlineKeyboardButton(text="B) –°–º–µ—à–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞...", callback_data="pol-q6-result"))
    builder.add(InlineKeyboardButton(text="C) –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è (–ø–æ –ø–∞—Ä—Ç–∏–π–Ω—ã–º...", callback_data="pol-q6-result"))
    builder.add(InlineKeyboardButton(text="D) –ü—Ä—è–º–∞—è –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è (—Ä–µ—Ñ–µ—Ä–µ–Ω–¥—É–º—ã...", callback_data="pol-q6-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q6-result")
async def handle_callback_pol_q6_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ú–∞–∂–æ—Ä–∏—Ç–∞—Ä–Ω–∞—è (–ø–æ–±–µ–∂–¥–∞–µ—Ç –æ–¥–∏–Ω)

B) –°–º–µ—à–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞

C) –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è (–ø–æ –ø–∞—Ä—Ç–∏–π–Ω—ã–º —Å–ø–∏—Å–∫–∞–º)

D) –ü—Ä—è–º–∞—è –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è (—Ä–µ—Ñ–µ—Ä–µ–Ω–¥—É–º—ã)

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 6/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q7"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q7")
async def handle_callback_pol_q7(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 7/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–≤–æ–±–æ–¥–µ —Å–ª–æ–≤–∞ –∏ —Ü–µ–Ω–∑—É—Ä–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ê–±—Å–æ–ª—é—Ç–Ω–∞—è —Å–≤–æ–±–æ–¥–∞ —Å–ª–æ–≤–∞...", callback_data="pol-q7-result"))
    builder.add(InlineKeyboardButton(text="B) –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è —ç–∫—Å—Ç—Ä–µ–º...", callback_data="pol-q7-result"))
    builder.add(InlineKeyboardButton(text="C) –£–º–µ—Ä–µ–Ω–Ω–∞—è —Ü–µ–Ω–∑—É—Ä–∞ –≤—Ä–µ–¥–Ω–æ–≥–æ –∫–æ–Ω...", callback_data="pol-q7-result"))
    builder.add(InlineKeyboardButton(text="D) –°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...", callback_data="pol-q7-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q7-result")
async def handle_callback_pol_q7_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ê–±—Å–æ–ª—é—Ç–Ω–∞—è —Å–≤–æ–±–æ–¥–∞ —Å–ª–æ–≤–∞

B) –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è —ç–∫—Å—Ç—Ä–µ–º–∏–∑–º–∞

C) –£–º–µ—Ä–µ–Ω–Ω–∞—è —Ü–µ–Ω–∑—É—Ä–∞ –≤—Ä–µ–¥–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

D) –°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 7/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q8"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q8")
async def handle_callback_pol_q8(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 8/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –ø—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—Å–ª—É–≥?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏—è –≤—Å–µ–≥–æ –≤–æ–∑–º...", callback_data="pol-q8-result"))
    builder.add(InlineKeyboardButton(text="B) –ü—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–∫...", callback_data="pol-q8-result"))
    builder.add(InlineKeyboardButton(text="C) –°–º–µ—à–∞–Ω–Ω–∞—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ-—á–∞—Å—Ç–Ω...", callback_data="pol-q8-result"))
    builder.add(InlineKeyboardButton(text="D) –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ–Ω–æ–ø–æ–ª–∏—è –Ω–∞ —É...", callback_data="pol-q8-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q8-result")
async def handle_callback_pol_q8_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏—è –≤—Å–µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ

B) –ü—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–∫—Ç–æ—Ä–æ–≤

C) –°–º–µ—à–∞–Ω–Ω–∞—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ-—á–∞—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å

D) –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ–Ω–æ–ø–æ–ª–∏—è –Ω–∞ —É—Å–ª—É–≥–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 8/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q9"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q9")
async def handle_callback_pol_q9(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 9/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ü–æ–∑–∏—Ü–∏—è –ø–æ –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ó–∞–∫—Ä—ã—Ç—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã, –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è ...", callback_data="pol-q9-result"))
    builder.add(InlineKeyboardButton(text="B) –°–µ–ª–µ–∫—Ç–∏–≤–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –ø–æ –ø–æ—Ç—Ä–µ–±...", callback_data="pol-q9-result"))
    builder.add(InlineKeyboardButton(text="C) –û—Ç–∫—Ä—ã—Ç–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ...", callback_data="pol-q9-result"))
    builder.add(InlineKeyboardButton(text="D) –ü–æ–ª–Ω–∞—è —Å–≤–æ–±–æ–¥–∞ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è...", callback_data="pol-q9-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q9-result")
async def handle_callback_pol_q9_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ó–∞–∫—Ä—ã—Ç—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã, –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è

B) –°–µ–ª–µ–∫—Ç–∏–≤–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –ø–æ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º

C) –û—Ç–∫—Ä—ã—Ç–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π

D) –ü–æ–ª–Ω–∞—è —Å–≤–æ–±–æ–¥–∞ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 9/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q10"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q10")
async def handle_callback_pol_q10(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 10/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –¥–æ–ª–∂–Ω—ã —Ä–µ—à–∞—Ç—å—Å—è —ç—Ç–Ω–∏—á–µ—Å–∫–∏–µ –∏ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ê—Å—Å–∏–º–∏–ª—è—Ü–∏—è –≤ –¥–æ–º–∏–Ω–∏—Ä—É—é—â—É—é –∫—É–ª...", callback_data="pol-q10-result"))
    builder.add(InlineKeyboardButton(text="B) –£–º–µ—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ...", callback_data="pol-q10-result"))
    builder.add(InlineKeyboardButton(text="C) –ú—É–ª—å—Ç–∏–∫—É–ª—å—Ç—É—Ä–∞–ª–∏–∑–º –∏ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ...", callback_data="pol-q10-result"))
    builder.add(InlineKeyboardButton(text="D) –§–µ–¥–µ—Ä–∞–ª–∏–∑–º –∏ –∞–≤—Ç–æ–Ω–æ–º–∏–∏ –¥–ª—è –≥—Ä—É...", callback_data="pol-q10-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q10-result")
async def handle_callback_pol_q10_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ê—Å—Å–∏–º–∏–ª—è—Ü–∏—è –≤ –¥–æ–º–∏–Ω–∏—Ä—É—é—â—É—é –∫—É–ª—å—Ç—É—Ä—É

B) –£–º–µ—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–∞–∑–ª–∏—á–∏–π

C) –ú—É–ª—å—Ç–∏–∫—É–ª—å—Ç—É—Ä–∞–ª–∏–∑–º –∏ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –∫—É–ª—å—Ç—É—Ä

D) –§–µ–¥–µ—Ä–∞–ª–∏–∑–º –∏ –∞–≤—Ç–æ–Ω–æ–º–∏–∏ –¥–ª—è –≥—Ä—É–ø–ø

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 10/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q11"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q11")
async def handle_callback_pol_q11(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 11/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–ª–∏—Ç–∏–∫–µ –∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—é?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†—ã–Ω–æ–∫ —Å–∞–º —Ä–µ—à–∏—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ ...", callback_data="pol-q11-result"))
    builder.add(InlineKeyboardButton(text="B) –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç...", callback_data="pol-q11-result"))
    builder.add(InlineKeyboardButton(text="C) –ê–∫—Ç–∏–≤–Ω–∞—è —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–ª–∏—Ç–∏–∫...", callback_data="pol-q11-result"))
    builder.add(InlineKeyboardButton(text="D) –†–∞–¥–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ä—ã –¥–ª—è —Å–ø–∞—Å–µ–Ω–∏—è ...", callback_data="pol-q11-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q11-result")
async def handle_callback_pol_q11_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –†—ã–Ω–æ–∫ —Å–∞–º —Ä–µ—à–∏—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã

B) –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤

C) –ê–∫—Ç–∏–≤–Ω–∞—è —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞

D) –†–∞–¥–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ä—ã –¥–ª—è —Å–ø–∞—Å–µ–Ω–∏—è –ø–ª–∞–Ω–µ—Ç—ã

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 11/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q12"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q12")
async def handle_callback_pol_q12(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 12/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ —Ä–∞–±–æ—á–∏–º –ø—Ä–∞–≤–∞–º –∏ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞–º?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞, –≥–∏–±–∫–∏–π —Ä—ã–Ω–æ...", callback_data="pol-q12-result"))
    builder.add(InlineKeyboardButton(text="B) –ë–∞–∑–æ–≤—ã–µ —Ç—Ä—É–¥–æ–≤—ã–µ –ø—Ä–∞–≤–∞...", callback_data="pol-q12-result"))
    builder.add(InlineKeyboardButton(text="C) –°–∏–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ—Å–æ—é–∑—ã –∏ –∑–∞—â–∏—Ç–∞ —Ä–∞–±...", callback_data="pol-q12-result"))
    builder.add(InlineKeyboardButton(text="D) –†–∞–±–æ—á–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç...", callback_data="pol-q12-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q12-result")
async def handle_callback_pol_q12_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞, –≥–∏–±–∫–∏–π —Ä—ã–Ω–æ–∫ —Ç—Ä—É–¥–∞

B) –ë–∞–∑–æ–≤—ã–µ —Ç—Ä—É–¥–æ–≤—ã–µ –ø—Ä–∞–≤–∞

C) –°–∏–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ—Å–æ—é–∑—ã –∏ –∑–∞—â–∏—Ç–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤

D) –†–∞–±–æ—á–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è–º–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 12/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q13"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q13")
async def handle_callback_pol_q13(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 13/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ü–æ–∑–∏—Ü–∏—è –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–µ–º—å–∏ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –°—Ç—Ä–æ–≥–∞—è –∑–∞—â–∏—Ç–∞ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö —Ü–µ...", callback_data="pol-q13-result"))
    builder.add(InlineKeyboardButton(text="B) –£–º–µ—Ä–µ–Ω–Ω—ã–π –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–∑–º —Å –∞–¥–∞–ø—Ç...", callback_data="pol-q13-result"))
    builder.add(InlineKeyboardButton(text="C) –õ–∏–±–µ—Ä–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞...", callback_data="pol-q13-result"))
    builder.add(InlineKeyboardButton(text="D) –†–∞–¥–∏–∫–∞–ª—å–Ω–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–µ–º–µ...", callback_data="pol-q13-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q13-result")
async def handle_callback_pol_q13_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –°—Ç—Ä–æ–≥–∞—è –∑–∞—â–∏—Ç–∞ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π

B) –£–º–µ—Ä–µ–Ω–Ω—ã–π –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–∑–º —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π

C) –õ–∏–±–µ—Ä–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—é

D) –†–∞–¥–∏–∫–∞–ª—å–Ω–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–µ–º–µ–π–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 13/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q14"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q14")
async def handle_callback_pol_q14(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 14/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –¥–æ–ª–∂–Ω–∞ —É—Å—Ç—Ä–æ–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –≤—ã–±–æ—Ä —Ä–æ...", callback_data="pol-q14-result"))
    builder.add(InlineKeyboardButton(text="B) –°–º–µ—à–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –≤–∞—É—á–µ—Ä–∞–º–∏...", callback_data="pol-q14-result"))
    builder.add(InlineKeyboardButton(text="C) –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å ...", callback_data="pol-q14-result"))
    builder.add(InlineKeyboardButton(text="D) –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω...", callback_data="pol-q14-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q14-result")
async def handle_callback_pol_q14_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –≤—ã–±–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª–µ–π

B) –°–º–µ—à–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –≤–∞—É—á–µ—Ä–∞–º–∏

C) –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤—ã–±–æ—Ä–∞

D) –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 14/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q15"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q15")
async def handle_callback_pol_q15(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 15/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ü–æ–ª–Ω–æ—Å—Ç—å—é —á–∞—Å—Ç–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞...", callback_data="pol-q15-result"))
    builder.add(InlineKeyboardButton(text="B) –ß–∞—Å—Ç–Ω–æ-–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∞—Ä—Ç–Ω–µ—Ä...", callback_data="pol-q15-result"))
    builder.add(InlineKeyboardButton(text="C) –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å —á–∞—Å—Ç...", callback_data="pol-q15-result"))
    builder.add(InlineKeyboardButton(text="D) –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –º–µ–¥–∏—Ü...", callback_data="pol-q15-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q15-result")
async def handle_callback_pol_q15_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ü–æ–ª–Ω–æ—Å—Ç—å—é —á–∞—Å—Ç–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞

B) –ß–∞—Å—Ç–Ω–æ-–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ

C) –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å —á–∞—Å—Ç–Ω—ã–º–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏

D) –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 15/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q16"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q16")
async def handle_callback_pol_q16(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 16/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –≤–æ–µ–Ω–Ω—ã–º —Ä–∞—Å—Ö–æ–¥–∞–º –∏ –æ–±–æ—Ä–æ–Ω–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã, –º–∏—Ä–æ–ª—é–±–∏–≤...", callback_data="pol-q16-result"))
    builder.add(InlineKeyboardButton(text="B) –£–º–µ—Ä–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è —Å–∞–º–æ–æ–±–æ—Ä...", callback_data="pol-q16-result"))
    builder.add(InlineKeyboardButton(text="C) –°–∏–ª—å–Ω–∞—è –æ–±–æ—Ä–æ–Ω–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å...", callback_data="pol-q16-result"))
    builder.add(InlineKeyboardButton(text="D) –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è –¥–æ–º–∏–Ω...", callback_data="pol-q16-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q16-result")
async def handle_callback_pol_q16_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã, –º–∏—Ä–æ–ª—é–±–∏–≤–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞

B) –£–º–µ—Ä–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è —Å–∞–º–æ–æ–±–æ—Ä–æ–Ω—ã

C) –°–∏–ª—å–Ω–∞—è –æ–±–æ—Ä–æ–Ω–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏

D) –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 16/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q17"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q17")
async def handle_callback_pol_q17(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 17/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ü–æ–∑–∏—Ü–∏—è –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –Ω–∞—Ä–∫–æ–ø–æ–ª–∏—Ç–∏–∫–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ñ–µ—Å—Ç–∫–∞—è –∫—Ä–∏–º–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –Ω–∞...", callback_data="pol-q17-result"))
    builder.add(InlineKeyboardButton(text="B) –î–µ–∫—Ä–∏–º–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º...", callback_data="pol-q17-result"))
    builder.add(InlineKeyboardButton(text="C) –õ–µ–≥–∞–ª–∏–∑–∞—Ü–∏—è –ª–µ–≥–∫–∏—Ö –Ω–∞—Ä–∫–æ—Ç–∏–∫–æ–≤...", callback_data="pol-q17-result"))
    builder.add(InlineKeyboardButton(text="D) –ü–æ–ª–Ω–∞—è –ª–µ–≥–∞–ª–∏–∑–∞—Ü–∏—è —Å —Ä–µ–≥—É–ª–∏—Ä–æ–≤...", callback_data="pol-q17-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q17-result")
async def handle_callback_pol_q17_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ñ–µ—Å—Ç–∫–∞—è –∫—Ä–∏–º–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –Ω–∞—Ä–∫–æ—Ç–∏–∫–æ–≤

B) –î–µ–∫—Ä–∏–º–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –ø–æ–¥—Ö–æ–¥–æ–º

C) –õ–µ–≥–∞–ª–∏–∑–∞—Ü–∏—è –ª–µ–≥–∫–∏—Ö –Ω–∞—Ä–∫–æ—Ç–∏–∫–æ–≤

D) –ü–æ–ª–Ω–∞—è –ª–µ–≥–∞–ª–∏–∑–∞—Ü–∏—è —Å —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 17/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q18"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q18")
async def handle_callback_pol_q18(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 18/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –¥–æ–ª–∂–Ω–æ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤–ª–∞–¥–µ–Ω–∏–µ –æ—Ä—É–∂–∏–µ–º?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ü—Ä–∞–≤–æ –Ω–∞ –Ω–æ—à–µ–Ω–∏–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω...", callback_data="pol-q18-result"))
    builder.add(InlineKeyboardButton(text="B) –õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏...", callback_data="pol-q18-result"))
    builder.add(InlineKeyboardButton(text="C) –°—Ç—Ä–æ–≥–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Å–ø–µ—Ü–∏–∞...", callback_data="pol-q18-result"))
    builder.add(InlineKeyboardButton(text="D) –ü–æ–ª–Ω—ã–π –∑–∞–ø—Ä–µ—Ç –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω...", callback_data="pol-q18-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q18-result")
async def handle_callback_pol_q18_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ü—Ä–∞–≤–æ –Ω–∞ –Ω–æ—à–µ–Ω–∏–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π

B) –õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

C) –°—Ç—Ä–æ–≥–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤

D) –ü–æ–ª–Ω—ã–π –∑–∞–ø—Ä–µ—Ç –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 18/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q19"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q19")
async def handle_callback_pol_q19(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 19/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–º–µ—Ä—Ç–Ω–æ–π –∫–∞–∑–Ω–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ó–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è...", callback_data="pol-q19-result"))
    builder.add(InlineKeyboardButton(text="B) –ó–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è –æ—Å–æ–±–æ —Ç—è–∂–∫–∏—Ö...", callback_data="pol-q19-result"))
    builder.add(InlineKeyboardButton(text="C) –ó–∞ –æ—Ç–º–µ–Ω—É —Å –∑–∞–º–µ–Ω–æ–π –Ω–∞ –ø–æ–∂–∏–∑–Ω–µ...", callback_data="pol-q19-result"))
    builder.add(InlineKeyboardButton(text="D) –ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –ø—Ä–æ—Ç–∏–≤ –≤ –ª—é–±—ã—Ö —Å...", callback_data="pol-q19-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q19-result")
async def handle_callback_pol_q19_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ó–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è

B) –ó–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è –æ—Å–æ–±–æ —Ç—è–∂–∫–∏—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π

C) –ó–∞ –æ—Ç–º–µ–Ω—É —Å –∑–∞–º–µ–Ω–æ–π –Ω–∞ –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ–µ

D) –ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –ø—Ä–æ—Ç–∏–≤ –≤ –ª—é–±—ã—Ö —Å–ª—É—á–∞—è—Ö

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 19/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="pol-q20"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q20")
async def handle_callback_pol_q20(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üó≥Ô∏è **–í–û–ü–†–û–° 20/20** (–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è)

**–ö–∞–∫–∞—è –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ê–≤—Ç–æ—Ä–∏—Ç–∞—Ä–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å...", callback_data="pol-q20-result"))
    builder.add(InlineKeyboardButton(text="B) –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è —Å —Ç–µ—Ö–Ω...", callback_data="pol-q20-result"))
    builder.add(InlineKeyboardButton(text="C) –õ–∏–±–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–∞—è –¥...", callback_data="pol-q20-result"))
    builder.add(InlineKeyboardButton(text="D) –ü—Ä—è–º–∞—è –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω...", callback_data="pol-q20-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "pol-q20-result")
async def handle_callback_pol_q20_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:**

A) –ê–≤—Ç–æ—Ä–∏—Ç–∞—Ä–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å

B) –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —ç–ª–∏—Ç–∞–º–∏

C) –õ–∏–±–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–∞—è –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è

D) –ü—Ä—è–º–∞—è –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —É—á–∞—Å—Ç–∏–µ–º

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 20/20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–∏—Ç–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìú –ö –±–ª–æ–∫—É –ò—Å—Ç–æ—Ä–∏—è", callback_data="history-intro"))
    builder.add(InlineKeyboardButton(text="üìú –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q1")
async def handle_callback_hist_q1(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 1/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ —Å—Ç–∞–ª–æ –≥–ª–∞–≤–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π –ü–µ—Ä–≤–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω—ã?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –£–±–∏–π—Å—Ç–≤–æ —ç—Ä—Ü–≥–µ—Ä—Ü–æ–≥–∞ –§—Ä–∞–Ω—Ü–∞ –§–µ—Ä–¥–∏–Ω–∞–Ω...", callback_data="hist-q1-result"))
    builder.add(InlineKeyboardButton(text="B) –ò–º–ø–µ—Ä–∏–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –≤–µ–ª...", callback_data="hist-q1-result"))
    builder.add(InlineKeyboardButton(text="C) –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞ –ë–∞–ª–∫–∞–Ω–∞—Ö...", callback_data="hist-q1-result"))
    builder.add(InlineKeyboardButton(text="D) –ì–æ–Ω–∫–∞ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–π –∏ –º–∏–ª–∏—Ç–∞—Ä–∏–∑–º...", callback_data="hist-q1-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "philosophy-intro")
async def handle_callback_philosophy_intro(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–ë–õ–û–ö –í: –§–ò–õ–û–°–û–§–ò–Ø**

**–ò—Å—Å–ª–µ–¥—É–µ–º –≤–∞—à–∏ –º–∏—Ä–æ–≤–æ–∑–∑—Ä–µ–Ω—á–µ—Å–∫–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏**

–í —ç—Ç–æ–º –±–ª–æ–∫–µ 15 –≤–æ–ø—Ä–æ—Å–æ–≤ –æ:
‚Ä¢ –≠—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–∞—Ö –∏ –º–æ—Ä–∞–ª–∏
‚Ä¢ –ú–µ—Ç–∞—Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–∑–≥–ª—è–¥–∞—Ö –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –°–º—ã—Å–ª–µ –∂–∏–∑–Ω–∏ –∏ —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö
‚Ä¢ –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏
‚Ä¢ –≠–ø–∏—Å—Ç–µ–º–æ–ª–æ–≥–∏–∏ –∏ –ø–æ–∑–Ω–∞–Ω–∏–∏

**–ì–æ—Ç–æ–≤—ã –∫ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É?**"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="ü§î –ù–∞—á–∞—Ç—å —Ñ–∏–ª–±–ª–æ–∫", callback_data="phil-q1"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q1-result")
async def handle_callback_hist_q1_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –£–±–∏–π—Å—Ç–≤–æ —ç—Ä—Ü–≥–µ—Ä—Ü–æ–≥–∞ –§—Ä–∞–Ω—Ü–∞ –§–µ—Ä–¥–∏–Ω–∞–Ω–¥–∞

B) –ò–º–ø–µ—Ä–∏–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –≤–µ–ª–∏–∫–∏—Ö –¥–µ—Ä–∂–∞–≤

C) –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞ –ë–∞–ª–∫–∞–Ω–∞—Ö

D) –ì–æ–Ω–∫–∞ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–π –∏ –º–∏–ª–∏—Ç–∞—Ä–∏–∑–º

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 1/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q2"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q2")
async def handle_callback_hist_q2(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 2/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ö–∞–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å –Ω–∞—á–∞–ª–æ–º –∫–æ–Ω—Ü–∞ –†–∏–º—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –ó–∞–ø–∞–¥–Ω—É—é –∏ –í–æ—Å—Ç–æ—á–Ω—É—é ...", callback_data="hist-q2-result"))
    builder.add(InlineKeyboardButton(text="B) –ù–∞—à–µ—Å—Ç–≤–∏–µ –≥–æ—Ç–æ–≤ –∏ –≤–∞–Ω–¥–∞–ª–æ–≤...", callback_data="hist-q2-result"))
    builder.add(InlineKeyboardButton(text="C) –ü—Ä–∏–Ω—è—Ç–∏–µ —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–∞ –∫–∞–∫ –≥–æ—Å—É–¥–∞—Ä—Å—Ç...", callback_data="hist-q2-result"))
    builder.add(InlineKeyboardButton(text="D) –ö—Ä–∏–∑–∏—Å III –≤–µ–∫–∞ –∏ –∞–Ω–∞—Ä—Ö–∏—è...", callback_data="hist-q2-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q2-result")
async def handle_callback_hist_q2_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –ó–∞–ø–∞–¥–Ω—É—é –∏ –í–æ—Å—Ç–æ—á–Ω—É—é –∏–º–ø–µ—Ä–∏–∏

B) –ù–∞—à–µ—Å—Ç–≤–∏–µ –≥–æ—Ç–æ–≤ –∏ –≤–∞–Ω–¥–∞–ª–æ–≤

C) –ü—Ä–∏–Ω—è—Ç–∏–µ —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–∞ –∫–∞–∫ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–ª–∏–≥–∏–∏

D) –ö—Ä–∏–∑–∏—Å III –≤–µ–∫–∞ –∏ –∞–Ω–∞—Ä—Ö–∏—è

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 2/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q3"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q3")
async def handle_callback_hist_q3(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 3/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —ç–ø–æ—Ö–∏ –ü—Ä–æ—Å–≤–µ—â–µ–Ω–∏—è:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ù–∞—É—á–Ω–∞—è —Ä–µ–≤–æ–ª—é—Ü–∏—è –∏ —Ä–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–º...", callback_data="hist-q3-result"))
    builder.add(InlineKeyboardButton(text="B) –ò–¥–µ–∏ –ø—Ä–∞–≤ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏...", callback_data="hist-q3-result"))
    builder.add(InlineKeyboardButton(text="C) –°–µ–∫—É–ª—è—Ä–∏–∑–∞—Ü–∏—è –æ–±—â–µ—Å—Ç–≤–∞...", callback_data="hist-q3-result"))
    builder.add(InlineKeyboardButton(text="D) –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∑...", callback_data="hist-q3-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q3-result")
async def handle_callback_hist_q3_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –ù–∞—É—á–Ω–∞—è —Ä–µ–≤–æ–ª—é—Ü–∏—è –∏ —Ä–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–º

B) –ò–¥–µ–∏ –ø—Ä–∞–≤ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏

C) –°–µ–∫—É–ª—è—Ä–∏–∑–∞—Ü–∏—è –æ–±—â–µ—Å—Ç–≤–∞

D) –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∑–º

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 3/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q4"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q4")
async def handle_callback_hist_q4(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 4/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–∏–ª–æ –∏—Å—Ö–æ–¥ –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω—ã?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Å–æ—é–∑–Ω–∏–∫–æ–≤...", callback_data="hist-q4-result"))
    builder.add(InlineKeyboardButton(text="B) –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –°–®–ê –≤ –≤–æ–π–Ω—É...", callback_data="hist-q4-result"))
    builder.add(InlineKeyboardButton(text="C) –û—Ç–∫—Ä—ã—Ç–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–∞...", callback_data="hist-q4-result"))
    builder.add(InlineKeyboardButton(text="D) –°—Ç–æ–π–∫–æ—Å—Ç—å –°–°–°–† –Ω–∞ –í–æ—Å—Ç–æ—á–Ω–æ–º —Ñ—Ä–æ–Ω—Ç–µ...", callback_data="hist-q4-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q4-result")
async def handle_callback_hist_q4_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Å–æ—é–∑–Ω–∏–∫–æ–≤

B) –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –°–®–ê –≤ –≤–æ–π–Ω—É

C) –û—Ç–∫—Ä—ã—Ç–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–∞

D) –°—Ç–æ–π–∫–æ—Å—Ç—å –°–°–°–† –Ω–∞ –í–æ—Å—Ç–æ—á–Ω–æ–º —Ñ—Ä–æ–Ω—Ç–µ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 4/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q5"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q5")
async def handle_callback_hist_q5(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 5/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –∫—Ä–∞—Ö–∞ –∫–æ–ª–æ–Ω–∏–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ-–æ—Å–≤–æ–±–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏...", callback_data="hist-q5-result"))
    builder.add(InlineKeyboardButton(text="B) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –Ω–µ—Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–æ—Å—Ç—å –∫–æ...", callback_data="hist-q5-result"))
    builder.add(InlineKeyboardButton(text="C) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–æ–ø–æ–ª–∏–π –ø–æ—Å–ª–µ –≤–æ–π–Ω...", callback_data="hist-q5-result"))
    builder.add(InlineKeyboardButton(text="D) –î–∞–≤–ª–µ–Ω–∏–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞...", callback_data="hist-q5-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q5-result")
async def handle_callback_hist_q5_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ-–æ—Å–≤–æ–±–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è

B) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –Ω–µ—Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–æ—Å—Ç—å –∫–æ–ª–æ–Ω–∏–π

C) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–æ–ø–æ–ª–∏–π –ø–æ—Å–ª–µ –≤–æ–π–Ω

D) –î–∞–≤–ª–µ–Ω–∏–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 5/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q6"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q6")
async def handle_callback_hist_q6(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 6/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —Ñ–µ–æ–¥–∞–ª–∏–∑–º –∫–∞–∫ —Å–∏—Å—Ç–µ–º—É?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –õ–∏—á–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –≤–∞—Å—Å–∞–ª–∏—Ç–µ—Ç–∞...", callback_data="hist-q6-result"))
    builder.add(InlineKeyboardButton(text="B) –ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ –∏ –∑–∞–º–∫–Ω—É—Ç–æ—Å—Ç—å...", callback_data="hist-q6-result"))
    builder.add(InlineKeyboardButton(text="C) –°–æ—Å–ª–æ–≤–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è –æ–±—â–µ—Å—Ç–≤–∞...", callback_data="hist-q6-result"))
    builder.add(InlineKeyboardButton(text="D) –ó–µ–º–ª—è –∫–∞–∫ –æ—Å–Ω–æ–≤–∞ –≤–ª–∞—Å—Ç–∏ –∏ –±–æ–≥–∞—Ç—Å—Ç–≤–∞...", callback_data="hist-q6-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q6-result")
async def handle_callback_hist_q6_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –õ–∏—á–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –≤–∞—Å—Å–∞–ª–∏—Ç–µ—Ç–∞

B) –ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ –∏ –∑–∞–º–∫–Ω—É—Ç–æ—Å—Ç—å

C) –°–æ—Å–ª–æ–≤–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è –æ–±—â–µ—Å—Ç–≤–∞

D) –ó–µ–º–ª—è –∫–∞–∫ –æ—Å–Ω–æ–≤–∞ –≤–ª–∞—Å—Ç–∏ –∏ –±–æ–≥–∞—Ç—Å—Ç–≤–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 6/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q7"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q7")
async def handle_callback_hist_q7(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 7/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–∏–µ –í–∏–∑–∞–Ω—Ç–∏–π—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω—Ç–∏—á–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è...", callback_data="hist-q7-result"))
    builder.add(InlineKeyboardButton(text="B) –ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–µ —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–æ...", callback_data="hist-q7-result"))
    builder.add(InlineKeyboardButton(text="C) –î–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏...", callback_data="hist-q7-result"))
    builder.add(InlineKeyboardButton(text="D) –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞...", callback_data="hist-q7-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q7-result")
async def handle_callback_hist_q7_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω—Ç–∏—á–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è

B) –ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–µ —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–æ

C) –î–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏

D) –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 7/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q8"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q8")
async def handle_callback_hist_q8(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 8/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ –í–µ–ª–∏–∫–æ–π —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–π —Ä–µ–≤–æ–ª—é—Ü–∏–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫—Ä–∏–∑–∏—Å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞...", callback_data="hist-q8-result"))
    builder.add(InlineKeyboardButton(text="B) –ò–¥–µ–∏ –ü—Ä–æ—Å–≤–µ—â–µ–Ω–∏—è –∏ –ª–∏–±–µ—Ä–∞–ª–∏–∑–º...", callback_data="hist-q8-result"))
    builder.add(InlineKeyboardButton(text="C) –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏...", callback_data="hist-q8-result"))
    builder.add(InlineKeyboardButton(text="D) –°–ª–∞–±–æ—Å—Ç—å –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –≤–ª–∞—Å—Ç–∏...", callback_data="hist-q8-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q8-result")
async def handle_callback_hist_q8_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫—Ä–∏–∑–∏—Å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞

B) –ò–¥–µ–∏ –ü—Ä–æ—Å–≤–µ—â–µ–Ω–∏—è –∏ –ª–∏–±–µ—Ä–∞–ª–∏–∑–º

C) –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏

D) –°–ª–∞–±–æ—Å—Ç—å –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –≤–ª–∞—Å—Ç–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 8/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q9"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q9")
async def handle_callback_hist_q9(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 9/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω—ã–π –∏—Ç–æ–≥ –í–µ–ª–∏–∫–∏—Ö –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö –∫–æ–ª–æ–Ω–∏–∞–ª—å–Ω—ã—Ö –∏–º–ø–µ—Ä–∏...", callback_data="hist-q9-result"))
    builder.add(InlineKeyboardButton(text="B) –†–µ–≤–æ–ª—é—Ü–∏—è –≤ –º–∏—Ä–æ–≤–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ...", callback_data="hist-q9-result"))
    builder.add(InlineKeyboardButton(text="C) –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–Ω–∏–π...", callback_data="hist-q9-result"))
    builder.add(InlineKeyboardButton(text="D) –ù–∞—á–∞–ª–æ –≥–ª–æ–±–∞–ª–∏–∑–∞—Ü–∏–∏ –º–∏—Ä–∞...", callback_data="hist-q9-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q9-result")
async def handle_callback_hist_q9_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö –∫–æ–ª–æ–Ω–∏–∞–ª—å–Ω—ã—Ö –∏–º–ø–µ—Ä–∏–π

B) –†–µ–≤–æ–ª—é—Ü–∏—è –≤ –º–∏—Ä–æ–≤–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ

C) –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–Ω–∏–π

D) –ù–∞—á–∞–ª–æ –≥–ª–æ–±–∞–ª–∏–∑–∞—Ü–∏–∏ –º–∏—Ä–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 9/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q10"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q10")
async def handle_callback_hist_q10(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 10/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–æ –ø–æ–±–µ–¥—É –±–æ–ª—å—à–µ–≤–∏–∫–æ–≤ –≤ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π –≤–æ–π–Ω–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–º–∏ —Ü–µ–Ω—Ç—Ä–∞–º–∏...", callback_data="hist-q10-result"))
    builder.add(InlineKeyboardButton(text="B) –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—Ä–µ—Å—Ç—å—è–Ω—Å—Ç–≤–∞...", callback_data="hist-q10-result"))
    builder.add(InlineKeyboardButton(text="C) –û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∏ –µ–¥–∏–Ω–æ–µ –∫–æ–º–∞–Ω–¥–æ–≤–∞...", callback_data="hist-q10-result"))
    builder.add(InlineKeyboardButton(text="D) –°–ª–∞–±–æ—Å—Ç—å –∏ —Ä–∞–∑–æ–±—â–µ–Ω–Ω–æ—Å—Ç—å –±–µ–ª—ã—Ö...", callback_data="hist-q10-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q10-result")
async def handle_callback_hist_q10_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–º–∏ —Ü–µ–Ω—Ç—Ä–∞–º–∏

B) –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—Ä–µ—Å—Ç—å—è–Ω—Å—Ç–≤–∞

C) –û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∏ –µ–¥–∏–Ω–æ–µ –∫–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏–µ

D) –°–ª–∞–±–æ—Å—Ç—å –∏ —Ä–∞–∑–æ–±—â–µ–Ω–Ω–æ—Å—Ç—å –±–µ–ª—ã—Ö

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 10/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q11"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q11")
async def handle_callback_hist_q11(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 11/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ —Ä–∞—Å–ø–∞–¥–∞ –°–°–°–†:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å —Å–∏—Å—Ç–µ–º—ã...", callback_data="hist-q11-result"))
    builder.add(InlineKeyboardButton(text="B) –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è...", callback_data="hist-q11-result"))
    builder.add(InlineKeyboardButton(text="C) –ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º...", callback_data="hist-q11-result"))
    builder.add(InlineKeyboardButton(text="D) –î–∞–≤–ª–µ–Ω–∏–µ –ó–∞–ø–∞–¥–∞ –≤ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–π–Ω–µ...", callback_data="hist-q11-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q11-result")
async def handle_callback_hist_q11_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å —Å–∏—Å—Ç–µ–º—ã

B) –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è

C) –ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã

D) –î–∞–≤–ª–µ–Ω–∏–µ –ó–∞–ø–∞–¥–∞ –≤ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–π–Ω–µ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 11/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q12"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q12")
async def handle_callback_hist_q12(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 12/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ –Ω–∞—á–∞–ª—É –†–µ–Ω–µ—Å—Å–∞–Ω—Å–∞ –≤ –ò—Ç–∞–ª–∏–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –ø–æ–¥—ä–µ–º –≥–æ—Ä–æ–¥–æ–≤-–≥–æ—Å—É–¥–∞...", callback_data="hist-q12-result"))
    builder.add(InlineKeyboardButton(text="B) –ü–∞–¥–µ–Ω–∏–µ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–ø–æ–ª—è –∏ –ø—Ä–∏—Ç–æ–∫ —É—á...", callback_data="hist-q12-result"))
    builder.add(InlineKeyboardButton(text="C) –ü–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Ü–µ—Ä–∫–≤–∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞–º...", callback_data="hist-q12-result"))
    builder.add(InlineKeyboardButton(text="D) –û—Ç–∫—Ä—ã—Ç–∏–µ –∞–Ω—Ç–∏—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤...", callback_data="hist-q12-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q12-result")
async def handle_callback_hist_q12_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –ø–æ–¥—ä–µ–º –≥–æ—Ä–æ–¥–æ–≤-–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤

B) –ü–∞–¥–µ–Ω–∏–µ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–ø–æ–ª—è –∏ –ø—Ä–∏—Ç–æ–∫ —É—á–µ–Ω—ã—Ö

C) –ü–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Ü–µ—Ä–∫–≤–∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞–º

D) –û—Ç–∫—Ä—ã—Ç–∏–µ –∞–Ω—Ç–∏—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 12/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q13"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q13")
async def handle_callback_hist_q13(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 13/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –†–µ—Ñ–æ—Ä–º–∞—Ü–∏–∏:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–µ–ª–∏–≥–∏–æ–∑–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–∞...", callback_data="hist-q13-result"))
    builder.add(InlineKeyboardButton(text="B) –ü–æ–¥—Ä—ã–≤ –≤–ª–∞—Å—Ç–∏ –∫–∞—Ç–æ–ª–∏—á–µ—Å–∫–æ–π —Ü–µ—Ä–∫–≤–∏...", callback_data="hist-q13-result"))
    builder.add(InlineKeyboardButton(text="C) –†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä...", callback_data="hist-q13-result"))
    builder.add(InlineKeyboardButton(text="D) –°—Ç–∏–º—É–ª –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –∫–∞–ø–∏—Ç–∞–ª–∏–∑–º–∞...", callback_data="hist-q13-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q13-result")
async def handle_callback_hist_q13_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –†–µ–ª–∏–≥–∏–æ–∑–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–∞

B) –ü–æ–¥—Ä—ã–≤ –≤–ª–∞—Å—Ç–∏ –∫–∞—Ç–æ–ª–∏—á–µ—Å–∫–æ–π —Ü–µ—Ä–∫–≤–∏

C) –†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä

D) –°—Ç–∏–º—É–ª –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –∫–∞–ø–∏—Ç–∞–ª–∏–∑–º–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 13/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q14"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q14")
async def handle_callback_hist_q14(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 14/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–æ –∏—Å—Ö–æ–¥ –°—Ç–æ–ª–µ—Ç–Ω–µ–π –≤–æ–π–Ω—ã?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –í–æ–µ–Ω–Ω—ã–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ (–∞—Ä—Ç–∏–ª–ª–µ—Ä–∏—è, —Ç–∞–∫—Ç...", callback_data="hist-q14-result"))
    builder.add(InlineKeyboardButton(text="B) –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—ä–µ–º –§—Ä–∞–Ω—Ü–∏–∏...", callback_data="hist-q14-result"))
    builder.add(InlineKeyboardButton(text="C) –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –ê–Ω–≥–ª–∏–∏...", callback_data="hist-q14-result"))
    builder.add(InlineKeyboardButton(text="D) –†–æ–ª—å –ñ–∞–Ω–Ω—ã –¥'–ê—Ä–∫ –≤ –º–æ–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Ñ—Ä–∞–Ω...", callback_data="hist-q14-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q14-result")
async def handle_callback_hist_q14_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –í–æ–µ–Ω–Ω—ã–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ (–∞—Ä—Ç–∏–ª–ª–µ—Ä–∏—è, —Ç–∞–∫—Ç–∏–∫–∞)

B) –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—ä–µ–º –§—Ä–∞–Ω—Ü–∏–∏

C) –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –ê–Ω–≥–ª–∏–∏

D) –†–æ–ª—å –ñ–∞–Ω–Ω—ã –¥'–ê—Ä–∫ –≤ –º–æ–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Ñ—Ä–∞–Ω—Ü—É–∑–æ–≤

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 14/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q15"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q15")
async def handle_callback_hist_q15(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 15/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –∫—Ä–µ—Å—Ç–æ–≤—ã—Ö –ø–æ—Ö–æ–¥–æ–≤:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–µ–ª–∏–≥–∏–æ–∑–Ω—ã–π —Ñ–∞–Ω–∞—Ç–∏–∑–º –∏ –∂–µ–ª–∞–Ω–∏–µ –æ—Å–≤–æ...", callback_data="hist-q15-result"))
    builder.add(InlineKeyboardButton(text="B) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏—Ö ...", callback_data="hist-q15-result"))
    builder.add(InlineKeyboardButton(text="C) –°—Ç—Ä–µ–º–ª–µ–Ω–∏–µ —Ä—ã—Ü–∞—Ä—Å—Ç–≤–∞ –∫ –Ω–∞–∂–∏–≤–µ –∏ –∑–µ–º...", callback_data="hist-q15-result"))
    builder.add(InlineKeyboardButton(text="D) –ü–æ–ø—ã—Ç–∫–∞ —Ü–µ—Ä–∫–≤–∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å...", callback_data="hist-q15-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q15-result")
async def handle_callback_hist_q15_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –†–µ–ª–∏–≥–∏–æ–∑–Ω—ã–π —Ñ–∞–Ω–∞—Ç–∏–∑–º –∏ –∂–µ–ª–∞–Ω–∏–µ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –°–≤—è—Ç—É—é –∑–µ–º–ª—é

B) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏—Ö –≥–æ—Ä–æ–¥–æ–≤

C) –°—Ç—Ä–µ–º–ª–µ–Ω–∏–µ —Ä—ã—Ü–∞—Ä—Å—Ç–≤–∞ –∫ –Ω–∞–∂–∏–≤–µ –∏ –∑–µ–º–ª—è–º

D) –ü–æ–ø—ã—Ç–∫–∞ —Ü–µ—Ä–∫–≤–∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å–∫–∏–π –º–∏—Ä

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 15/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q16"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q16")
async def handle_callback_hist_q16(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 16/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —ç–ø–æ—Ö—É –∞–±—Å–æ–ª—é—Ç–∏–∑–º–∞?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –≤–ª–∞—Å—Ç–∏ –≤ —Ä—É–∫–∞—Ö –º–æ–Ω–∞—Ä—Ö–∞...", callback_data="hist-q16-result"))
    builder.add(InlineKeyboardButton(text="B) –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –±—é—Ä–æ–∫—Ä–∞—Ç–∏...", callback_data="hist-q16-result"))
    builder.add(InlineKeyboardButton(text="C) –ü–æ–¥—á–∏–Ω–µ–Ω–∏–µ —Ü–µ—Ä–∫–≤–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤—É...", callback_data="hist-q16-result"))
    builder.add(InlineKeyboardButton(text="D) –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —ç–∫–æ–Ω–æ–º–∏–∫–æ–π (–º–µ—Ä–∫–∞–Ω—Ç–∏–ª–∏...", callback_data="hist-q16-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q16-result")
async def handle_callback_hist_q16_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –≤–ª–∞—Å—Ç–∏ –≤ —Ä—É–∫–∞—Ö –º–æ–Ω–∞—Ä—Ö–∞

B) –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –±—é—Ä–æ–∫—Ä–∞—Ç–∏–∏

C) –ü–æ–¥—á–∏–Ω–µ–Ω–∏–µ —Ü–µ—Ä–∫–≤–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤—É

D) –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —ç–∫–æ–Ω–æ–º–∏–∫–æ–π (–º–µ—Ä–∫–∞–Ω—Ç–∏–ª–∏–∑–º)

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 16/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q17"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q17")
async def handle_callback_hist_q17(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 17/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–æ–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Ä–µ–≤–æ–ª—é—Ü–∏–∏:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –∫–ª–∞—Å—Å–∞...", callback_data="hist-q17-result"))
    builder.add(InlineKeyboardButton(text="B) –£—Ä–±–∞–Ω–∏–∑–∞—Ü–∏—è –∏ —Ä–æ—Å—Ç –≥–æ—Ä–æ–¥–æ–≤...", callback_data="hist-q17-result"))
    builder.add(InlineKeyboardButton(text="C) –†–µ–≤–æ–ª—é—Ü–∏—è –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ –∏ —Å–≤—è–∑–∏...", callback_data="hist-q17-result"))
    builder.add(InlineKeyboardButton(text="D) –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...", callback_data="hist-q17-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q17-result")
async def handle_callback_hist_q17_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –∫–ª–∞—Å—Å–∞

B) –£—Ä–±–∞–Ω–∏–∑–∞—Ü–∏—è –∏ —Ä–æ—Å—Ç –≥–æ—Ä–æ–¥–æ–≤

C) –†–µ–≤–æ–ª—é—Ü–∏—è –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ –∏ —Å–≤—è–∑–∏

D) –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 17/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q18"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q18")
async def handle_callback_hist_q18(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 18/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ –Ω–∞—á–∞–ª—É —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–π–Ω—ã?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ò–¥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –°–°–°–† –∏ ...", callback_data="hist-q18-result"))
    builder.add(InlineKeyboardButton(text="B) –†–∞–∑–¥–µ–ª —Å—Ñ–µ—Ä –≤–ª–∏—è–Ω–∏—è –≤ –ï–≤—Ä–æ–ø–µ...", callback_data="hist-q18-result"))
    builder.add(InlineKeyboardButton(text="C) –Ø–¥–µ—Ä–Ω–æ–µ –æ—Ä—É–∂–∏–µ –∏ –±–∞–ª–∞–Ω—Å —Å—Ç—Ä–∞—Ö–∞...", callback_data="hist-q18-result"))
    builder.add(InlineKeyboardButton(text="D) –ë–æ—Ä—å–±–∞ –∑–∞ –≤–ª–∏—è–Ω–∏–µ –≤ —Ç—Ä–µ—Ç—å–µ–º –º–∏—Ä–µ...", callback_data="hist-q18-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q18-result")
async def handle_callback_hist_q18_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –ò–¥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –°–°–°–† –∏ –°–®–ê

B) –†–∞–∑–¥–µ–ª —Å—Ñ–µ—Ä –≤–ª–∏—è–Ω–∏—è –≤ –ï–≤—Ä–æ–ø–µ

C) –Ø–¥–µ—Ä–Ω–æ–µ –æ—Ä—É–∂–∏–µ –∏ –±–∞–ª–∞–Ω—Å —Å—Ç—Ä–∞—Ö–∞

D) –ë–æ—Ä—å–±–∞ –∑–∞ –≤–ª–∏—è–Ω–∏–µ –≤ —Ç—Ä–µ—Ç—å–µ–º –º–∏—Ä–µ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 18/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q19"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q19")
async def handle_callback_hist_q19(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 19/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ XX –≤–µ–∫–∞:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –¢–æ—Ç–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –æ–±—â–µ—Å—Ç–≤–æ–º...", callback_data="hist-q19-result"))
    builder.add(InlineKeyboardButton(text="B) –ú–∞—Å—Å–æ–≤—ã–µ —Ä–µ–ø—Ä–µ—Å—Å–∏–∏ –∏ —Ç–µ—Ä—Ä–æ—Ä...", callback_data="hist-q19-result"))
    builder.add(InlineKeyboardButton(text="C) –ò–¥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∏–Ω–¥–æ–∫—Ç—Ä–∏–Ω–∞—Ü–∏—è...", callback_data="hist-q19-result"))
    builder.add(InlineKeyboardButton(text="D) –ö—É–ª—å—Ç –ª–∏—á–Ω–æ—Å—Ç–∏ –ª–∏–¥–µ—Ä–∞...", callback_data="hist-q19-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q19-result")
async def handle_callback_hist_q19_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –¢–æ—Ç–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –æ–±—â–µ—Å—Ç–≤–æ–º

B) –ú–∞—Å—Å–æ–≤—ã–µ —Ä–µ–ø—Ä–µ—Å—Å–∏–∏ –∏ —Ç–µ—Ä—Ä–æ—Ä

C) –ò–¥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∏–Ω–¥–æ–∫—Ç—Ä–∏–Ω–∞—Ü–∏—è

D) –ö—É–ª—å—Ç –ª–∏—á–Ω–æ—Å—Ç–∏ –ª–∏–¥–µ—Ä–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 19/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q20"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q20")
async def handle_callback_hist_q20(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 20/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–æ –±—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –°–®–ê –≤ XIX –≤–µ–∫–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è —ç–∫—Å–ø–∞–Ω—Å–∏—è –Ω–∞ –∑–∞–ø–∞–¥...", callback_data="hist-q20-result"))
    builder.add(InlineKeyboardButton(text="B) –ú–∞—Å—Å–æ–≤–∞—è –∏–º–º–∏–≥—Ä–∞—Ü–∏—è –∏–∑ –ï–≤—Ä–æ–ø—ã...", callback_data="hist-q20-result"))
    builder.add(InlineKeyboardButton(text="C) –ü—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ –≥–µ–æ–≥—Ä–∞—Ñ–∏—è...", callback_data="hist-q20-result"))
    builder.add(InlineKeyboardButton(text="D) –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ —Ñ–µ–¥–µ—Ä–∞–ª...", callback_data="hist-q20-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q20-result")
async def handle_callback_hist_q20_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è —ç–∫—Å–ø–∞–Ω—Å–∏—è –Ω–∞ –∑–∞–ø–∞–¥

B) –ú–∞—Å—Å–æ–≤–∞—è –∏–º–º–∏–≥—Ä–∞—Ü–∏—è –∏–∑ –ï–≤—Ä–æ–ø—ã

C) –ü—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ –≥–µ–æ–≥—Ä–∞—Ñ–∏—è

D) –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ —Ñ–µ–¥–µ—Ä–∞–ª–∏–∑–º

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 20/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q21"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q21")
async def handle_callback_hist_q21(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 21/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –¥–µ–∫–æ–ª–æ–Ω–∏–∑–∞—Ü–∏–∏ –ê—Ñ—Ä–∏–∫–∏:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–æ—Å—Ç –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è...", callback_data="hist-q21-result"))
    builder.add(InlineKeyboardButton(text="B) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –º–µ—Ç—Ä–æ–ø–æ–ª–∏–π...", callback_data="hist-q21-result"))
    builder.add(InlineKeyboardButton(text="C) –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤–µ—Ä—Ö–¥–µ—Ä–∂–∞–≤ –≤ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ...", callback_data="hist-q21-result"))
    builder.add(InlineKeyboardButton(text="D) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –Ω–µ—Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–ª–æ...", callback_data="hist-q21-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q21-result")
async def handle_callback_hist_q21_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –†–æ—Å—Ç –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è

B) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –º–µ—Ç—Ä–æ–ø–æ–ª–∏–π

C) –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤–µ—Ä—Ö–¥–µ—Ä–∂–∞–≤ –≤ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–π–Ω–µ

D) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –Ω–µ—Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–ª–æ–Ω–∏–π

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 21/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q22"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q22")
async def handle_callback_hist_q22(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 22/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —ç–ø–æ—Ö—É –í–µ–ª–∏–∫–æ–≥–æ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∏—è –Ω–∞—Ä–æ–¥–æ–≤?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø–ª–µ–º–µ–Ω –ø–æ–¥ –¥–∞–≤–ª–µ–Ω–∏–µ–º –≥—É–Ω–Ω–æ...", callback_data="hist-q22-result"))
    builder.add(InlineKeyboardButton(text="B) –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –≥–æ–ª–æ–¥...", callback_data="hist-q22-result"))
    builder.add(InlineKeyboardButton(text="C) –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –ø–ª–æ–¥–æ—Ä–æ–¥–Ω—ã—Ö –∑–µ–º–µ–ª—å...", callback_data="hist-q22-result"))
    builder.add(InlineKeyboardButton(text="D) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ –†–∏–º—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏...", callback_data="hist-q22-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q22-result")
async def handle_callback_hist_q22_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø–ª–µ–º–µ–Ω –ø–æ–¥ –¥–∞–≤–ª–µ–Ω–∏–µ–º –≥—É–Ω–Ω–æ–≤

B) –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –≥–æ–ª–æ–¥

C) –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –ø–ª–æ–¥–æ—Ä–æ–¥–Ω—ã—Ö –∑–µ–º–µ–ª—å

D) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ –†–∏–º—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 22/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q23"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q23")
async def handle_callback_hist_q23(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 23/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è –∫–Ω–∏–≥–æ–ø–µ—á–∞—Ç–∞–Ω–∏—è:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –î–µ–º–æ–∫—Ä–∞—Ç–∏–∑–∞—Ü–∏—è –∑–Ω–∞–Ω–∏–π...", callback_data="hist-q23-result"))
    builder.add(InlineKeyboardButton(text="B) –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤...", callback_data="hist-q23-result"))
    builder.add(InlineKeyboardButton(text="C) –£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∏–¥–µ–π...", callback_data="hist-q23-result"))
    builder.add(InlineKeyboardButton(text="D) –†–µ–≤–æ–ª—é—Ü–∏—è –≤ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏...", callback_data="hist-q23-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q23-result")
async def handle_callback_hist_q23_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –î–µ–º–æ–∫—Ä–∞—Ç–∏–∑–∞—Ü–∏—è –∑–Ω–∞–Ω–∏–π

B) –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤

C) –£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∏–¥–µ–π

D) –†–µ–≤–æ–ª—é—Ü–∏—è –≤ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 23/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q24"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q24")
async def handle_callback_hist_q24(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 24/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ß—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ –∫—Ä–∏–∑–∏—Å—É —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞?**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –î–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å (—á—É–º–∞, –≥–æ–ª–æ–¥...", callback_data="hist-q24-result"))
    builder.add(InlineKeyboardButton(text="B) –†–æ—Å—Ç –≥–æ—Ä–æ–¥–æ–≤ –∏ —Ç–æ—Ä–≥–æ–≤–ª–∏...", callback_data="hist-q24-result"))
    builder.add(InlineKeyboardButton(text="C) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ —Ñ–µ–æ–¥–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...", callback_data="hist-q24-result"))
    builder.add(InlineKeyboardButton(text="D) –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–º–∞–ª—ã–π –ª–µ–¥–Ω...", callback_data="hist-q24-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q24-result")
async def handle_callback_hist_q24_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –î–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å (—á—É–º–∞, –≥–æ–ª–æ–¥)

B) –†–æ—Å—Ç –≥–æ—Ä–æ–¥–æ–≤ –∏ —Ç–æ—Ä–≥–æ–≤–ª–∏

C) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ —Ñ–µ–æ–¥–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

D) –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–º–∞–ª—ã–π –ª–µ–¥–Ω–∏–∫–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥)

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 24/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="hist-q25"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q25")
async def handle_callback_hist_q25(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìú **–í–û–ü–†–û–° 25/25** (–ò—Å—Ç–æ—Ä–∏—è)

**–ì–ª–∞–≤–Ω—ã–π —É—Ä–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ XX –≤–µ–∫–∞:**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –û–ø–∞—Å–Ω–æ—Å—Ç—å —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–∏–∑–º–∞ –∏ –¥–∏–∫—Ç–∞—Ç—É—Ä...", callback_data="hist-q25-result"))
    builder.add(InlineKeyboardButton(text="B) –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥...", callback_data="hist-q25-result"))
    builder.add(InlineKeyboardButton(text="C) –í–∞–∂–Ω–æ—Å—Ç—å –∑–∞—â–∏—Ç—ã –ø—Ä–∞–≤ —á–µ–ª–æ–≤–µ–∫–∞...", callback_data="hist-q25-result"))
    builder.add(InlineKeyboardButton(text="D) –í–∑–∞–∏–º–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –º–∏—Ä–∞...", callback_data="hist-q25-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "hist-q25-result")
async def handle_callback_hist_q25_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω!**

**–ü–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

A) –û–ø–∞—Å–Ω–æ—Å—Ç—å —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–∏–∑–º–∞ –∏ –¥–∏–∫—Ç–∞—Ç—É—Ä

B) –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞

C) –í–∞–∂–Ω–æ—Å—Ç—å –∑–∞—â–∏—Ç—ã –ø—Ä–∞–≤ —á–µ–ª–æ–≤–µ–∫–∞

D) –í–∑–∞–∏–º–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –º–∏—Ä–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 25/25 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="ü§î –ö –±–ª–æ–∫—É –§–∏–ª–æ—Å–æ—Ñ–∏—è", callback_data="philosophy-intro"))
    builder.add(InlineKeyboardButton(text="ü§î –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", callback_data="philosophy-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q1")
async def handle_callback_phil_q1(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 1/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–æ–π –º–æ—Ä–∞–ª—å–Ω—ã—Ö —Å—É–∂–¥–µ–Ω–∏–π?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –í—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –º–æ—Ä–∞–ª—å–Ω—ã–µ –∏–Ω—Ç—É–∏—Ü–∏–∏...", callback_data="phil-q1-result"))
    builder.add(InlineKeyboardButton(text="B) –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –¥–µ–π—Å—Ç–≤–∏–π (—É—Ç–∏–ª–∏—Ç–∞—Ä...", callback_data="phil-q1-result"))
    builder.add(InlineKeyboardButton(text="C) –î–æ–ª–≥ –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã...", callback_data="phil-q1-result"))
    builder.add(InlineKeyboardButton(text="D) –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∏ –∫—É–ª—å—Ç—É...", callback_data="phil-q1-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "sociology-intro")
async def handle_callback_sociology_intro(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–ë–õ–û–ö –ì: –°–û–¶–ò–û–õ–û–ì–ò–Ø**

**–ò–∑—É—á–∞–µ–º –≤–∞—à–∏ –≤–∑–≥–ª—è–¥—ã –Ω–∞ –æ–±—â–µ—Å—Ç–≤–æ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã**

–í —ç—Ç–æ–º –±–ª–æ–∫–µ 20 –≤–æ–ø—Ä–æ—Å–æ–≤ –æ:
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–æ–º –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–µ –∏ —Å—Ç—Ä–∞—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
‚Ä¢ –ì–ª–æ–±–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
‚Ä¢ –ú–µ–∂–≥—Ä—É–ø–ø–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö
‚Ä¢ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ –±—É–¥—É—â–µ–º –æ–±—â–µ—Å—Ç–≤–∞
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏

**–ì–æ—Ç–æ–≤—ã –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É?**"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üåç –ù–∞—á–∞—Ç—å —Å–æ—Ü–∏–æ–±–ª–æ–∫", callback_data="soc-q1"))
    builder.add(InlineKeyboardButton(text="üìä –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q1-result")
async def handle_callback_phil_q1_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –í—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –º–æ—Ä–∞–ª—å–Ω—ã–µ –∏–Ω—Ç—É–∏—Ü–∏–∏

B) –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –¥–µ–π—Å—Ç–≤–∏–π (—É—Ç–∏–ª–∏—Ç–∞—Ä–∏–∑–º)

C) –î–æ–ª–≥ –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã

D) –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∏ –∫—É–ª—å—Ç—É—Ä–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 1/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q2"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q2")
async def handle_callback_phil_q2(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 2/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –≤ –∫–æ–Ω–µ—á–Ω–æ–º —Å—á–µ—Ç–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ú–∞—Ç–µ—Ä–∏—è –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...", callback_data="phil-q2-result"))
    builder.add(InlineKeyboardButton(text="B) –ò–¥–µ–∏ –∏ –º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç—ã...", callback_data="phil-q2-result"))
    builder.add(InlineKeyboardButton(text="C) –≠–Ω–µ—Ä–≥–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è...", callback_data="phil-q2-result"))
    builder.add(InlineKeyboardButton(text="D) –ù–µ–ø–æ–∑–Ω–∞–≤–∞–µ–º–∞—è –≤–µ—â—å-–≤-—Å–µ–±–µ...", callback_data="phil-q2-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q2-result")
async def handle_callback_phil_q2_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –ú–∞—Ç–µ—Ä–∏—è –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã

B) –ò–¥–µ–∏ –∏ –º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç—ã

C) –≠–Ω–µ—Ä–≥–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

D) –ù–µ–ø–æ–∑–Ω–∞–≤–∞–µ–º–∞—è –≤–µ—â—å-–≤-—Å–µ–±–µ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 2/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q3"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q3")
async def handle_callback_phil_q3(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 3/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ï—Å—Ç—å –ª–∏ —É —á–µ–ª–æ–≤–µ–∫–∞ —Å–≤–æ–±–æ–¥–∞ –≤–æ–ª–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –î–∞, —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–≤–æ–±–æ–¥–µ–Ω...", callback_data="phil-q3-result"))
    builder.add(InlineKeyboardButton(text="B) –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Å–≤–æ–±–æ–¥–∞ –≤ —Ä–∞–º–∫–∞—Ö ...", callback_data="phil-q3-result"))
    builder.add(InlineKeyboardButton(text="C) –ò–ª–ª—é–∑–∏—è —Å–≤–æ–±–æ–¥—ã, –≤—Å–µ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥...", callback_data="phil-q3-result"))
    builder.add(InlineKeyboardButton(text="D) –°–≤–æ–±–æ–¥–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É...", callback_data="phil-q3-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q3-result")
async def handle_callback_phil_q3_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –î–∞, —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–≤–æ–±–æ–¥–µ–Ω –≤ –≤—ã–±–æ—Ä–µ

B) –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Å–≤–æ–±–æ–¥–∞ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–∏—á–∏–Ω–Ω–æ—Å—Ç–∏

C) –ò–ª–ª—é–∑–∏—è —Å–≤–æ–±–æ–¥—ã, –≤—Å–µ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ

D) –°–≤–æ–±–æ–¥–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω—è—Ö —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 3/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q4"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q4")
async def handle_callback_phil_q4(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 4/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–í —á–µ–º —Å–º—ã—Å–ª —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –í –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å—á–∞—Å—Ç—å—è –∏ —É–¥–æ–≤–æ–ª—å...", callback_data="phil-q4-result"))
    builder.add(InlineKeyboardButton(text="B) –í —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –∏ —Å–∞–º–æ...", callback_data="phil-q4-result"))
    builder.add(InlineKeyboardButton(text="C) –í —Å–ª—É–∂–µ–Ω–∏–∏ –≤—ã—Å—à–∏–º –∏–¥–µ–∞–ª–∞–º...", callback_data="phil-q4-result"))
    builder.add(InlineKeyboardButton(text="D) –°–º—ã—Å–ª —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–∞–º–∏–º —á–µ–ª–æ–≤–µ–∫–æ...", callback_data="phil-q4-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q4-result")
async def handle_callback_phil_q4_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –í –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å—á–∞—Å—Ç—å—è –∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è

B) –í —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –∏ —Å–∞–º–æ–∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏

C) –í —Å–ª—É–∂–µ–Ω–∏–∏ –≤—ã—Å—à–∏–º –∏–¥–µ–∞–ª–∞–º

D) –°–º—ã—Å–ª —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–∞–º–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 4/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q5"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q5")
async def handle_callback_phil_q5(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 5/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ö–∞–∫ –º—ã –º–æ–∂–µ–º –ø–æ–∑–Ω–∞—Ç—å –∏—Å—Ç–∏–Ω—É?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ß–µ—Ä–µ–∑ —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –∏ –Ω–∞–±–ª—é...", callback_data="phil-q5-result"))
    builder.add(InlineKeyboardButton(text="B) –ß–µ—Ä–µ–∑ —Ä–∞–∑—É–º –∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ...", callback_data="phil-q5-result"))
    builder.add(InlineKeyboardButton(text="C) –ß–µ—Ä–µ–∑ –∏–Ω—Ç—É–∏—Ü–∏—é –∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏–µ...", callback_data="phil-q5-result"))
    builder.add(InlineKeyboardButton(text="D) –ò—Å—Ç–∏–Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞ –∏ –∑–∞–≤–∏—Å–∏—Ç ...", callback_data="phil-q5-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q5-result")
async def handle_callback_phil_q5_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –ß–µ—Ä–µ–∑ —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ

B) –ß–µ—Ä–µ–∑ —Ä–∞–∑—É–º –∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ

C) –ß–µ—Ä–µ–∑ –∏–Ω—Ç—É–∏—Ü–∏—é –∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏–µ

D) –ò—Å—Ç–∏–Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞ –∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 5/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q6"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q6")
async def handle_callback_phil_q6(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 6/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ß—Ç–æ –æ–ø—Ä–∞–≤–¥—ã–≤–∞–µ—Ç –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫—É—é –≤–ª–∞—Å—Ç—å?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –∏ —Å–æ–≥–ª–∞—Å–∏...", callback_data="phil-q6-result"))
    builder.add(InlineKeyboardButton(text="B) –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏...", callback_data="phil-q6-result"))
    builder.add(InlineKeyboardButton(text="C) –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–∏ –ø–æ...", callback_data="phil-q6-result"))
    builder.add(InlineKeyboardButton(text="D) –¢—Ä–∞–¥–∏—Ü–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –ª–µ–≥–∏—Ç–∏...", callback_data="phil-q6-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q6-result")
async def handle_callback_phil_q6_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –∏ —Å–æ–≥–ª–∞—Å–∏–µ –≥—Ä–∞–∂–¥–∞–Ω

B) –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å

C) –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–∏ –ø–æ—Ä—è–¥–∫–∞

D) –¢—Ä–∞–¥–∏—Ü–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –ª–µ–≥–∏—Ç–∏–º–Ω–æ—Å—Ç—å

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 6/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q7"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q7")
async def handle_callback_phil_q7(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 7/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –º–æ—Ä–∞–ª—å?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –î–∞, –µ—Å—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–æ—Ä–∞–ª—å–Ω...", callback_data="phil-q7-result"))
    builder.add(InlineKeyboardButton(text="B) –ú–æ—Ä–∞–ª—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö...", callback_data="phil-q7-result"))
    builder.add(InlineKeyboardButton(text="C) –ú–æ—Ä–∞–ª—å - —ç—Ç–æ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –∞–¥–∞–ø...", callback_data="phil-q7-result"))
    builder.add(InlineKeyboardButton(text="D) –ú–æ—Ä–∞–ª—å - —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏...", callback_data="phil-q7-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q7-result")
async def handle_callback_phil_q7_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –î–∞, –µ—Å—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–æ—Ä–∞–ª—å–Ω—ã–µ –∏—Å—Ç–∏–Ω—ã

B) –ú–æ—Ä–∞–ª—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä

C) –ú–æ—Ä–∞–ª—å - —ç—Ç–æ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è

D) –ú–æ—Ä–∞–ª—å - —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 7/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q8"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q8")
async def handle_callback_phil_q8(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 8/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–∞–≤–µ–Ω—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π...", callback_data="phil-q8-result"))
    builder.add(InlineKeyboardButton(text="B) –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Å...", callback_data="phil-q8-result"))
    builder.add(InlineKeyboardButton(text="C) –í–æ–∑–¥–∞—è–Ω–∏–µ –ø–æ –∑–∞—Å–ª—É–≥–∞–º...", callback_data="phil-q8-result"))
    builder.add(InlineKeyboardButton(text="D) –ú–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è –æ–±—â–µ–≥–æ –±–ª–∞–≥–∞...", callback_data="phil-q8-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q8-result")
async def handle_callback_phil_q8_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –†–∞–≤–µ–Ω—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π

B) –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤

C) –í–æ–∑–¥–∞—è–Ω–∏–µ –ø–æ –∑–∞—Å–ª—É–≥–∞–º

D) –ú–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è –æ–±—â–µ–≥–æ –±–ª–∞–≥–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 8/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q9"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q9")
async def handle_callback_phil_q9(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 9/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ö–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è –∫ —Å–º–µ—Ä—Ç–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ü—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ...", callback_data="phil-q9-result"))
    builder.add(InlineKeyboardButton(text="B) –ë–æ—Ä–æ—Ç—å—Å—è –ø—Ä–æ—Ç–∏–≤ –Ω–µ–∏–∑–±–µ–∂–Ω–æ—Å—Ç–∏...", callback_data="phil-q9-result"))
    builder.add(InlineKeyboardButton(text="C) –í–∏–¥–µ—Ç—å –≤ –Ω–µ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–Ω–æ–º—É –±...", callback_data="phil-q9-result"))
    builder.add(InlineKeyboardButton(text="D) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –º–æ—Ç–∏–≤–∞—Ü–∏—é –¥–ª—è...", callback_data="phil-q9-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q9-result")
async def handle_callback_phil_q9_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –ü—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å

B) –ë–æ—Ä–æ—Ç—å—Å—è –ø—Ä–æ—Ç–∏–≤ –Ω–µ–∏–∑–±–µ–∂–Ω–æ—Å—Ç–∏

C) –í–∏–¥–µ—Ç—å –≤ –Ω–µ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–Ω–æ–º—É –±—ã—Ç–∏—é

D) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –º–æ—Ç–∏–≤–∞—Ü–∏—é –¥–ª—è –∂–∏–∑–Ω–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 9/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q10"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q10")
async def handle_callback_phil_q10(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 10/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ß—Ç–æ –≤–∞–∂–Ω–µ–µ: –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏ –æ–±—â–µ—Å—Ç–≤–æ?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ü—Ä–∞–≤–∞ –∏ —Å–≤–æ–±–æ–¥—ã –∏–Ω–¥–∏–≤–∏–¥–∞ –ø—Ä–∏–æ—Ä...", callback_data="phil-q10-result"))
    builder.add(InlineKeyboardButton(text="B) –ë–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ª–∏—á–Ω—ã–º –∏ –æ–±—â–µ—Å—Ç–≤–µ...", callback_data="phil-q10-result"))
    builder.add(InlineKeyboardButton(text="C) –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –±–ª–∞–≥–æ –≤–∞–∂–Ω–µ–µ –ª–∏—á–Ω...", callback_data="phil-q10-result"))
    builder.add(InlineKeyboardButton(text="D) –ò–Ω–¥–∏–≤–∏–¥ –∏ –æ–±—â–µ—Å—Ç–≤–æ –≤–∑–∞–∏–º–Ω–æ –æ–ø—Ä...", callback_data="phil-q10-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q10-result")
async def handle_callback_phil_q10_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –ü—Ä–∞–≤–∞ –∏ —Å–≤–æ–±–æ–¥—ã –∏–Ω–¥–∏–≤–∏–¥–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã

B) –ë–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ª–∏—á–Ω—ã–º –∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º

C) –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –±–ª–∞–≥–æ –≤–∞–∂–Ω–µ–µ –ª–∏—á–Ω–æ–≥–æ

D) –ò–Ω–¥–∏–≤–∏–¥ –∏ –æ–±—â–µ—Å—Ç–≤–æ –≤–∑–∞–∏–º–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 10/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q11"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q11")
async def handle_callback_phil_q11(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 11/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –î–∞, —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ –¥–≤–∏–∂–µ—Ç—Å—è –∫ –ª—É...", callback_data="phil-q11-result"))
    builder.add(InlineKeyboardButton(text="B) –ü—Ä–æ–≥—Ä–µ—Å—Å –µ—Å—Ç—å, –Ω–æ –Ω–µ –ª–∏–Ω–µ–π–Ω—ã–π...", callback_data="phil-q11-result"))
    builder.add(InlineKeyboardButton(text="C) –¶–∏–∫–ª–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–µ–∑ –ø—Ä–æ–≥—Ä...", callback_data="phil-q11-result"))
    builder.add(InlineKeyboardButton(text="D) –ò—Å—Ç–æ—Ä–∏—è —Å–ª—É—á–∞–π–Ω–∞ –∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω...", callback_data="phil-q11-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q11-result")
async def handle_callback_phil_q11_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –î–∞, —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ –¥–≤–∏–∂–µ—Ç—Å—è –∫ –ª—É—á—à–µ–º—É

B) –ü—Ä–æ–≥—Ä–µ—Å—Å –µ—Å—Ç—å, –Ω–æ –Ω–µ –ª–∏–Ω–µ–π–Ω—ã–π

C) –¶–∏–∫–ª–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–µ–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

D) –ò—Å—Ç–æ—Ä–∏—è —Å–ª—É—á–∞–π–Ω–∞ –∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 11/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q12"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q12")
async def handle_callback_phil_q12(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 12/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –∂–∏–∑–Ω—å —Å—Ç–æ—è—â–µ–π?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –£–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –∏ –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ...", callback_data="phil-q12-result"))
    builder.add(InlineKeyboardButton(text="B) –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ...", callback_data="phil-q12-result"))
    builder.add(InlineKeyboardButton(text="C) –õ—é–±–æ–≤—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è...", callback_data="phil-q12-result"))
    builder.add(InlineKeyboardButton(text="D) –ü–æ–∑–Ω–∞–Ω–∏–µ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ...", callback_data="phil-q12-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q12-result")
async def handle_callback_phil_q12_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –£–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –∏ –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ

B) –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ

C) –õ—é–±–æ–≤—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è

D) –ü–æ–∑–Ω–∞–Ω–∏–µ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 12/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q13"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q13")
async def handle_callback_phil_q13(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 13/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ö–∞–∫ —Ä–µ—à–∞—Ç—å —ç—Ç–∏—á–µ—Å–∫–∏–µ –¥–∏–ª–µ–º–º—ã?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è —á–µ—Ç–∫–∏–º–∏ –ø—Ä–∏–Ω...", callback_data="phil-q13-result"))
    builder.add(InlineKeyboardButton(text="B) –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è...", callback_data="phil-q13-result"))
    builder.add(InlineKeyboardButton(text="C) –î–æ–≤–µ—Ä—è—Ç—å –º–æ—Ä–∞–ª—å–Ω–æ–π –∏–Ω—Ç—É–∏—Ü–∏–∏...", callback_data="phil-q13-result"))
    builder.add(InlineKeyboardButton(text="D) –ò—Å–∫–∞—Ç—å –∫–æ–º–ø—Ä–æ–º–∏—Å—Å –∏ –±–∞–ª–∞–Ω—Å...", callback_data="phil-q13-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q13-result")
async def handle_callback_phil_q13_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è —á–µ—Ç–∫–∏–º–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏

B) –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è

C) –î–æ–≤–µ—Ä—è—Ç—å –º–æ—Ä–∞–ª—å–Ω–æ–π –∏–Ω—Ç—É–∏—Ü–∏–∏

D) –ò—Å–∫–∞—Ç—å –∫–æ–º–ø—Ä–æ–º–∏—Å—Å –∏ –±–∞–ª–∞–Ω—Å

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 13/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q14"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q14")
async def handle_callback_phil_q14(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 14/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∞—Å–æ—Ç–∞?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –û–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...", callback_data="phil-q14-result"))
    builder.add(InlineKeyboardButton(text="B) –°—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ...", callback_data="phil-q14-result"))
    builder.add(InlineKeyboardButton(text="C) –ö—É–ª—å—Ç—É—Ä–Ω–æ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä...", callback_data="phil-q14-result"))
    builder.add(InlineKeyboardButton(text="D) –ì–∞—Ä–º–æ–Ω–∏—è –∏ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ —Ñ–æ—Ä–º—ã...", callback_data="phil-q14-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q14-result")
async def handle_callback_phil_q14_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –û–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤

B) –°—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ

C) –ö—É–ª—å—Ç—É—Ä–Ω–æ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç

D) –ì–∞—Ä–º–æ–Ω–∏—è –∏ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ —Ñ–æ—Ä–º—ã

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 14/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="phil-q15"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q15")
async def handle_callback_phil_q15(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """ü§î **–í–û–ü–†–û–° 15/15** (–§–∏–ª–æ—Å–æ—Ñ–∏—è)

**–ö–∞–∫–æ–≤–æ –±—É–¥—É—â–µ–µ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞...", callback_data="phil-q15-result"))
    builder.add(InlineKeyboardButton(text="B) –î—É—Ö–æ–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω...", callback_data="phil-q15-result"))
    builder.add(InlineKeyboardButton(text="C) –°–ª–∏—è–Ω–∏–µ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª...", callback_data="phil-q15-result"))
    builder.add(InlineKeyboardButton(text="D) –¶–∏–∫–ª—ã –ø–æ–¥—ä–µ–º–∞ –∏ —É–ø–∞–¥–∫–∞ —Ü–∏–≤–∏–ª–∏–∑...", callback_data="phil-q15-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "phil-q15-result")
async def handle_callback_phil_q15_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —É—á—Ç–µ–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**

A) –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–µ

B) –î—É—Ö–æ–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ

C) –°–ª–∏—è–Ω–∏–µ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º

D) –¶–∏–∫–ª—ã –ø–æ–¥—ä–µ–º–∞ –∏ —É–ø–∞–¥–∫–∞ —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–π

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 15/15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–ª–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üåç –ö –±–ª–æ–∫—É –°–æ—Ü–∏–æ–ª–æ–≥–∏—è", callback_data="sociology-intro"))
    builder.add(InlineKeyboardButton(text="üåç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏", callback_data="sociology-intro"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q1")
async def handle_callback_soc_q1(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 1/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞:**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–∞–∑–ª–∏—á–∏—è –≤ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è—Ö –∏ —Ç–∞–ª–∞...", callback_data="soc-q1-result"))
    builder.add(InlineKeyboardButton(text="B) –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —ç–∫–æ–Ω–æ–º...", callback_data="soc-q1-result"))
    builder.add(InlineKeyboardButton(text="C) –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ä...", callback_data="soc-q1-result"))
    builder.add(InlineKeyboardButton(text="D) –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã –∏ –Ω–∞—Å–ª–µ–¥–∏...", callback_data="soc-q1-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "final-results")
async def handle_callback_final_results(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üéâ **–ü–û–ó–î–†–ê–í–õ–Ø–ï–ú –° –ó–ê–í–ï–†–®–ï–ù–ò–ï–ú –£–õ–¨–¢–†–ê-–ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –û–ü–†–û–°–ê!**

üìä **–í–ê–®–ò –†–ï–ó–£–õ–¨–¢–ê–¢–´:**

üó≥Ô∏è **–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å:** –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...
üìú **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å:** –û—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è...
ü§î **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã:** –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è...
üåç **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–æ–∑–∏—Ü–∏–∏:** –°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä—É—é—Ç—Å—è...

‚è±Ô∏è **–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:** –í–ø–µ—á–∞—Ç–ª—è—é—â–∞—è —Å—Ç–æ–π–∫–æ—Å—Ç—å!
üéØ **–ü–æ–ª–Ω–æ—Ç–∞ –æ—Ç–≤–µ—Ç–æ–≤:** 80+ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ

**–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≥–æ—Ç–æ–≤–∏—Ç—Å—è...**"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑", callback_data="detailed-analysis"))
    builder.add(InlineKeyboardButton(text="üìö –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="recommendations"))
    builder.add(InlineKeyboardButton(text="üîÑ –ü—Ä–æ–π—Ç–∏ —Å–Ω–æ–≤–∞", callback_data="start-poll"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q1-result")
async def handle_callback_soc_q1_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –†–∞–∑–ª–∏—á–∏—è –≤ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è—Ö –∏ —Ç–∞–ª–∞–Ω—Ç–µ

B) –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã

C) –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è

D) –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã –∏ –Ω–∞—Å–ª–µ–¥–∏–µ –ø—Ä–æ—à–ª–æ–≥–æ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 1/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q2"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q2")
async def handle_callback_soc_q2(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 2/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –≥–ª–æ–±–∞–ª–∏–∑–∞—Ü–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ –º–µ—Å—Ç–Ω—ã–µ –∫—É–ª—å—Ç—É—Ä—ã?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –í–µ–¥–µ—Ç –∫ –∫—É–ª—å—Ç—É—Ä–Ω–æ–π –≥–æ–º–æ–≥–µ–Ω–∏–∑–∞—Ü...", callback_data="soc-q2-result"))
    builder.add(InlineKeyboardButton(text="B) –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥...", callback_data="soc-q2-result"))
    builder.add(InlineKeyboardButton(text="C) –£—Å–∏–ª–∏–≤–∞–µ—Ç –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è ...", callback_data="soc-q2-result"))
    builder.add(InlineKeyboardButton(text="D) –î–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫—É–ª—å—Ç—É—Ä–∞–º —Ä–∞–∑...", callback_data="soc-q2-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q2-result")
async def handle_callback_soc_q2_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –í–µ–¥–µ—Ç –∫ –∫—É–ª—å—Ç—É—Ä–Ω–æ–π –≥–æ–º–æ–≥–µ–Ω–∏–∑–∞—Ü–∏–∏

B) –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞

C) –£—Å–∏–ª–∏–≤–∞–µ—Ç –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è –∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ

D) –î–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫—É–ª—å—Ç—É—Ä–∞–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 2/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q3"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q3")
async def handle_callback_soc_q3(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 3/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ß—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –õ–∏—á–Ω—ã–µ —É—Å–∏–ª–∏—è –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏...", callback_data="soc-q3-result"))
    builder.add(InlineKeyboardButton(text="B) –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –∫–∞–ø...", callback_data="soc-q3-result"))
    builder.add(InlineKeyboardButton(text="C) –°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª –∏ —Å–≤—è–∑–∏...", callback_data="soc-q3-result"))
    builder.add(InlineKeyboardButton(text="D) –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—â–µ—Å—Ç...", callback_data="soc-q3-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q3-result")
async def handle_callback_soc_q3_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –õ–∏—á–Ω—ã–µ —É—Å–∏–ª–∏—è –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏

B) –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª

C) –°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª –∏ —Å–≤—è–∑–∏

D) –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—â–µ—Å—Ç–≤–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 3/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q4"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q4")
async def handle_callback_soc_q4(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 4/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–µ–º—å–∏ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–µ:**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –±–µ–∑–æ...", callback_data="soc-q4-result"))
    builder.add(InlineKeyboardButton(text="B) –°–æ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–µ–π...", callback_data="soc-q4-result"))
    builder.add(InlineKeyboardButton(text="C) –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –±–ª–∏–∑...", callback_data="soc-q4-result"))
    builder.add(InlineKeyboardButton(text="D) –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö —Ü–µ–Ω...", callback_data="soc-q4-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q4-result")
async def handle_callback_soc_q4_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

B) –°–æ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–µ–π

C) –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –±–ª–∏–∑–æ—Å—Ç—å

D) –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 4/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q5"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q5")
async def handle_callback_soc_q5(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 5/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–µ–Ω—è—é—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –û—Å–ª–∞–±–ª—è—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏...", callback_data="soc-q5-result"))
    builder.add(InlineKeyboardButton(text="B) –°–æ–∑–¥–∞—é—Ç –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –∫–æ–º–º—É–Ω–∏–∫–∞—Ü...", callback_data="soc-q5-result"))
    builder.add(InlineKeyboardButton(text="C) –£–≥–ª—É–±–ª—è—é—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ...", callback_data="soc-q5-result"))
    builder.add(InlineKeyboardButton(text="D) –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç –ø—Ä–∏—Ä–æ–¥—É —Ä–∞–±–æ—Ç—ã ...", callback_data="soc-q5-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q5-result")
async def handle_callback_soc_q5_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –û—Å–ª–∞–±–ª—è—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ —Å–≤—è–∑–∏

B) –°–æ–∑–¥–∞—é—Ç –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏

C) –£–≥–ª—É–±–ª—è—é—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ

D) –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç –ø—Ä–∏—Ä–æ–¥—É —Ä–∞–±–æ—Ç—ã –∏ –¥–æ—Å—É–≥–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 5/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q6"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q6")
async def handle_callback_soc_q6(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 6/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ß—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é —É—Ä–±–∞–Ω–∏–∑–∞—Ü–∏—é?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–æ—Å—Ç –º–µ–≥–∞–ø–æ–ª–∏—Å–æ–≤ –∏ –∞–≥–ª–æ–º–µ—Ä–∞—Ü–∏–π...", callback_data="soc-q6-result"))
    builder.add(InlineKeyboardButton(text="B) –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ–≥—Ä–µ–≥–∞—Ü–∏—è –≤ –≥–æ—Ä–æ–¥–∞...", callback_data="soc-q6-result"))
    builder.add(InlineKeyboardButton(text="C) –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –∏ —Ü–µ–Ω–Ω–æ...", callback_data="soc-q6-result"))
    builder.add(InlineKeyboardButton(text="D) –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω...", callback_data="soc-q6-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q6-result")
async def handle_callback_soc_q6_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –†–æ—Å—Ç –º–µ–≥–∞–ø–æ–ª–∏—Å–æ–≤ –∏ –∞–≥–ª–æ–º–µ—Ä–∞—Ü–∏–π

B) –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ–≥—Ä–µ–≥–∞—Ü–∏—è –≤ –≥–æ—Ä–æ–¥–∞—Ö

C) –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π

D) –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 6/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q7"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q7")
async def handle_callback_soc_q7(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 7/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ —ç—Ç–Ω–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤:**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ —Ä–∞–∑–ª–∏...", callback_data="soc-q7-result"))
    builder.add(InlineKeyboardButton(text="B) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –∑–∞ —Ä...", callback_data="soc-q7-result"))
    builder.add(InlineKeyboardButton(text="C) –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ —ç–ª–∏—Ç...", callback_data="soc-q7-result"))
    builder.add(InlineKeyboardButton(text="D) –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–≤–º—ã –∏ –ø–∞–º—è—Ç—å...", callback_data="soc-q7-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q7-result")
async def handle_callback_soc_q7_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è

B) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –∑–∞ —Ä–µ—Å—É—Ä—Å—ã

C) –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ —ç–ª–∏—Ç

D) –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–≤–º—ã –∏ –ø–∞–º—è—Ç—å

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 7/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q8"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q8")
async def handle_callback_soc_q8(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 8/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è —Ä–æ–ª—å —Ä–µ–ª–∏–≥–∏–∏ –≤ –æ–±—â–µ—Å—Ç–≤–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –°–Ω–∏–∂–∞–µ—Ç—Å—è –ø–æ–¥ –≤–ª–∏—è–Ω–∏–µ–º —Å–µ–∫—É–ª—è—Ä...", callback_data="soc-q8-result"))
    builder.add(InlineKeyboardButton(text="B) –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è, –Ω–æ –æ—Å—Ç–∞–µ—Ç—Å—è ...", callback_data="soc-q8-result"))
    builder.add(InlineKeyboardButton(text="C) –í–æ–∑—Ä–æ–∂–¥–∞–µ—Ç—Å—è –≤ –Ω–æ–≤—ã—Ö —Ñ–æ—Ä–º–∞—Ö...", callback_data="soc-q8-result"))
    builder.add(InlineKeyboardButton(text="D) –°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç...", callback_data="soc-q8-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q8-result")
async def handle_callback_soc_q8_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –°–Ω–∏–∂–∞–µ—Ç—Å—è –ø–æ–¥ –≤–ª–∏—è–Ω–∏–µ–º —Å–µ–∫—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏

B) –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è, –Ω–æ –æ—Å—Ç–∞–µ—Ç—Å—è –≤–∞–∂–Ω–æ–π

C) –í–æ–∑—Ä–æ–∂–¥–∞–µ—Ç—Å—è –≤ –Ω–æ–≤—ã—Ö —Ñ–æ—Ä–º–∞—Ö

D) –°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 8/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q9"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q9")
async def handle_callback_soc_q9(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 9/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ß—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç –ø–æ—Å—Ç–∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ñ–µ—Ä—ã —É—Å–ª—É–≥...", callback_data="soc-q9-result"))
    builder.add(InlineKeyboardButton(text="B) –ó–Ω–∞–Ω–∏—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ—Å—É—Ä—Å...", callback_data="soc-q9-result"))
    builder.add(InlineKeyboardButton(text="C) –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...", callback_data="soc-q9-result"))
    builder.add(InlineKeyboardButton(text="D) –ù–æ–≤—ã–µ —Ñ–æ—Ä–º—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑...", callback_data="soc-q9-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q9-result")
async def handle_callback_soc_q9_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ñ–µ—Ä—ã —É—Å–ª—É–≥

B) –ó–Ω–∞–Ω–∏—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ—Å—É—Ä—Å

C) –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã

D) –ù–æ–≤—ã–µ —Ñ–æ—Ä–º—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 9/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q10"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q10")
async def handle_callback_soc_q10(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 10/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å—Ç–∞—Ä–µ–Ω–∏—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è:**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –ø–µ–Ω—Å–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É...", callback_data="soc-q10-result"))
    builder.add(InlineKeyboardButton(text="B) –°–Ω–∏–∂–µ–Ω–∏–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ...", callback_data="soc-q10-result"))
    builder.add(InlineKeyboardButton(text="C) –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏...", callback_data="soc-q10-result"))
    builder.add(InlineKeyboardButton(text="D) –ú–µ–∂–ø–æ–∫–æ–ª–µ–Ω—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã...", callback_data="soc-q10-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q10-result")
async def handle_callback_soc_q10_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –ø–µ–Ω—Å–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É

B) –°–Ω–∏–∂–µ–Ω–∏–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

C) –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è

D) –ú–µ–∂–ø–æ–∫–æ–ª–µ–Ω—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 10/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q11"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q11")
async def handle_callback_soc_q11(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 11/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–Ω–µ–Ω–∏–µ?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –°–æ–∑–¥–∞—é—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—É–∑—ã—Ä–∏...", callback_data="soc-q11-result"))
    builder.add(InlineKeyboardButton(text="B) –î–µ–º–æ–∫—Ä–∞—Ç–∏–∑–∏—Ä—É—é—Ç –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ñ–æ—Ä...", callback_data="soc-q11-result"))
    builder.add(InlineKeyboardButton(text="C) –°–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏–∏ –≤–∑–≥–ª—è...", callback_data="soc-q11-result"))
    builder.add(InlineKeyboardButton(text="D) –£—Å–∫–æ—Ä—è—é—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∏–¥–µ–π...", callback_data="soc-q11-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q11-result")
async def handle_callback_soc_q11_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –°–æ–∑–¥–∞—é—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—É–∑—ã—Ä–∏

B) –î–µ–º–æ–∫—Ä–∞—Ç–∏–∑–∏—Ä—É—é—Ç –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

C) –°–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏–∏ –≤–∑–≥–ª—è–¥–æ–≤

D) –£—Å–∫–æ—Ä—è—é—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∏–¥–µ–π

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 11/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q12"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q12")
async def handle_callback_soc_q12(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 12/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ß—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≥–µ–Ω–¥–µ—Ä–Ω–æ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–ª–∏—á–∏—è...", callback_data="soc-q12-result"))
    builder.add(InlineKeyboardButton(text="B) –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ —Å—Ç–µ—Ä–µ–æ—Ç–∏–ø—ã –∏ —Ç—Ä–∞–¥–∏—Ü...", callback_data="soc-q12-result"))
    builder.add(InlineKeyboardButton(text="C) –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –±–∞—Ä—å–µ—Ä—ã –≤ –æ–±—â–µ—Å—Ç–≤–µ...", callback_data="soc-q12-result"))
    builder.add(InlineKeyboardButton(text="D) –†–∞–∑–ª–∏—á–∏—è –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º –∫–∞–ø–∏—Ç–∞...", callback_data="soc-q12-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q12-result")
async def handle_callback_soc_q12_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–ª–∏—á–∏—è

B) –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ —Å—Ç–µ—Ä–µ–æ—Ç–∏–ø—ã –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏

C) –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –±–∞—Ä—å–µ—Ä—ã –≤ –æ–±—â–µ—Å—Ç–≤–µ

D) –†–∞–∑–ª–∏—á–∏—è –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º –∫–∞–ø–∏—Ç–∞–ª–µ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 12/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q13"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q13")
async def handle_callback_soc_q13(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 13/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ì–ª–∞–≤–Ω—ã–π –≤—ã–∑–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–Ω–∏–º–∞—é—â–∏—Ö –æ–±—â–µ—Å—Ç–≤:**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è —Å –º–µ...", callback_data="soc-q13-result"))
    builder.add(InlineKeyboardButton(text="B) –ö—É–ª—å—Ç—É—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–∏–≥—Ä–∞–Ω—Ç–æ...", callback_data="soc-q13-result"))
    builder.add(InlineKeyboardButton(text="C) –ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã...", callback_data="soc-q13-result"))
    builder.add(InlineKeyboardButton(text="D) –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å...", callback_data="soc-q13-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q13-result")
async def handle_callback_soc_q13_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è —Å –º–µ—Å—Ç–Ω—ã–º–∏

B) –ö—É–ª—å—Ç—É—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–∏–≥—Ä–∞–Ω—Ç–æ–≤

C) –ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã

D) –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 13/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q14"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q14")
async def handle_callback_soc_q14(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 14/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –°–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –º–æ–±–∏–ª—å...", callback_data="soc-q14-result"))
    builder.add(InlineKeyboardButton(text="B) –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –Ω–µ—Ä...", callback_data="soc-q14-result"))
    builder.add(InlineKeyboardButton(text="C) –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã —Å—Ç—Ä–∞—Ç–∏—Ñ–∏–∫–∞...", callback_data="soc-q14-result"))
    builder.add(InlineKeyboardButton(text="D) –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫—É–ª—å—Ç—É—Ä–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª —ç...", callback_data="soc-q14-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q14-result")
async def handle_callback_soc_q14_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –°–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –º–æ–±–∏–ª—å–Ω–æ—Å—Ç–∏

B) –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ

C) –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã —Å—Ç—Ä–∞—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

D) –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫—É–ª—å—Ç—É—Ä–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª —ç–ª–∏—Ç

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 14/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q15"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q15")
async def handle_callback_soc_q15(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 15/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ß—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä—ã–Ω–æ–∫ —Ç—Ä—É–¥–∞?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–æ—Å—Ç –ø—Ä–µ–∫–∞—Ä–∏–∞—Ç–∞ –∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–π...", callback_data="soc-q15-result"))
    builder.add(InlineKeyboardButton(text="B) –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –ø...", callback_data="soc-q15-result"))
    builder.add(InlineKeyboardButton(text="C) –ù–æ–≤—ã–µ —Ñ–æ—Ä–º—ã —Ç—Ä—É–¥–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π...", callback_data="soc-q15-result"))
    builder.add(InlineKeyboardButton(text="D) –†–∞—Å—Ç—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏...", callback_data="soc-q15-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q15-result")
async def handle_callback_soc_q15_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –†–æ—Å—Ç –ø—Ä–µ–∫–∞—Ä–∏–∞—Ç–∞ –∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∑–∞–Ω—è—Ç–æ—Å—Ç–∏

B) –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π

C) –ù–æ–≤—ã–µ —Ñ–æ—Ä–º—ã —Ç—Ä—É–¥–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π

D) –†–∞—Å—Ç—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 15/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q16"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q16")
async def handle_callback_soc_q16(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 16/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ì–ª–∞–≤–Ω–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞:**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –ö—É–ª—å—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏...", callback_data="soc-q16-result"))
    builder.add(InlineKeyboardButton(text="B) –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ...", callback_data="soc-q16-result"))
    builder.add(InlineKeyboardButton(text="C) –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –ø–æ—Ç—Ä...", callback_data="soc-q16-result"))
    builder.add(InlineKeyboardButton(text="D) –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∂–µ...", callback_data="soc-q16-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q16-result")
async def handle_callback_soc_q16_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –ö—É–ª—å—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è

B) –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ

C) –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è

D) –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∂–µ–ª–∞–Ω–∏—è–º–∏

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 16/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q17"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q17")
async def handle_callback_soc_q17(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 17/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ö–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏—Ä–æ–¥–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–≤–∏–∂–µ–Ω–∏–π?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –û—Ç –∫–ª–∞—Å—Å–æ–≤—ã—Ö –∫ –ø–æ—Å—Ç–º–∞—Ç–µ—Ä–∏–∞–ª–∏—Å—Ç...", callback_data="soc-q17-result"))
    builder.add(InlineKeyboardButton(text="B) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π...", callback_data="soc-q17-result"))
    builder.add(InlineKeyboardButton(text="C) –ì–ª–æ–±–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Ç—Ä–∞–Ω—Å–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω...", callback_data="soc-q17-result"))
    builder.add(InlineKeyboardButton(text="D) –§—Ä–∞–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ü–µ...", callback_data="soc-q17-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q17-result")
async def handle_callback_soc_q17_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –û—Ç –∫–ª–∞—Å—Å–æ–≤—ã—Ö –∫ –ø–æ—Å—Ç–º–∞—Ç–µ—Ä–∏–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–º

B) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏

C) –ì–ª–æ–±–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Ç—Ä–∞–Ω—Å–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä

D) –§—Ä–∞–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ü–µ–ª–µ–π

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 17/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q18"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q18")
async def handle_callback_soc_q18(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 18/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ß—Ç–æ —É–≥—Ä–æ–∂–∞–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–ø–ª–æ—á–µ–Ω–Ω–æ—Å—Ç–∏?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –†–∞—Å—Ç—É—â–µ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ...", callback_data="soc-q18-result"))
    builder.add(InlineKeyboardButton(text="B) –ö—É–ª—å—Ç—É—Ä–Ω–æ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ...", callback_data="soc-q18-result"))
    builder.add(InlineKeyboardButton(text="C) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç–∏—Ç...", callback_data="soc-q18-result"))
    builder.add(InlineKeyboardButton(text="D) –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∞—Ç–æ–º–∏–∑–∞—Ü–∏—è...", callback_data="soc-q18-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q18-result")
async def handle_callback_soc_q18_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –†–∞—Å—Ç—É—â–µ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ

B) –ö—É–ª—å—Ç—É—Ä–Ω–æ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ

C) –û—Å–ª–∞–±–ª–µ–Ω–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤

D) –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∞—Ç–æ–º–∏–∑–∞—Ü–∏—è

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 18/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q19"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q19")
async def handle_callback_soc_q19(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 19/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ì–ª–∞–≤–Ω–∞—è —á–µ—Ä—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞:**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –°–∫–æ—Ä–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π...", callback_data="soc-q19-result"))
    builder.add(InlineKeyboardButton(text="B) –í–∞–∂–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∑–Ω–∞–Ω–∏–π...", callback_data="soc-q19-result"))
    builder.add(InlineKeyboardButton(text="C) –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ—Ç–Ω–æ—à...", callback_data="soc-q19-result"))
    builder.add(InlineKeyboardButton(text="D) –ù–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –≤–ª–∞—Å—Ç–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è...", callback_data="soc-q19-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q19-result")
async def handle_callback_soc_q19_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –°–∫–æ—Ä–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π

B) –í–∞–∂–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∑–Ω–∞–Ω–∏–π

C) –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π

D) –ù–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –≤–ª–∞—Å—Ç–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 19/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="soc-q20"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q20")
async def handle_callback_soc_q20(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üåç **–í–û–ü–†–û–° 20/20** (–°–æ—Ü–∏–æ–ª–æ–≥–∏—è)

**–ö–∞–∫–∏–º –±—É–¥–µ—Ç –æ–±—â–µ—Å—Ç–≤–æ –±—É–¥—É—â–µ–≥–æ?**

–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–∑–≥–ª—è–¥:"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="A) –¢–µ—Ö–Ω–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏ –≤—ã—Å–æ–∫–æ—ç—Ñ—Ñ–µ–∫...", callback_data="soc-q20-result"))
    builder.add(InlineKeyboardButton(text="B) –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —É—Å—Ç–æ–π—á–∏–≤–æ–µ –∏ —Å–ø—Ä–∞...", callback_data="soc-q20-result"))
    builder.add(InlineKeyboardButton(text="C) –ì–ª–æ–±–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏ —Å–≤—è–∑–∞–Ω–Ω–æ–µ...", callback_data="soc-q20-result"))
    builder.add(InlineKeyboardButton(text="D) –§—Ä–∞–≥–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω–æ...", callback_data="soc-q20-result"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "soc-q20-result")
async def handle_callback_soc_q20_result(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """‚úÖ **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!**

**–í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:**

A) –¢–µ—Ö–Ω–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏ –≤—ã—Å–æ–∫–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ

B) –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —É—Å—Ç–æ–π—á–∏–≤–æ–µ –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ

C) –ì–ª–æ–±–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏ —Å–≤—è–∑–∞–Ω–Ω–æ–µ

D) –§—Ä–∞–≥–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω–æ–µ

üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å:** 20/20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ—Ü–∏–æ–±–ª–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üéâ –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º!", callback_data="final-results"))
    builder.add(InlineKeyboardButton(text="üìä –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "detailed-analysis")
async def handle_callback_detailed_analysis(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìä **–î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í**

üó≥Ô∏è **–ü–û–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –ë–õ–û–ö:**
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã: –°–º–µ—à–∞–Ω–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞: –£–º–µ—Ä–µ–Ω–Ω–æ-–ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è
‚Ä¢ –í–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞: –ú–Ω–æ–≥–æ—Å—Ç–æ—Ä–æ–Ω–Ω–æ—Å—Ç—å
‚Ä¢ –ê–≤—Ç–æ—Ä–∏—Ç–∞—Ä–∏–∑–º vs –õ–∏–±–µ—Ä–∞–ª–∏–∑–º: –õ–∏–±–µ—Ä–∞–ª—å–Ω–æ-–¥–µ–º–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∏–π

üìú **–ò–°–¢–û–†–ò–ß–ï–°–ö–ò–ô –ë–õ–û–ö:**
‚Ä¢ –ó–Ω–∞–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤: –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
‚Ä¢ –ü–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: –°–∏—Å—Ç–µ–º–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ
‚Ä¢ –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π: –ú–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª–∏: –†–∞–∑–≤–∏—Ç–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ

ü§î **–§–ò–õ–û–°–û–§–°–ö–ò–ô –ë–õ–û–ö:**
‚Ä¢ –≠—Ç–∏–∫–∞: –î–µ–æ–Ω—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ-—É—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–π —Å–∏–Ω—Ç–µ–∑
‚Ä¢ –ú–µ—Ç–∞—Ñ–∏–∑–∏–∫–∞: –ú–∞—Ç–µ—Ä–∏–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∞–ª–∏–∑–º
‚Ä¢ –≠–ø–∏—Å—Ç–µ–º–æ–ª–æ–≥–∏—è: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–º
‚Ä¢ –°–º—ã—Å–ª –∂–∏–∑–Ω–∏: –°–∞–º–æ–∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å–ª—É–∂–µ–Ω–∏–µ

üåç **–°–û–¶–ò–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô –ë–õ–û–ö:**
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ: –°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–æ
‚Ä¢ –ì–ª–æ–±–∞–ª–∏–∑–∞—Ü–∏—è: –°–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å –ø–ª—é—Å–∞–º–∏ –∏ –º–∏–Ω—É—Å–∞–º–∏
‚Ä¢ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç –æ–±—â–µ—Å—Ç–≤–æ
‚Ä¢ –ë—É–¥—É—â–µ–µ: –û—Å—Ç–æ—Ä–æ–∂–Ω—ã–π –æ–ø—Ç–∏–º–∏–∑–º"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    builder.add(InlineKeyboardButton(text="üë• –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏", callback_data="profile-comparison"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "recommendations")
async def handle_callback_recommendations(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üìö **–ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –†–ê–ó–í–ò–¢–ò–Ø**

üìñ **–ö–Ω–∏–≥–∏ –¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π:**
‚Ä¢ "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è" - –†–æ–±–µ—Ä—Ç –ü–æ–ª –í–æ–ª—å—Ñ
‚Ä¢ "–°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–π" - –°—ç–º—é—ç–ª –•–∞–Ω—Ç–∏–Ω–≥—Ç–æ–Ω
‚Ä¢ "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å" - –ú–∞–π–∫–ª –°—ç–Ω–¥–µ–ª
‚Ä¢ "–ü–æ—Å—Ç–∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ" - –î—ç–Ω–∏–µ–ª –ë–µ–ª–ª

üéì **–û–±–ª–∞—Å—Ç–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:**
‚Ä¢ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è
‚Ä¢ –§–∏–ª–æ—Å–æ—Ñ–∏—è –∏—Å—Ç–æ—Ä–∏–∏
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è
‚Ä¢ –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —ç–∫–æ–Ω–æ–º–∏—è

üí≠ **–¢–µ–º—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:**
‚Ä¢ –ö–∞–∫ —Å–æ–≤–º–µ—Å—Ç–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –±–ª–∞–≥–æ?
‚Ä¢ –ö–∞–∫–∏–µ —É—Ä–æ–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏?
‚Ä¢ –ö–∞–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏–∑–º–µ–Ω—è—Ç –ø—Ä–∏—Ä–æ–¥—É –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏?
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ –ª–∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ?

üåü **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
‚Ä¢ –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∏—Å–∫—É—Å—Å–∏—è—Ö
‚Ä¢ –ò–∑—É—á–∞–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è
‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å–æ–±—ã—Ç–∏—è–º
‚Ä¢ –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="final-results"))
    builder.add(InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–π –æ–ø—Ä–æ—Å", callback_data="start-poll"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "profile-comparison")
async def handle_callback_profile_comparison(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = """üë• **–°–†–ê–í–ù–ï–ù–ò–ï –° –¢–ò–ü–ò–ß–ù–´–ú–ò –ü–†–û–§–ò–õ–Ø–ú–ò**

üéØ **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–æ–∫ –∫:**

**"–ü—Ä–æ—Å–≤–µ—â–µ–Ω–Ω—ã–π –¶–µ–Ω—Ç—Ä–∏—Å—Ç"** - 87% —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
‚Ä¢ –†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –ø–æ–ª–∏—Ç–∏–∫–µ
‚Ä¢ –ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
‚Ä¢ –§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è —Ä–µ—Ñ–ª–µ–∫—Å–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –°–∏—Å—Ç–µ–º–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –æ –æ–±—â–µ—Å—Ç–≤–µ

üìä **–î—Ä—É–≥–∏–µ –±–ª–∏–∑–∫–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏:**
‚Ä¢ –õ–∏–±–µ—Ä–∞–ª—å–Ω—ã–π –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª - 78%
‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ü—Ä–∞–≥–º–∞—Ç–∏–∫ - 74%
‚Ä¢ –°–æ—Ü–∏–∞–ª-–¥–µ–º–æ–∫—Ä–∞—Ç - 71%

üîç **–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —á–µ—Ä—Ç—ã –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è:**
‚Ä¢ –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã—Ö –≤–∑–≥–ª—è–¥–æ–≤
‚Ä¢ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ —Å –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å—é
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å—É–∂–¥–µ–Ω–∏—è—Ö
‚Ä¢ –§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –≥–ª—É–±–∏–Ω–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ

**–í—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ —Ä–µ–¥–∫–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –∏ —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç–∏!**"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ö –∞–Ω–∞–ª–∏–∑—É", callback_data="detailed-analysis"))
    builder.add(InlineKeyboardButton(text="üìö –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="recommendations"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
@dp.message(F.text)
async def handle_user_input(message: types.Message):
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_data or "waiting_for_input" not in user_data[user_id]:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥
    
    input_config = user_data[user_id]["waiting_for_input"]
    user_text = message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ–ø—É—Å–∫–∞
    if input_config.get("allow_skip") and user_text == "/skip":
        await message.answer("‚è≠Ô∏è –í–≤–æ–¥ –ø—Ä–æ–ø—É—â–µ–Ω")
        del user_data[user_id]["waiting_for_input"]
        return
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞
    min_length = input_config.get("min_length", 0)
    max_length = input_config.get("max_length", 0)
    
    if min_length > 0 and len(user_text) < min_length:
        retry_message = input_config.get("retry_message", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        await message.answer(f"‚ùå –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç (–º–∏–Ω–∏–º—É–º {min_length} —Å–∏–º–≤–æ–ª–æ–≤). {retry_message}")
        return
    
    if max_length > 0 and len(user_text) > max_length:
        retry_message = input_config.get("retry_message", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        await message.answer(f"‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç (–º–∞–∫—Å–∏–º—É–º {max_length} —Å–∏–º–≤–æ–ª–æ–≤). {retry_message}")
        return
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–∞ –≤–≤–æ–¥–∞
    input_type = input_config.get("type", "text")
    
    if input_type == "email":
        import re
        email_pattern = r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
        if not re.match(email_pattern, user_text):
            retry_message = input_config.get("retry_message", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            await message.answer(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email. {retry_message}")
            return
    
    elif input_type == "number":
        try:
            float(user_text)
        except ValueError:
            retry_message = input_config.get("retry_message", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            await message.answer(f"‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. {retry_message}")
            return
    
    elif input_type == "phone":
        import re
        phone_pattern = r"^[+]?[0-9\s\-\(\)]{10,}$"
        if not re.match(phone_pattern, user_text):
            retry_message = input_config.get("retry_message", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            await message.answer(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞. {retry_message}")
            return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    variable_name = input_config.get("variable", "user_response")
    user_data[user_id][variable_name] = user_text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
    if input_config.get("save_to_database"):
        logging.info(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î: {variable_name} = {user_text} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id})")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    success_message = input_config.get("success_message", "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–≤–µ—Ç!")
    await message.answer(success_message)
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
    del user_data[user_id]["waiting_for_input"]
    
    logging.info(f"–ü–æ–ª—É—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥: {variable_name} = {user_text}")



# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
