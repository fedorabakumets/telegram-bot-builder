"""
–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏
"""

import asyncio
import asyncpg
from datetime import datetime

def create_modern_data_collection_template():
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏"""
    
    template_data = {
        "name": "üîÑ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö",
        "description": "–®–∞–±–ª–æ–Ω —Å –∫–æ–º–∞–Ω–¥–æ–π, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–æ–≤ –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –≤–≤–æ–¥–æ–º",
        "category": "official",
        "difficulty": "medium",
        "author": "TelegramBot Builder",
        "authorId": "system",
        "version": "1.0.0",
        "featured": True,
        "rating": 4.8,
        "ratingCount": 25,
        "useCount": 0,
        "tags": ["—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", "—Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö", "—Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥", "–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã"],
        "estimatedTime": 7,
        "previewImage": None,
        "botData": {
            "nodes": [
                # –°—Ç–∞—Ä—Ç–æ–≤—ã–π —É–∑–µ–ª —Å –∫–æ–º–∞–Ω–¥–æ–π
                {
                    "id": "start-command",
                    "type": "start",
                    "position": {"x": 100, "y": 100},
                    "data": {
                        "command": "/start",
                        "description": "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö",
                        "messageText": "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö!\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
                        "formatMode": "none",
                        "keyboardType": "inline",
                        "buttons": [
                            {
                                "id": "btn-start-collection",
                                "text": "üöÄ –ù–∞—á–∞—Ç—å —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö",
                                "action": "goto",
                                "target": "collection-message"
                            }
                        ],
                        "resizeKeyboard": True,
                        "oneTimeKeyboard": False,
                        "showInMenu": True,
                        "isPrivateOnly": False,
                        "requiresAuth": False,
                        "adminOnly": False
                    }
                },
                
                # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–æ–≤ –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –≤–≤–æ–¥–æ–º
                {
                    "id": "collection-message",
                    "type": "message",
                    "position": {"x": 400, "y": 100},
                    "data": {
                        "messageText": "üìä –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ —Å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º:\n\n‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞\n‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–∑—ã–≤ —Ç–µ–∫—Å—Ç–æ–º\n\n–í–∞—à –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ!",
                        "formatMode": "none",
                        "keyboardType": "inline",
                        "buttons": [
                            {
                                "id": "btn-excellent",
                                "text": "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê –û—Ç–ª–∏—á–Ω–æ",
                                "action": "goto",
                                "target": "thank-you-message"
                            },
                            {
                                "id": "btn-good",
                                "text": "‚≠ê‚≠ê‚≠ê‚≠ê –•–æ—Ä–æ—à–æ",
                                "action": "goto",
                                "target": "thank-you-message"
                            },
                            {
                                "id": "btn-average",
                                "text": "‚≠ê‚≠ê‚≠ê –°—Ä–µ–¥–Ω–µ",
                                "action": "goto",
                                "target": "thank-you-message"
                            },
                            {
                                "id": "btn-poor",
                                "text": "‚≠ê‚≠ê –ü–ª–æ—Ö–æ",
                                "action": "goto",
                                "target": "thank-you-message"
                            }
                        ],
                        "resizeKeyboard": True,
                        "oneTimeKeyboard": False,
                        
                        # –í–∫–ª—é—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤
                        "collectUserInput": True,
                        "enableTextInput": True,
                        "inputVariable": "user_feedback",
                        "inputType": "text",
                        "inputRequired": False,
                        "inputMinLength": 5,
                        "inputMaxLength": 500,
                        "inputTimeout": 120,
                        "saveToDatabase": True,
                        "inputRetryMessage": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –æ—Ç 5 –¥–æ 500 —Å–∏–º–≤–æ–ª–æ–≤",
                        "inputSuccessMessage": "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.",
                        "inputTargetNodeId": "thank-you-message"
                    }
                },
                
                # –°–æ–æ–±—â–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ (–∫—É–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
                {
                    "id": "thank-you-message",
                    "type": "message",
                    "position": {"x": 700, "y": 100},
                    "data": {
                        "messageText": "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –æ–ø—Ä–æ—Å–µ!\n\n–í–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —É–ª—É—á—à–∏—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å. –ú—ã —Ü–µ–Ω–∏–º –∫–∞–∂–¥–æ–µ –º–Ω–µ–Ω–∏–µ –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\nüíæ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ.",
                        "formatMode": "none",
                        "keyboardType": "inline",
                        "buttons": [
                            {
                                "id": "btn-restart",
                                "text": "üîÑ –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å —Å–Ω–æ–≤–∞",
                                "action": "goto",
                                "target": "start-command"
                            },
                            {
                                "id": "btn-help",
                                "text": "‚ùì –ü–æ–º–æ—â—å",
                                "action": "command",
                                "target": "/help"
                            }
                        ],
                        "resizeKeyboard": True,
                        "oneTimeKeyboard": False
                    }
                },
                
                # –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
                {
                    "id": "help-command",
                    "type": "command",
                    "position": {"x": 400, "y": 300},
                    "data": {
                        "command": "/help",
                        "description": "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å",
                        "messageText": "‚ùì –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n\n‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö\n‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n–ë–æ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:\n‚úÖ –ö–Ω–æ–ø–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥\n‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n‚úÖ –ê–¥–¥–∏—Ç–∏–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–±–æ—Ä–∞",
                        "formatMode": "none",
                        "keyboardType": "inline",
                        "buttons": [
                            {
                                "id": "btn-back-to-start",
                                "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É",
                                "action": "goto",
                                "target": "start-command"
                            }
                        ],
                        "resizeKeyboard": True,
                        "oneTimeKeyboard": False,
                        "showInMenu": True,
                        "isPrivateOnly": False,
                        "requiresAuth": False,
                        "adminOnly": False
                    }
                }
            ],
            "connections": [
                {
                    "id": "conn-1",
                    "sourceId": "start-command",
                    "targetId": "collection-message",
                    "sourceHandle": "btn-start-collection",
                    "targetHandle": "input"
                },
                {
                    "id": "conn-2",
                    "sourceId": "collection-message",
                    "targetId": "thank-you-message",
                    "sourceHandle": "btn-excellent",
                    "targetHandle": "input"
                },
                {
                    "id": "conn-3",
                    "sourceId": "collection-message",
                    "targetId": "thank-you-message",
                    "sourceHandle": "btn-good",
                    "targetHandle": "input"
                },
                {
                    "id": "conn-4",
                    "sourceId": "collection-message",
                    "targetId": "thank-you-message",
                    "sourceHandle": "btn-average",
                    "targetHandle": "input"
                },
                {
                    "id": "conn-5",
                    "sourceId": "collection-message",
                    "targetId": "thank-you-message",
                    "sourceHandle": "btn-poor",
                    "targetHandle": "input"
                },
                {
                    "id": "conn-6",
                    "sourceId": "thank-you-message",
                    "targetId": "start-command",
                    "sourceHandle": "btn-restart",
                    "targetHandle": "input"
                },
                {
                    "id": "conn-7",
                    "sourceId": "thank-you-message",
                    "targetId": "help-command",
                    "sourceHandle": "btn-help",
                    "targetHandle": "input"
                },
                {
                    "id": "conn-8",
                    "sourceId": "help-command",
                    "targetId": "start-command",
                    "sourceHandle": "btn-back-to-start",
                    "targetHandle": "input"
                }
            ]
        }
    }
    
    return template_data

async def save_template_to_database():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —à–∞–±–ª–æ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        import os
        DATABASE_URL = os.getenv('DATABASE_URL')
        
        if not DATABASE_URL:
            print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
        conn = await asyncpg.connect(DATABASE_URL)
        
        # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
        template_data = create_modern_data_collection_template()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —à–∞–±–ª–æ–Ω
        import json
        existing = await conn.fetchrow("""
            SELECT id FROM bot_templates WHERE name = $1
        """, template_data["name"])
        
        if existing:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —à–∞–±–ª–æ–Ω
            await conn.execute("""
                UPDATE bot_templates SET
                    description = $2,
                    category = $3,
                    difficulty = $4,
                    author_name = $5,
                    author_id = $6,
                    version = $7,
                    featured = $8,
                    rating = $9,
                    rating_count = $10,
                    use_count = $11,
                    tags = $12,
                    estimated_time = $13,
                    preview_image = $14,
                    data = $15,
                    updated_at = $16
                WHERE name = $1
            """, 
                template_data["name"],
                template_data["description"],
                template_data["category"],
                template_data["difficulty"],
                template_data["author"],
                template_data["authorId"],
                template_data["version"],
                template_data["featured"],
                template_data["rating"],
                template_data["ratingCount"],
                template_data["useCount"],
                template_data["tags"],
                template_data["estimatedTime"],
                template_data["previewImage"],
                json.dumps(template_data["botData"]),
                datetime.now()
            )
        else:
            # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω
            await conn.execute("""
                INSERT INTO bot_templates (
                    name, description, category, difficulty, author_name, author_id, version,
                    featured, rating, rating_count, use_count, tags, estimated_time,
                    preview_image, data, created_at, updated_at
                ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17)
            """, 
                template_data["name"],
                template_data["description"],
                template_data["category"],
                template_data["difficulty"],
                template_data["author"],
                template_data["authorId"],
                template_data["version"],
                template_data["featured"],
                template_data["rating"],
                template_data["ratingCount"],
                template_data["useCount"],
                template_data["tags"],
                template_data["estimatedTime"],
                template_data["previewImage"],
                json.dumps(template_data["botData"]),
                datetime.now(),
                datetime.now()
            )
        
        await conn.close()
        print("‚úÖ –®–∞–±–ª–æ–Ω '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö' —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
    template_data = create_modern_data_collection_template()
    
    print(f"‚úÖ –®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω: {template_data['name']}")
    print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {template_data['description']}")
    print(f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {template_data['category']}")
    print(f"‚≠ê –°–ª–æ–∂–Ω–æ—Å—Ç—å: {template_data['difficulty']}")
    print(f"üë®‚Äçüíª –ê–≤—Ç–æ—Ä: {template_data['author']}")
    print(f"üìä –£–∑–ª–æ–≤: {len(template_data['botData']['nodes'])}")
    print(f"üîó –°–≤—è–∑–µ–π: {len(template_data['botData']['connections'])}")
    print(f"üè∑Ô∏è –¢–µ–≥–∏: {', '.join(template_data['tags'])}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await save_template_to_database()
    
    print("\nüéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —à–∞–±–ª–æ–Ω–∞:")
    print("‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /start –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å")
    print("‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–æ–≤")
    print("‚Ä¢ –ö–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ + —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥")
    print("‚Ä¢ –ê–¥–¥–∏—Ç–∏–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞: –∫–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç + –æ—Ç–≤–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è")
    print("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞")
    print("‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    print("‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")

if __name__ == "__main__":
    asyncio.run(main())