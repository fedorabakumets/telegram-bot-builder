#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ ID —É–∑–ª–æ–≤
"""

import requests
import json

def test_bot_regeneration():
    print("üß™ –¢–ï–°–¢: –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –±–æ—Ç–∞")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
    response = requests.get("http://localhost:5000/api/projects/1")
    if response.status_code != 200:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞")
        return False
        
    project = response.json()
    print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª—É—á–µ–Ω: {project['name']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ID —É–∑–ª–æ–≤ –≤ –¥–∞–Ω–Ω—ã—Ö
    nodes = project['data']['nodes']
    node_ids = [node['id'] for node in nodes]
    print(f"üìù ID —É–∑–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ: {node_ids}")
    
    # –û–∂–∏–¥–∞–µ–º—ã–µ ID
    expected_ids = ['9q4tb3UOhuqEuYZNuFEFf', 'xtEZ0Z4CUpkWyFNdBLorj', '-0oRrlrqED9ftXHpoJEdO']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    if all(expected_id in node_ids for expected_id in expected_ids):
        print("‚úÖ ID —É–∑–ª–æ–≤ –≤ –±–∞–∑–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ")
    else:
        print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ ID. –û–∂–∏–¥–∞–µ–º—ã–µ: {expected_ids}")
        return False
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥
    export_response = requests.post("http://localhost:5000/api/projects/1/export")
    if export_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {export_response.status_code}")
        return False
        
    generated_code = export_response.json()['code']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º callback_data –≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∫–æ–¥–µ
    found_old_ids = []
    found_new_ids = []
    
    old_ids = ['CWZz-OVozgC0i8qGtR7IQ', '2LsUexBjeVC44ALschZU9', 'ErYb9yOfCTtPNAlJim3C1']
    
    for old_id in old_ids:
        if old_id in generated_code:
            found_old_ids.append(old_id)
            
    for new_id in expected_ids:
        if new_id in generated_code:
            found_new_ids.append(new_id)
    
    print(f"\nüîç –ê–Ω–∞–ª–∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞:")
    print(f"–ù–∞–π–¥–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ ID: {found_old_ids}")
    print(f"–ù–∞–π–¥–µ–Ω—ã –Ω–æ–≤—ã–µ ID: {found_new_ids}")
    
    if found_old_ids:
        print("‚ùå –ö–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∞—Ä—ã–µ ID —É–∑–ª–æ–≤!")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        with open("debug_generated_code.py", "w", encoding="utf-8") as f:
            f.write(generated_code)
        print("üíæ –ö–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ debug_generated_code.py")
        
        return False
    elif found_new_ids:
        print("‚úÖ –ö–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ ID —É–∑–ª–æ–≤!")
        return True
    else:
        print("‚ö†Ô∏è ID —É–∑–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–¥–µ")
        return False

if __name__ == "__main__":
    test_bot_regeneration()