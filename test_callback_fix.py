#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è callback_data –≤ —à–∞–±–ª–æ–Ω–µ –º–∞–≥–∞–∑–∏–Ω–∞
"""

import requests
import json

def test_button_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–Ω–æ–ø–æ–∫ –≤ –º–∞–≥–∞–∑–∏–Ω–µ"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é callback_data –¥–ª—è –∫–Ω–æ–ø–æ–∫...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω "Interactive Shop with Conditional Messages"
    template_data = {
        "nodes": [
            {
                "id": "start_welcome",
                "type": "start", 
                "data": {
                    "messageText": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω! üõçÔ∏è",
                    "keyboardType": "inline",
                    "buttons": [
                        {
                            "id": "btn_catalog",
                            "text": "üì¶ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤",
                            "action": "goto",
                            "target": "catalog_main"
                        },
                        {
                            "id": "btn_profile", 
                            "text": "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
                            "action": "goto",
                            "target": "profile_menu"
                        }
                    ]
                }
            }
        ],
        "edges": []
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/export –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        projects_response = requests.get('http://localhost:5000/api/projects')
        projects = projects_response.json()
        project_id = projects[0]['id'] if projects else 1
        
        response = requests.post(f'http://localhost:5000/api/projects/{project_id}/export', 
                               json=template_data,
                               headers={'Content-Type': 'application/json'})
        
        if response.status_code == 200:
            generated_code = response.text
            print("‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–æ–¥–µ
            print("\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏:")
            
            if 'InlineKeyboardButton(text="üì¶ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="catalog_main")' in generated_code:
                print("‚úÖ –ö–Ω–æ–ø–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç target –∫–∞–∫ callback_data: catalog_main")
            elif 'InlineKeyboardButton(text="üì¶ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="btn_catalog")' in generated_code:
                print("‚ùå –ö–Ω–æ–ø–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç button.id –∫–∞–∫ callback_data: btn_catalog")
            else:
                print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ –∫–æ–¥–µ")
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            print("\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback:")
            
            if '@dp.callback_query(lambda c: c.data == "catalog_main")' in generated_code:
                print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç target: catalog_main")
            elif '@dp.callback_query(lambda c: c.data == "btn_catalog")' in generated_code:
                print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç button.id: btn_catalog")
            else:
                print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞")
                
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            with open("test_generated_code.py", "w", encoding="utf-8") as f:
                f.write(generated_code)
            print("\nüíæ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ test_generated_code.py")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")

if __name__ == "__main__":
    test_button_generation()