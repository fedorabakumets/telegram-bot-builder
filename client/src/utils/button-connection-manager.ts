import { Node, Connection, Button } from '@/types/bot';
import { nanoid } from 'nanoid';

export interface –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–ö–Ω–æ–ø–∫–∏ {
  id: string;
  —Ç–µ–∫—Å—Ç: string;
  –∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª: string;
  —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª: string;
  —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è: 'goto' | 'command';
  —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: number;
  –ø—Ä–∏—á–∏–Ω–∞: string;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –º–µ–∂–¥—É —É–∑–ª–∞–º–∏
export function —Å–æ–∑–¥–∞—Ç—å–ö–Ω–æ–ø–∫—É–î–ª—è–°–æ–µ–¥–∏–Ω–µ–Ω–∏—è(
  –∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª: Node,
  —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª: Node,
  —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è: 'goto' | 'command' = 'goto'
): Button {
  const —Ç–µ–∫—Å—Ç–ö–Ω–æ–ø–∫–∏ = –ø–æ–ª—É—á–∏—Ç—å–¢–µ–∫—Å—Ç–ö–Ω–æ–ø–∫–∏(—Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª, —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è);
  
  return {
    id: nanoid(),
    text: —Ç–µ–∫—Å—Ç–ö–Ω–æ–ø–∫–∏,
    action: —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è,
    target: —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è === 'goto' ? —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.id : undefined,
    url: —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è === 'command' ? —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.data.command : undefined
  };
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏
function –ø–æ–ª—É—á–∏—Ç—å–¢–µ–∫—Å—Ç–ö–Ω–æ–ø–∫–∏(—É–∑–µ–ª: Node, —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è: 'goto' | 'command'): string {
  if (—Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è === 'command' && —É–∑–µ–ª.data.command) {
    return —É–∑–µ–ª.data.command;
  }

  switch (—É–∑–µ–ª.type) {
    case 'start':
      return 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é';
    case 'message':
      return —É–∑–µ–ª.data.messageText 
        ? —É–∑–µ–ª.data.messageText.slice(0, 20) + (—É–∑–µ–ª.data.messageText.length > 20 ? '...' : '')
        : 'üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ';
    case 'photo':
      return 'üñºÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ';
    case 'keyboard':
      return '‚å®Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é';
    case 'input':
      return '‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ';
    case 'condition':
      return 'üîÄ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏–µ';
    case 'command':
      return —É–∑–µ–ª.data.command || '‚ö° –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É';
    default:
      return '‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å';
  }
}

// –ê–Ω–∞–ª–∏–∑ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∫–Ω–æ–ø–æ–∫
export function –Ω–∞–π—Ç–∏–ù—É–∂–Ω—ã–µ–ö–Ω–æ–ø–∫–∏(
  —É–∑–ª—ã: Node[],
  —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: Connection[]
): –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–ö–Ω–æ–ø–∫–∏[] {
  const —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–ö–Ω–æ–ø–∫–∏[] = [];

  for (const —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ of —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è) {
    const –∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª = —É–∑–ª—ã.find(—É–∑–µ–ª => —É–∑–µ–ª.id === —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.source);
    const —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª = —É–∑–ª—ã.find(—É–∑–µ–ª => —É–∑–µ–ª.id === —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.target);

    if (!–∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª || !—Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª) continue;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —É–∑–µ–ª –∏–º–µ—Ç—å –∫–Ω–æ–ø–∫–∏
    if (!–º–æ–∂–µ—Ç–ò–º–µ—Ç—å–ö–Ω–æ–ø–∫–∏(–∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª)) continue;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–Ω–æ–ø–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    const —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è–ö–Ω–æ–ø–∫–∞ = –∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª.data.buttons.find(–∫–Ω–æ–ø–∫–∞ => 
      (–∫–Ω–æ–ø–∫–∞.action === 'goto' && –∫–Ω–æ–ø–∫–∞.target === —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.id) ||
      (–∫–Ω–æ–ø–∫–∞.action === 'command' && –∫–Ω–æ–ø–∫–∞.url === —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.data.command)
    );

    if (—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è–ö–Ω–æ–ø–∫–∞) continue;

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
    const —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è = —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.type === 'command' ? 'command' : 'goto';
    
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.push({
      id: nanoid(),
      —Ç–µ–∫—Å—Ç: –ø–æ–ª—É—á–∏—Ç—å–¢–µ–∫—Å—Ç–ö–Ω–æ–ø–∫–∏(—Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª, —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è),
      –∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª: –∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª.id,
      —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª: —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.id,
      —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è,
      —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å(–∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª, —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª),
      –ø—Ä–∏—á–∏–Ω–∞: `–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "${–ø–æ–ª—É—á–∏—Ç—å–¢–µ–∫—Å—Ç–ö–Ω–æ–ø–∫–∏(—Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª, —Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è)}" –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ ${–ø–æ–ª—É—á–∏—Ç—å–ù–∞–∑–≤–∞–Ω–∏–µ–¢–∏–ø–∞(—Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª)}`
    });
  }

  return —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.sort((–∞, –±) => –±.—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - –∞.—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–µ—Ç –ª–∏ —É–∑–µ–ª –∏–º–µ—Ç—å –∫–Ω–æ–ø–∫–∏
function –º–æ–∂–µ—Ç–ò–º–µ—Ç—å–ö–Ω–æ–ø–∫–∏(—É–∑–µ–ª: Node): boolean {
  return ['message', 'photo', 'keyboard', 'start', 'input'].includes(—É–∑–µ–ª.type);
}

// –†–∞—Å—á–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
function —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å(–∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª: Node, —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª: Node): number {
  let —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å = 0.7;

  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –ª–æ–≥–∏—á–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
  if (–∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª.type === 'message' && —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.type === 'keyboard') —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å += 0.2;
  if (–∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª.type === 'start' && —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.type === 'message') —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å += 0.2;
  if (–∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª.type === 'keyboard' && —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.type === 'message') —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å += 0.1;
  if (—Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª.type === 'command') —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å += 0.15;

  // –£–º–µ–Ω—å—à–∞–µ–º –¥–ª—è —É–∑–ª–æ–≤ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–Ω–æ–ø–æ–∫
  const –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–ö–Ω–æ–ø–æ–∫ = –∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª.data.buttons.length;
  if (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–ö–Ω–æ–ø–æ–∫ > 3) —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å -= 0.1;
  if (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–ö–Ω–æ–ø–æ–∫ > 6) —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å -= 0.2;

  return Math.min(0.95, Math.max(0.3, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å));
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–∞ —É–∑–ª–∞
function –ø–æ–ª—É—á–∏—Ç—å–ù–∞–∑–≤–∞–Ω–∏–µ–¢–∏–ø–∞(—É–∑–µ–ª: Node): string {
  const –Ω–∞–∑–≤–∞–Ω–∏—è–¢–∏–ø–æ–≤ = {
    start: '–≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é',
    message: '—Å–æ–æ–±—â–µ–Ω–∏—é',
    photo: '—Ñ–æ—Ç–æ',
    keyboard: '–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ',
    input: '–≤–≤–æ–¥—É –¥–∞–Ω–Ω—ã—Ö',
    condition: '—É—Å–ª–æ–≤–∏—é',
    command: '–∫–æ–º–∞–Ω–¥–µ'
  };
  return –Ω–∞–∑–≤–∞–Ω–∏—è–¢–∏–ø–æ–≤[—É–∑–µ–ª.type] || '—É–∑–ª—É';
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –Ω—É–∂–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
export function –∞–≤—Ç–æ–°–æ–∑–¥–∞–Ω–∏–µ–ö–Ω–æ–ø–æ–∫(
  —É–∑–ª—ã: Node[],
  —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: Connection[]
): { –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã: Node[]; —Å–æ–∑–¥–∞–Ω–æ–ö–Ω–æ–ø–æ–∫: number } {
  const —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ = –Ω–∞–π—Ç–∏–ù—É–∂–Ω—ã–µ–ö–Ω–æ–ø–∫–∏(—É–∑–ª—ã, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è);
  let —Å–æ–∑–¥–∞–Ω–æ–ö–Ω–æ–ø–æ–∫ = 0;
  
  const –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã = —É–∑–ª—ã.map(—É–∑–µ–ª => {
    const —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏–î–ª—è–£–∑–ª–∞ = —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.filter(—Ä => —Ä.–∏—Å—Ö–æ–¥–Ω—ã–π–£–∑–µ–ª === —É–∑–µ–ª.id);
    
    if (—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏–î–ª—è–£–∑–ª–∞.length === 0) return —É–∑–µ–ª;

    const –Ω–æ–≤—ã–µ–ö–Ω–æ–ø–∫–∏ = —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏–î–ª—è–£–∑–ª–∞.map(—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è => {
      const —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª = —É–∑–ª—ã.find(—É => —É.id === —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è.—Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª)!;
      return —Å–æ–∑–¥–∞—Ç—å–ö–Ω–æ–ø–∫—É–î–ª—è–°–æ–µ–¥–∏–Ω–µ–Ω–∏—è(—É–∑–µ–ª, —Ü–µ–ª–µ–≤–æ–π–£–∑–µ–ª, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è.—Ç–∏–ø–î–µ–π—Å—Ç–≤–∏—è);
    });

    —Å–æ–∑–¥–∞–Ω–æ–ö–Ω–æ–ø–æ–∫ += –Ω–æ–≤—ã–µ–ö–Ω–æ–ø–∫–∏.length;

    return {
      ...—É–∑–µ–ª,
      data: {
        ...—É–∑–µ–ª.data,
        buttons: [...—É–∑–µ–ª.data.buttons, ...–Ω–æ–≤—ã–µ–ö–Ω–æ–ø–∫–∏]
      }
    };
  });

  return { –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã, —Å–æ–∑–¥–∞–Ω–æ–ö–Ω–æ–ø–æ–∫ };
}

// –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
export function –æ—á–∏—Å—Ç–∏—Ç—å–õ–∏—à–Ω–∏–µ–ö–Ω–æ–ø–∫–∏(
  —É–∑–ª—ã: Node[],
  —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: Connection[]
): { –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã: Node[]; —É–¥–∞–ª–µ–Ω–æ–ö–Ω–æ–ø–æ–∫: number } {
  let —É–¥–∞–ª–µ–Ω–æ–ö–Ω–æ–ø–æ–∫ = 0;
  
  const –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã = —É–∑–ª—ã.map(—É–∑–µ–ª => {
    const –≤–∞–ª–∏–¥–Ω—ã–µ–ö–Ω–æ–ø–∫–∏ = —É–∑–µ–ª.data.buttons.filter(–∫–Ω–æ–ø–∫–∞ => {
      if (–∫–Ω–æ–ø–∫–∞.action === 'goto' && –∫–Ω–æ–ø–∫–∞.target) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏
        const –µ—Å—Ç—å–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ = —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.some(—Å–æ–µ–¥ => 
          —Å–æ–µ–¥.source === —É–∑–µ–ª.id && —Å–æ–µ–¥.target === –∫–Ω–æ–ø–∫–∞.target
        );
        if (!–µ—Å—Ç—å–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ) {
          —É–¥–∞–ª–µ–Ω–æ–ö–Ω–æ–ø–æ–∫++;
          return false;
        }
      }
      return true;
    });

    return {
      ...—É–∑–µ–ª,
      data: {
        ...—É–∑–µ–ª.data,
        buttons: –≤–∞–ª–∏–¥–Ω—ã–µ–ö–Ω–æ–ø–∫–∏
      }
    };
  });

  return { –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã, —É–¥–∞–ª–µ–Ω–æ–ö–Ω–æ–ø–æ–∫ };
}

// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏
export function —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å–ö–Ω–æ–ø–∫–∏–°–æ–µ–¥–∏–Ω–µ–Ω–∏—è(
  —É–∑–ª—ã: Node[],
  —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: Connection[]
): { –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã: Node[]; –∏–∑–º–µ–Ω–µ–Ω–∏—è: { —Å–æ–∑–¥–∞–Ω–æ: number; —É–¥–∞–ª–µ–Ω–æ: number } } {
  // –°–Ω–∞—á–∞–ª–∞ —É–±–∏—Ä–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
  const { –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã: –æ—á–∏—â–µ–Ω–Ω—ã–µ–£–∑–ª—ã, —É–¥–∞–ª–µ–Ω–æ–ö–Ω–æ–ø–æ–∫ } = –æ—á–∏—Å—Ç–∏—Ç—å–õ–∏—à–Ω–∏–µ–ö–Ω–æ–ø–∫–∏(—É–∑–ª—ã, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è);
  
  // –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–Ω–æ–ø–∫–∏
  const { –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã: —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ–£–∑–ª—ã, —Å–æ–∑–¥–∞–Ω–æ–ö–Ω–æ–ø–æ–∫ } = –∞–≤—Ç–æ–°–æ–∑–¥–∞–Ω–∏–µ–ö–Ω–æ–ø–æ–∫(–æ—á–∏—â–µ–Ω–Ω—ã–µ–£–∑–ª—ã, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è);

  return {
    –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ–£–∑–ª—ã: —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ–£–∑–ª—ã,
    –∏–∑–º–µ–Ω–µ–Ω–∏—è: {
      —Å–æ–∑–¥–∞–Ω–æ: —Å–æ–∑–¥–∞–Ω–æ–ö–Ω–æ–ø–æ–∫,
      —É–¥–∞–ª–µ–Ω–æ: —É–¥–∞–ª–µ–Ω–æ–ö–Ω–æ–ø–æ–∫
    }
  };
}