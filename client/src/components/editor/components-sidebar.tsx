import { ComponentDefinition } from '@shared/schema';
import { cn } from '@/lib/utils';
import { useState } from 'react';
import { DragDropTestButton } from '@/components/layout/drag-drop-test-button';
import QuickLayoutSwitcher from '@/components/layout/quick-layout-switcher';
import DragLayoutManager from '@/components/layout/drag-layout-manager';
import { Button } from '@/components/ui/button';
import { Separator } from '@/components/ui/separator';
import { Layout, Settings, Grid } from 'lucide-react';

interface ComponentsSidebarProps {
  onComponentDrag: (component: ComponentDefinition) => void;
  onLoadTemplate?: () => void;
  onOpenLayoutCustomizer?: () => void;
  onLayoutChange?: (config: any) => void;
  headerContent?: React.ReactNode;
  sidebarContent?: React.ReactNode;
  canvasContent?: React.ReactNode;
  propertiesContent?: React.ReactNode;
}

const components: ComponentDefinition[] = [
  {
    id: 'text-message',
    name: '–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
    description: '–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ Markdown',
    icon: 'fas fa-comment',
    color: 'bg-blue-100 text-blue-600',
    type: 'message',
    defaultData: {
      messageText: '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'photo-message',
    name: '–§–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º',
    description: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ + –æ–ø–∏—Å–∞–Ω–∏–µ',
    icon: 'fas fa-image',
    color: 'bg-green-100 text-green-600',
    type: 'photo',
    defaultData: {
      messageText: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      imageUrl: '',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'video-message',
    name: '–í–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ',
    description: '–í–∏–¥–µ–æ —Ñ–∞–π–ª —Å –ø–æ–¥–ø–∏—Å—å—é',
    icon: 'fas fa-video',
    color: 'bg-red-100 text-red-600',
    type: 'video',
    defaultData: {
      messageText: '–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ',
      videoUrl: '',
      mediaCaption: '',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'audio-message',
    name: '–ê—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ',
    description: '–ê—É–¥–∏–æ —Ñ–∞–π–ª —Å –ø–æ–¥–ø–∏—Å—å—é',
    icon: 'fas fa-music',
    color: 'bg-yellow-100 text-yellow-600',
    type: 'audio',
    defaultData: {
      messageText: '–û–ø–∏—Å–∞–Ω–∏–µ –∞—É–¥–∏–æ',
      audioUrl: '',
      mediaCaption: '',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'document-message',
    name: '–î–æ–∫—É–º–µ–Ω—Ç',
    description: '–§–∞–π–ª –¥–æ–∫—É–º–µ–Ω—Ç–∞',
    icon: 'fas fa-file',
    color: 'bg-gray-100 text-gray-600',
    type: 'document',
    defaultData: {
      messageText: '–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞',
      documentUrl: '',
      documentName: 'document.pdf',
      mediaCaption: '',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'sticker-message',
    name: '–°—Ç–∏–∫–µ—Ä',
    description: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∏–∫–µ—Ä',
    icon: 'fas fa-laugh',
    color: 'bg-pink-100 text-pink-600',
    type: 'sticker',
    defaultData: {
      messageText: '–°—Ç–∏–∫–µ—Ä',
      stickerUrl: '',
      stickerFileId: '',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'voice-message',
    name: '–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
    description: '–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
    icon: 'fas fa-microphone',
    color: 'bg-teal-100 text-teal-600',
    type: 'voice',
    defaultData: {
      messageText: '–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      voiceUrl: '',
      duration: 0,
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'animation-message',
    name: 'GIF –∞–Ω–∏–º–∞—Ü–∏—è',
    description: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
    icon: 'fas fa-film',
    color: 'bg-orange-100 text-orange-600',
    type: 'animation',
    defaultData: {
      messageText: 'GIF –∞–Ω–∏–º–∞—Ü–∏—è',
      animationUrl: '',
      duration: 0,
      width: 0,
      height: 0,
      mediaCaption: '',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'location-message',
    name: '–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è',
    description: '–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç',
    icon: 'fas fa-map-marker',
    color: 'bg-green-100 text-green-600',
    type: 'location',
    defaultData: {
      messageText: '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
      latitude: 55.7558,
      longitude: 37.6176,
      title: '–ú–æ—Å–∫–≤–∞',
      address: '–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è',
      foursquareId: '',
      foursquareType: '',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'contact-message',
    name: '–ö–æ–Ω—Ç–∞–∫—Ç',
    description: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º',
    icon: 'fas fa-address-book',
    color: 'bg-blue-100 text-blue-600',
    type: 'contact',
    defaultData: {
      messageText: '–ö–æ–Ω—Ç–∞–∫—Ç',
      phoneNumber: '+7 (999) 123-45-67',
      firstName: '–ò–º—è',
      lastName: '–§–∞–º–∏–ª–∏—è',
      userId: 0,
      vcard: '',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },

  {
    id: 'reply-keyboard',
    name: 'Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞',
    description: '–ö–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞',
    icon: 'fas fa-keyboard',
    color: 'bg-purple-100 text-purple-600',
    type: 'keyboard',
    defaultData: {
      messageText: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      keyboardType: 'reply',
      buttons: [
        { id: 'btn-1', text: '–ö–Ω–æ–ø–∫–∞ 1', action: 'goto', target: '' },
        { id: 'btn-2', text: '–ö–Ω–æ–ø–∫–∞ 2', action: 'goto', target: '' }
      ],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },
  {
    id: 'inline-keyboard',
    name: 'Inline –∫–Ω–æ–ø–∫–∏',
    description: '–ö–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º',
    icon: 'fas fa-mouse',
    color: 'bg-amber-100 text-amber-600',
    type: 'keyboard',
    defaultData: {
      messageText: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      keyboardType: 'inline',
      buttons: [
        { id: 'btn-1', text: '–ö–Ω–æ–ø–∫–∞ 1', action: 'goto', target: '' },
        { id: 'btn-2', text: '–ö–Ω–æ–ø–∫–∞ 2', action: 'goto', target: '' }
      ],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true
    }
  },

  {
    id: 'start-command',
    name: '/start –∫–æ–º–∞–Ω–¥–∞',
    description: '–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç–∞',
    icon: 'fas fa-play',
    color: 'bg-green-100 text-green-600',
    type: 'start',
    defaultData: {
      command: '/start',
      description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞',
      messageText: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true,
      showInMenu: true,
      isPrivateOnly: false,
      requiresAuth: false,
      adminOnly: false
    }
  },
  {
    id: 'help-command',
    name: '/help –∫–æ–º–∞–Ω–¥–∞',
    description: '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É',
    icon: 'fas fa-question-circle',
    color: 'bg-blue-100 text-blue-600',
    type: 'command',
    defaultData: {
      command: '/help',
      description: '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É',
      messageText: 'ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      keyboardType: 'none',
      buttons: [],
      markdown: true,
      oneTimeKeyboard: false,
      resizeKeyboard: true,
      showInMenu: true,
      isPrivateOnly: false,
      requiresAuth: false,
      adminOnly: false
    }
  },
  {
    id: 'settings-command',
    name: '/settings –∫–æ–º–∞–Ω–¥–∞',
    description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞',
    icon: 'fas fa-cog',
    color: 'bg-gray-100 text-gray-600',
    type: 'command',
    defaultData: {
      command: '/settings',
      description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞',
      messageText: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:',
      keyboardType: 'inline',
      buttons: [
        { id: 'btn-1', text: 'üìã –Ø–∑—ã–∫', action: 'command', target: '/language' },
        { id: 'btn-2', text: 'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', action: 'command', target: '/notifications' }
      ],
      markdown: true,
      oneTimeKeyboard: false,
      resizeKeyboard: true,
      showInMenu: true,
      isPrivateOnly: false,
      requiresAuth: false,
      adminOnly: false
    }
  },
  {
    id: 'menu-command',
    name: '/menu –∫–æ–º–∞–Ω–¥–∞',
    description: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
    icon: 'fas fa-bars',
    color: 'bg-purple-100 text-purple-600',
    type: 'command',
    defaultData: {
      command: '/menu',
      description: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
      messageText: 'üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:',
      keyboardType: 'reply',
      buttons: [
        { id: 'btn-1', text: 'üìñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', action: 'command', target: '/info' },
        { id: 'btn-2', text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', action: 'command', target: '/settings' },
        { id: 'btn-3', text: '‚ùì –ü–æ–º–æ—â—å', action: 'command', target: '/help' },
        { id: 'btn-4', text: 'üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞', action: 'command', target: '/support' }
      ],
      markdown: true,
      oneTimeKeyboard: false,
      resizeKeyboard: true,
      showInMenu: true,
      isPrivateOnly: false,
      requiresAuth: false,
      adminOnly: false
    }
  },
  {
    id: 'custom-command',
    name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞',
    description: '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞',
    icon: 'fas fa-terminal',
    color: 'bg-indigo-100 text-indigo-600',
    type: 'command',
    defaultData: {
      command: '/custom',
      description: '–ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞',
      messageText: '–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞',
      keyboardType: 'none',
      buttons: [],
      markdown: false,
      oneTimeKeyboard: false,
      resizeKeyboard: true,
      showInMenu: true,
      isPrivateOnly: false,
      requiresAuth: false,
      adminOnly: false
    }
  }
];

const componentCategories = [
  {
    title: '–°–æ–æ–±—â–µ–Ω–∏—è',
    components: components.filter(c => ['message', 'photo', 'video', 'audio', 'document', 'sticker', 'voice', 'animation', 'location', 'contact'].includes(c.type))
  },
  {
    title: '–ö–Ω–æ–ø–∫–∏',
    components: components.filter(c => c.type === 'keyboard')
  },
  {
    title: '–ö–æ–º–∞–Ω–¥—ã',
    components: components.filter(c => ['start', 'command'].includes(c.type))
  }
];

export function ComponentsSidebar({ 
  onComponentDrag, 
  onLoadTemplate, 
  onOpenLayoutCustomizer, 
  onLayoutChange,
  headerContent,
  sidebarContent,
  canvasContent,
  propertiesContent
}: ComponentsSidebarProps) {
  const [currentTab, setCurrentTab] = useState<'elements' | 'templates'>('elements');
  
  const handleDragStart = (e: React.DragEvent, component: ComponentDefinition) => {
    e.dataTransfer.setData('application/json', JSON.stringify(component));
    onComponentDrag(component);
  };

  const handleTemplatesClick = () => {
    setCurrentTab('templates');
    if (onLoadTemplate) {
      console.log('Templates button clicked in sidebar');
      onLoadTemplate();
    }
  };

  return (
    <aside className="w-full h-full bg-background border-r border-border flex flex-col">
      {/* Sidebar Header */}
      <div className="p-4 border-b border-border">
        <h2 className="text-sm font-semibold text-foreground mb-3">–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</h2>
        <div className="flex space-x-1 bg-muted rounded-lg p-1">
          <button 
            onClick={() => setCurrentTab('elements')}
            className={`flex-1 px-2 py-1.5 text-xs font-medium rounded-md transition-colors ${
              currentTab === 'elements' 
                ? 'bg-background text-foreground shadow-sm' 
                : 'text-muted-foreground hover:text-foreground'
            }`}
          >
            –≠–ª–µ–º–µ–Ω—Ç—ã
          </button>
          <button 
            onClick={handleTemplatesClick}
            className={`flex-1 px-2 py-1.5 text-xs font-medium rounded-md transition-colors ${
              currentTab === 'templates' 
                ? 'bg-background text-foreground shadow-sm' 
                : 'text-muted-foreground hover:text-foreground'
            }`}
          >
            –®–∞–±–ª–æ–Ω—ã
          </button>
          
        </div>
      </div>
      
      {/* Components List */}
      <div className="flex-1 overflow-y-auto p-4 space-y-4">
        {currentTab === 'elements' && componentCategories.map((category) => (
          <div key={category.title}>
            <h3 className="text-xs font-medium text-muted-foreground uppercase tracking-wider mb-2">
              {category.title}
            </h3>
            <div className="space-y-2">
              {category.components.map((component) => (
                <div
                  key={component.id}
                  draggable
                  onDragStart={(e) => handleDragStart(e, component)}
                  className="flex items-center p-3 bg-muted/50 hover:bg-muted rounded-lg cursor-move transition-colors"
                >
                  <div className={cn("w-8 h-8 rounded-lg flex items-center justify-center mr-3", component.color)}>
                    <i className={`${component.icon} text-sm`}></i>
                  </div>
                  <div className="flex-1">
                    <p className="text-sm font-medium text-foreground">{component.name}</p>
                    <p className="text-xs text-muted-foreground">{component.description}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
        
        {currentTab === 'layout' && (
          <div className="space-y-4">
            <div>
              <h3 className="text-xs font-medium text-muted-foreground uppercase tracking-wider mb-3">
                –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
              </h3>
              <div className="space-y-3">
                <div className="p-3 bg-muted/50 rounded-lg">
                  <div className="flex items-center gap-2 mb-2">
                    <Layout className="w-4 h-4" />
                    <span className="text-sm font-medium">–ë—ã—Å—Ç—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                  </div>
                  <p className="text-xs text-muted-foreground mb-3">
                    –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π –º–∞–∫–µ—Ç –∏–∑ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
                  </p>
                  {onLayoutChange && (
                    <QuickLayoutSwitcher onLayoutChange={onLayoutChange} />
                  )}
                </div>
                
                <div className="p-3 bg-muted/50 rounded-lg">
                  <div className="flex items-center gap-2 mb-2">
                    <Grid className="w-4 h-4" />
                    <span className="text-sm font-medium">–ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ</span>
                  </div>
                  <p className="text-xs text-muted-foreground mb-3">
                    –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
                  </p>
                  {headerContent && sidebarContent && canvasContent && propertiesContent && (
                    <DragLayoutManager
                      headerContent={headerContent}
                      sidebarContent={sidebarContent}
                      canvasContent={canvasContent}
                      propertiesContent={propertiesContent}
                      onLayoutChange={onLayoutChange}
                    />
                  )}
                </div>
                
                <div className="p-3 bg-muted/50 rounded-lg">
                  <div className="flex items-center gap-2 mb-2">
                    <Settings className="w-4 h-4" />
                    <span className="text-sm font-medium">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</span>
                  </div>
                  <p className="text-xs text-muted-foreground mb-3">
                    –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–∫–µ—Ç–∞
                  </p>
                  {onOpenLayoutCustomizer && (
                    <Button 
                      variant="outline" 
                      size="sm" 
                      onClick={onOpenLayoutCustomizer}
                      className="w-full"
                    >
                      <Settings className="w-4 h-4 mr-2" />
                      –û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </Button>
                  )}
                </div>
              </div>
            </div>
            
            <Separator />
            
            <div>
              <h3 className="text-xs font-medium text-muted-foreground uppercase tracking-wider mb-3">
                –°–æ–≤–µ—Ç—ã –ø–æ –º–∞–∫–µ—Ç—É
              </h3>
              <div className="space-y-2 text-xs text-muted-foreground">
                <div className="p-2 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
                  <p className="font-medium text-blue-900 dark:text-blue-100">üí° –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–Ω–∏–∑—É</p>
                  <p className="text-blue-700 dark:text-blue-300">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–Ω–∏–∑—É –¥–ª—è –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</p>
                </div>
                <div className="p-2 bg-green-50 dark:bg-green-900/20 rounded-lg">
                  <p className="font-medium text-green-900 dark:text-green-100">üéØ –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å–ø—Ä–∞–≤–∞</p>
                  <p className="text-green-700 dark:text-green-300">–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å –≤–ø—Ä–∞–≤–æ –¥–ª—è –ª–µ–≤—à–µ–π</p>
                </div>
                <div className="p-2 bg-purple-50 dark:bg-purple-900/20 rounded-lg">
                  <p className="font-medium text-purple-900 dark:text-purple-100">‚ö° –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º</p>
                  <p className="text-purple-700 dark:text-purple-300">–í–∫–ª—é—á–∏—Ç–µ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ</p>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
      
      {/* Drag & Drop Test Button */}
      {onOpenLayoutCustomizer && (
        <DragDropTestButton onOpenCustomizer={onOpenLayoutCustomizer} />
      )}
    </aside>
  );
}
