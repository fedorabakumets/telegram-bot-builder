"""
ü§ñ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç-–±–æ—Ç - Telegram Bot
–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é TelegramBot Builder
"""

import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand, ReplyKeyboardRemove
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.enums import ParseMode

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)
BOT_TOKEN = "YOUR_BOT_TOKEN_HERE"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π Telegram ID)
ADMIN_IDS = [123456789]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
user_data = {}


# –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async def is_admin(user_id: int) -> bool:
    return user_id in ADMIN_IDS

async def is_private_chat(message: types.Message) -> bool:
    return message.chat.type == "private"

async def check_auth(user_id: int) -> bool:
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    return user_id in user_data


@dp.message(CommandStart())
async def start_handler(message: types.Message):

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ
    user_data[message.from_user.id] = {
        "username": message.from_user.username,
        "first_name": message.from_user.first_name,
        "last_name": message.from_user.last_name,
        "registered_at": message.date
    }

    text = "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç-–±–æ—Ç!

–≠—Ç–æ—Ç –±–æ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞:
‚Ä¢ –ö–æ–º–∞–Ω–¥—ã —Å inline –∏ reply –∫–Ω–æ–ø–∫–∞–º–∏
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
‚Ä¢ –£—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞
‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
    
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="üìã –ú–µ–Ω—é"))
    builder.add(KeyboardButton(text="üéÆ –ò–≥—Ä—ã"))
    builder.add(KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
    keyboard = builder.as_markup(resize_keyboard=true, one_time_keyboard=false)
    await message.answer(text, reply_markup=keyboard)

@dp.message(Command("menu"))
async def menu_handler(message: types.Message):

    text = "üéØ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:

–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:"
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info-msg"))
    builder.add(InlineKeyboardButton(text="üñºÔ∏è –ú–µ–¥–∏–∞", callback_data="media-msg"))
    builder.add(InlineKeyboardButton(text="‚úçÔ∏è –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö", callback_data="input-msg"))
    builder.add(InlineKeyboardButton(text="üåê –°–∞–π—Ç", url="https://telegram.org"))
    keyboard = builder.as_markup()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º–∏ inline –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(text, reply_markup=keyboard)

@dp.message(Command("games"))
async def games_handler(message: types.Message):

    text = "üéÆ –ò–≥—Ä–æ–≤–∞—è –∑–æ–Ω–∞:

–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:"
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞", callback_data="quiz-msg"))
    builder.add(InlineKeyboardButton(text="üé≤ –ö–æ—Å—Ç–∏", callback_data="dice-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º–∏ inline –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(text, reply_markup=keyboard)

@dp.message(Command("settings"))
async def settings_handler(message: types.Message):
    if not await is_private_chat(message):
        await message.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö")
        return
    if not await is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return

    text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:

–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞:"
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notifications-msg"))
    builder.add(InlineKeyboardButton(text="üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º–∏ inline –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(text, reply_markup=keyboard)

@dp.message(Command("help"))
async def help_handler(message: types.Message):

    text = "‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/games - –ò–≥—Ä–æ–≤–∞—è –∑–æ–Ω–∞
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/about - –û –±–æ—Ç–µ"
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìã –í—Å–µ –∫–æ–º–∞–Ω–¥—ã", callback_data="commands-msg"))
    builder.add(InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º–∏ inline –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(text, reply_markup=keyboard)

@dp.message(Command("about"))
async def about_handler(message: types.Message):

    text = "‚ÑπÔ∏è –û –±–æ—Ç–µ:

ü§ñ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç-–±–æ—Ç
üìÖ –í–µ—Ä—Å–∏—è: 2.0.0
üë®‚Äçüíª –°–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é Telegram Bot Builder
üöÄ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Ç–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –£–∑–ª–æ–≤ –≤ —Å—Ö–µ–º–µ: 27
‚Ä¢ –ö–æ–º–∞–Ω–¥: 6
‚Ä¢ –¢–∏–ø–æ–≤ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: 8"
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìù –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π", callback_data="changelog-msg"))
    builder.add(InlineKeyboardButton(text="üíª GitHub", url="https://github.com/telegram-bot-builder"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º–∏ inline –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –∫–æ–º–∞–Ω–¥

@dp.message(lambda message: message.text and message.text.lower() == "–ø–æ–º–æ—â—å")
async def help_synonym_–ø–æ–º–æ—â—å_handler(message: types.Message):
    # –°–∏–Ω–æ–Ω–∏–º –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /help
    await help_handler(message)

@dp.message(lambda message: message.text and message.text.lower() == "—Å–ø—Ä–∞–≤–∫–∞")
async def help_synonym_—Å–ø—Ä–∞–≤–∫–∞_handler(message: types.Message):
    # –°–∏–Ω–æ–Ω–∏–º –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /help
    await help_handler(message)

@dp.message(lambda message: message.text and message.text.lower() == "–∫–æ–º–∞–Ω–¥—ã")
async def help_synonym_–∫–æ–º–∞–Ω–¥—ã_handler(message: types.Message):
    # –°–∏–Ω–æ–Ω–∏–º –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /help
    await help_handler(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline –∫–Ω–æ–ø–æ–∫

@dp.callback_query(lambda c: c.data == "info-msg")
async def handle_callback_btn_info(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:

‚Ä¢ –°–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫
‚Ä¢ –í–∫–ª—é—á–∞–µ—Ç —É—Å–ª–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
‚Ä¢ –ò–º–µ–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data="menu-cmd"))
    builder.add(InlineKeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats-msg"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "media-msg")
async def handle_callback_btn_media(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üñºÔ∏è –ú–µ–¥–∏–∞ –∫–æ–Ω—Ç–µ–Ω—Ç:

–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å inline –∫–Ω–æ–ø–∫–∞–º–∏."
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üé• –í–∏–¥–µ–æ", callback_data="video-msg"))
    builder.add(InlineKeyboardButton(text="üéµ –ê—É–¥–∏–æ", callback_data="audio-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "input-msg")
async def handle_callback_btn_input(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:

–ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–º –µ–≥–æ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏."
    await callback_query.message.edit_text(text)

@dp.callback_query(lambda c: c.data == "menu-cmd")
async def handle_callback_btn_back_menu(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üéØ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:

–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info-msg"))
    builder.add(InlineKeyboardButton(text="üñºÔ∏è –ú–µ–¥–∏–∞", callback_data="media-msg"))
    builder.add(InlineKeyboardButton(text="‚úçÔ∏è –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö", callback_data="input-msg"))
    builder.add(InlineKeyboardButton(text="üåê –°–∞–π—Ç", url="https://telegram.org"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "stats-msg")
async def handle_callback_btn_stats(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:

‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 1,337
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: 42,000+
‚Ä¢ –ö–æ–º–∞–Ω–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: 15,678
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 99.9%"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", callback_data="info-msg"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "video-msg")
async def handle_callback_btn_video(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üé• –í–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–Ω—Ç:

–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏."
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ö –º–µ–¥–∏–∞", callback_data="media-msg"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "audio-msg")
async def handle_callback_btn_audio(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üéµ –ê—É–¥–∏–æ –∫–æ–Ω—Ç–µ–Ω—Ç:

–ü—Ä–∏–º–µ—Ä –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏."
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ö –º–µ–¥–∏–∞", callback_data="media-msg"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "profile-msg")
async def handle_callback_btn_profile(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:

‚Ä¢ –ò–º—è: {–∏–º—è}
‚Ä¢ –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {–¥–∞—Ç–∞}
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {—Å—á–µ—Ç—á–∏–∫}"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="input-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="greeting-msg"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "greeting-msg")
async def handle_callback_btn_back_greeting(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "ü§ù –ü—Ä–∏–≤–µ—Ç, {–∏–º—è}!

–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏."
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "quiz-msg")
async def handle_callback_btn_quiz(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞:

–í–æ–ø—Ä–æ—Å: –ö–∞–∫–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Telegram Bot API?

–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="HTTP/HTTPS", callback_data="correct-msg"))
    builder.add(InlineKeyboardButton(text="WebSocket", callback_data="wrong-msg"))
    builder.add(InlineKeyboardButton(text="TCP", callback_data="wrong-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ö –∏–≥—Ä–∞–º", callback_data="games-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "dice-msg")
async def handle_callback_btn_dice(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üé≤ –ò–≥—Ä–∞ –≤ –∫–æ—Å—Ç–∏:

üéØ –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ 1-6}

–£–¥–∞—á–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üé≤ –ë—Ä–æ—Å–∏—Ç—å —Å–Ω–æ–≤–∞", callback_data="dice-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ö –∏–≥—Ä–∞–º", callback_data="games-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "start-node")
async def handle_callback_btn_back_start(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç-–±–æ—Ç!

–≠—Ç–æ—Ç –±–æ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞:
‚Ä¢ –ö–æ–º–∞–Ω–¥—ã —Å inline –∏ reply –∫–Ω–æ–ø–∫–∞–º–∏
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
‚Ä¢ –£—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞
‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="üìã –ú–µ–Ω—é"))
    builder.add(KeyboardButton(text="üéÆ –ò–≥—Ä—ã"))
    builder.add(KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
    keyboard = builder.as_markup(resize_keyboard=true, one_time_keyboard=false)
    await callback_query.message.answer(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "correct-msg")
async def handle_callback_btn_http(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!

Telegram Bot API –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç HTTP/HTTPS –ø—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏."
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", callback_data="quiz-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ö –∏–≥—Ä–∞–º", callback_data="games-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "wrong-msg")
async def handle_callback_btn_websocket(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑. –ü–æ–¥—Å–∫–∞–∑–∫–∞: —ç—Ç–æ —Å–∞–º—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="quiz-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ö –∏–≥—Ä–∞–º", callback_data="games-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "games-cmd")
async def handle_callback_btn_back_games(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üéÆ –ò–≥—Ä–æ–≤–∞—è –∑–æ–Ω–∞:

–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞", callback_data="quiz-msg"))
    builder.add(InlineKeyboardButton(text="üé≤ –ö–æ—Å—Ç–∏", callback_data="dice-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "notifications-msg")
async def handle_callback_btn_notifications(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:

‚Ä¢ –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ‚úÖ
‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ‚úÖ
‚Ä¢ –†–µ–∫–ª–∞–º–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏: ‚ùå
‚Ä¢ –ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º: ‚úÖ"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="notifications-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="settings-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "admin-msg")
async def handle_callback_btn_admin(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å:

‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 1,337
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: 89
‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: 12%
‚Ä¢ –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: 85%"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="broadcast-msg"))
    builder.add(InlineKeyboardButton(text="üìã –õ–æ–≥–∏", callback_data="logs-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="settings-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "settings-cmd")
async def handle_callback_btn_back_settings(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:

–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notifications-msg"))
    builder.add(InlineKeyboardButton(text="üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "broadcast-msg")
async def handle_callback_btn_broadcast(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üì¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏:

–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:"
    await callback_query.message.edit_text(text)

@dp.callback_query(lambda c: c.data == "logs-msg")
async def handle_callback_btn_logs(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üìã –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏:

[2025-01-06 22:47] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 12345 –∑–∞–ø—É—Å—Ç–∏–ª /start
[2025-01-06 22:46] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∞ (1,337 –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π)
[2025-01-06 22:45] –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
[2025-01-06 22:44] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 67890 –≤—ã–ø–æ–ª–Ω–∏–ª /menu"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏", callback_data="logs-cleared-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", callback_data="admin-msg"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "broadcast-sent-msg")
async def handle_callback_btn_send_broadcast(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üéâ –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!

‚Ä¢ –ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π: 1,337
‚Ä¢ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: 1,335
‚Ä¢ –û—à–∏–±–æ–∫: 2
‚Ä¢ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: 3.2 —Å–µ–∫"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", callback_data="admin-msg"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "logs-cleared-msg")
async def handle_callback_btn_clear_logs(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üóëÔ∏è –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã!

–í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã. –ù–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –±—É–¥—É—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞."
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ö –ª–æ–≥–∞–º", callback_data="logs-msg"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "commands-msg")
async def handle_callback_btn_commands(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üìã –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:

üîπ –û—Å–Ω–æ–≤–Ω—ã–µ:
/start, /menu, /help, /about

üîπ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:
/games, –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞, –∫–æ—Å—Ç–∏

üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
/settings, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

üîπ –ê–¥–º–∏–Ω—Å–∫–∏–µ:
/admin, —Ä–∞—Å—Å—ã–ª–∫–∞, –ª–æ–≥–∏"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ö —Å–ø—Ä–∞–≤–∫–µ", callback_data="help-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "support-msg")
async def handle_callback_btn_support(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üÜò –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:

‚Ä¢ Email: support@example.com
‚Ä¢ Telegram: @support_bot
‚Ä¢ –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: 24/7
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 15 –º–∏–Ω"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è", url="https://t.me/support_bot"))
    builder.add(InlineKeyboardButton(text="üîô –ö —Å–ø—Ä–∞–≤–∫–µ", callback_data="help-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "help-cmd")
async def handle_callback_btn_back_help(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/games - –ò–≥—Ä–æ–≤–∞—è –∑–æ–Ω–∞
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/about - –û –±–æ—Ç–µ"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìã –í—Å–µ –∫–æ–º–∞–Ω–¥—ã", callback_data="commands-msg"))
    builder.add(InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "changelog-msg")
async def handle_callback_btn_changelog(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üìù –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:

üîπ v2.0.0 (06.01.2025)
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã –∏–≥—Ä—ã –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
‚Ä¢ –£–ª—É—á—à–µ–Ω–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã inline –∫–Ω–æ–ø–∫–∏

üîπ v1.5.0 (05.01.2025)
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –º–µ–¥–∏–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞

üîπ v1.0.0 (04.01.2025)
‚Ä¢ –ü–µ—Ä–≤–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –û –±–æ—Ç–µ", callback_data="about-cmd"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "about-cmd")
async def handle_callback_btn_back_about(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "‚ÑπÔ∏è –û –±–æ—Ç–µ:

ü§ñ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç-–±–æ—Ç
üìÖ –í–µ—Ä—Å–∏—è: 2.0.0
üë®‚Äçüíª –°–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é Telegram Bot Builder
üöÄ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Ç–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –£–∑–ª–æ–≤ –≤ —Å—Ö–µ–º–µ: 27
‚Ä¢ –ö–æ–º–∞–Ω–¥: 6
‚Ä¢ –¢–∏–ø–æ–≤ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: 8"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìù –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π", callback_data="changelog-msg"))
    builder.add(InlineKeyboardButton(text="üíª GitHub", url="https://github.com/telegram-bot-builder"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    await callback_query.message.edit_text(text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ reply –∫–Ω–æ–ø–æ–∫

@dp.message(lambda message: message.text == "üìã –ú–µ–Ω—é")
async def handle_reply_btn_1(message: types.Message):
    text = "üéØ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:

–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info-msg"))
    builder.add(InlineKeyboardButton(text="üñºÔ∏è –ú–µ–¥–∏–∞", callback_data="media-msg"))
    builder.add(InlineKeyboardButton(text="‚úçÔ∏è –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö", callback_data="input-msg"))
    builder.add(InlineKeyboardButton(text="üåê –°–∞–π—Ç", url="https://telegram.org"))
    keyboard = builder.as_markup()
    await message.answer(text, reply_markup=keyboard)

@dp.message(lambda message: message.text == "üéÆ –ò–≥—Ä—ã")
async def handle_reply_btn_2(message: types.Message):
    text = "üéÆ –ò–≥—Ä–æ–≤–∞—è –∑–æ–Ω–∞:

–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞", callback_data="quiz-msg"))
    builder.add(InlineKeyboardButton(text="üé≤ –ö–æ—Å—Ç–∏", callback_data="dice-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    await message.answer(text, reply_markup=keyboard)

@dp.message(lambda message: message.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def handle_reply_btn_3(message: types.Message):
    text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:

–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notifications-msg"))
    builder.add(InlineKeyboardButton(text="üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin-msg"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start-node"))
    keyboard = builder.as_markup()
    await message.answer(text, reply_markup=keyboard)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
