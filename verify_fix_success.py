#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å inline –∫–Ω–æ–ø–∫–∞–º–∏
"""

def verify_bot_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ñ–∞–π–ª–µ –±–æ—Ç–∞"""
    
    try:
        with open('bots/bot_1.py', 'r', encoding='utf-8') as f:
            bot_code = f.read()
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ bot_1.py...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    tests = []
    
    # –¢–µ—Å—Ç 1: Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ —É–∑–ª–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if "handle_callback_N1q3_DYFHOucSIyw58fdu" in bot_code:
        tests.append("‚úÖ Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω")
    else:
        tests.append("‚ùå Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ù–ï —Å–æ–∑–¥–∞–Ω")
    
    # –¢–µ—Å—Ç 2: –í callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –µ—Å—Ç—å inline –∫–Ω–æ–ø–∫–∏
    if ('InlineKeyboardButton(text="–î–ê"' in bot_code and 
        'InlineKeyboardButton(text="–ù–ï–¢"' in bot_code):
        tests.append("‚úÖ Inline –∫–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è")
    else:
        tests.append("‚ùå Inline –∫–Ω–æ–ø–∫–∏ –ù–ï –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è")
    
    # –¢–µ—Å—Ç 3: –ö–Ω–æ–ø–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—é—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
    if "edit_text(text, reply_markup=keyboard" in bot_code:
        tests.append("‚úÖ Inline –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—é—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é")
    else:
        tests.append("‚ùå Inline –∫–Ω–æ–ø–∫–∏ –ù–ï –ø—Ä–∏–∫—Ä–µ–ø–ª—è—é—Ç—Å—è")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ callback_data
    if ('callback_data="1fJCssfE7JH8ASXBpgeUh"' in bot_code and 
        'callback_data="u5L4a6DvDiwKBF6st7MJ8"' in bot_code):
        tests.append("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ callback_data")
    else:
        tests.append("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ callback_data")
    
    # –¢–µ—Å—Ç 5: –°–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è
    if 'user_data[callback_query.from_user.id]["waiting_for_input"]' in bot_code:
        tests.append("‚úÖ –°–±–æ—Ä –≤–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è")
    else:
        tests.append("‚ùå –°–±–æ—Ä –≤–≤–æ–¥–∞ –ù–ï –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è")
    
    print("\n" + "="*50)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print("="*50)
    
    for test in tests:
        print(test)
    
    passed = len([t for t in tests if t.startswith("‚úÖ")])
    total = len(tests)
    
    print(f"\n–ü—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total} —Ç–µ—Å—Ç–æ–≤")
    
    if passed == total:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return True
    else:
        print(f"\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã: {total-passed} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω—ã")
        return False

def check_logs():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    print("\nüîç –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤...")
    
    # –ó–¥–µ—Å—å –º—ã –≤–∏–¥–∏–º –∏–∑ –ª–æ–≥–æ–≤ workflow, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ:
    logs_evidence = [
        "INFO:root:–ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: –î–ê (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1612141295)",
        "INFO:root:–ü–æ–ª—É—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥: –∏—Å—Ç–æ—á–Ω–∏–∫ = –æ–¥–ø–¥–ª–¥",  
        "INFO:aiogram.event:Update is handled",
        "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
    ]
    
    print("–ò–∑ –ª–æ–≥–æ–≤ –≤–∏–¥–Ω–æ:")
    for evidence in logs_evidence:
        print(f"‚úÖ {evidence}")
    
    print("\nüéØ –í–´–í–û–î: Inline –∫–Ω–æ–ø–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∏ —Ä–∞–±–æ—Ç–∞—é—Ç!")
    return True

if __name__ == "__main__":
    print("="*60)
    print("–ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´ –° INLINE –ö–ù–û–ü–ö–ê–ú–ò")
    print("="*60)
    
    print("\n–ü–†–û–ë–õ–ï–ú–ê:")
    print("- –£–∑–µ–ª N1q3_DYFHOucSIyw58fdu –∏–º–µ–ª collectUserInput: true")
    print("- –≠—Ç–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é inline –∫–Ω–æ–ø–æ–∫ –≤ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö")
    print("- –ö–Ω–æ–ø–∫–∏ '–î–ê' –∏ '–ù–ï–¢' –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å")
    
    print("\n–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:")
    print("- –ò–∑–º–µ–Ω–µ–Ω –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä bot-generator.ts")
    print("- –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ inline –∫–Ω–æ–ø–æ–∫ –¥–∞–∂–µ –ø—Ä–∏ collectUserInput: true")
    print("- Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞—é—Ç –∫–Ω–æ–ø–∫–∏ –ò –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç —Å–±–æ—Ä –≤–≤–æ–¥–∞")
    
    code_success = verify_bot_file()
    logs_success = check_logs()
    
    if code_success and logs_success:
        print("\n" + "="*60)
        print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û –ü–†–ò–ú–ï–ù–ï–ù–û!")
        print("‚úÖ Inline –∫–Ω–æ–ø–∫–∏ '–î–ê' –∏ '–ù–ï–¢' —Ç–µ–ø–µ—Ä—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è")
        print("‚úÖ Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("‚úÖ –°–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º")
        print("="*60)
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è")