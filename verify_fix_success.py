#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–∞–ª–æ—á–µ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
"""

import json
import asyncpg
import asyncio
import os

async def check_fix_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞—Ç—É—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≥–∞–ª–æ—á–µ–∫...")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    try:
        DATABASE_URL = os.environ.get('DATABASE_URL')
        if not DATABASE_URL:
            print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        conn = await asyncpg.connect(DATABASE_URL)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = await conn.fetchrow(
            "SELECT user_data FROM user_bot_data WHERE user_id = $1 ORDER BY updated_at DESC LIMIT 1",
            "1612141295"
        )
        
        if user_data and user_data['user_data']:
            try:
                data = json.loads(user_data['user_data'])
                print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω—ã: {list(data.keys())}")
                
                # –ò—â–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã
                interests_found = []
                for key, value in data.items():
                    if "–∏–Ω—Ç–µ—Ä–µ—Å" in key.lower() or "interests" in key.lower() or "user_interests" in key:
                        interests_found.append((key, value))
                        print(f"üìù –ù–∞–π–¥–µ–Ω—ã –∏–Ω—Ç–µ—Ä–µ—Å—ã: {key} = {value}")
                
                if interests_found:
                    print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢ - –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ë–î")
                    print("üéØ –¢–µ–ø–µ—Ä—å –∫–Ω–æ–ø–∫–∞ '–ò–∑–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä' –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≥–∞–ª–æ—á–∫–∏")
                else:
                    print("‚ö†Ô∏è –ò–Ω—Ç–µ—Ä–µ—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    print("üîç –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", json.dumps(data, ensure_ascii=False, indent=2))
                    
            except json.JSONDecodeError:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        else:
            print("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î")
            
        await conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")

if __name__ == "__main__":
    asyncio.run(check_fix_status())