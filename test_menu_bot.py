{"code":"import asyncio\nimport logging\nfrom aiogram import Bot, Dispatcher, types\nfrom aiogram.filters import CommandStart, Command\nfrom aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove\nfrom aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder\n\n# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)\nBOT_TOKEN = \"YOUR_BOT_TOKEN_HERE\"\n\n# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è\nlogging.basicConfig(level=logging.INFO)\n\n# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞\nbot = Bot(token=BOT_TOKEN)\ndp = Dispatcher()\n\n\n@dp.message(CommandStart())\nasync def start_handler(message: types.Message):\n    text = \"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é.\"\n    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏\n    await message.answer(text, reply_markup=ReplyKeyboardRemove())\n\n@dp.message(Command(\"menu\"))\nasync def menu_handler(message: types.Message):\n    text = \"üéØ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:\"\n    \n    builder = InlineKeyboardBuilder()\n    builder.add(InlineKeyboardButton(text=\"üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\", callback_data=\"info-msg\"))\n    builder.add(InlineKeyboardButton(text=\"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\", callback_data=\"settings-msg\"))\n    builder.add(InlineKeyboardButton(text=\"üåê –°–∞–π—Ç\", url=\"https://example.com\"))\n    keyboard = builder.as_markup()\n    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º inline –∫–Ω–æ–ø–æ–∫\n    await message.answer(text, reply_markup=ReplyKeyboardRemove())\n    await message.answer(\"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\", reply_markup=keyboard)\n\n@dp.message()\nasync def message_info_msg_handler(message: types.Message):\n    text = \"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n\n–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã inline –∫–Ω–æ–ø–æ–∫ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏.\"\n    \n    builder = InlineKeyboardBuilder()\n    builder.add(InlineKeyboardButton(text=\"üîô –ù–∞–∑–∞–¥\", callback_data=\"menu-cmd\"))\n    keyboard = builder.as_markup()\n    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º inline –∫–Ω–æ–ø–æ–∫\n    await message.answer(text, reply_markup=ReplyKeyboardRemove())\n    await message.answer(\"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\", reply_markup=keyboard)\n\n@dp.message()\nasync def message_settings_msg_handler(message: types.Message):\n    text = \"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:\n\n–ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\"\n    \n    builder = InlineKeyboardBuilder()\n    builder.add(InlineKeyboardButton(text=\"üîô –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é\", callback_data=\"menu-cmd\"))\n    keyboard = builder.as_markup()\n    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º inline –∫–Ω–æ–ø–æ–∫\n    await message.answer(text, reply_markup=ReplyKeyboardRemove())\n    await message.answer(\"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\", reply_markup=keyboard)\n\n\n# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\nasync def main():\n    try:\n        print(\"–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...\")\n        await dp.start_polling(bot)\n    except Exception as e:\n        print(f\"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}\")\n        raise\n\nif __name__ == '__main__':\n    try:\n        asyncio.run(main())\n    except KeyboardInterrupt:\n        print(\"–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\")\n    except Exception as e:\n        print(f\"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}\")\n        exit(1)\n"}