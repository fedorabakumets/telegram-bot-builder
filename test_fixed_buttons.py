#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –≤ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–º —à–∞–±–ª–æ–Ω–µ
"""

import requests
import json

def test_fixed_buttons():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏"""
    
    print("üîç –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –ö–ù–û–ü–û–ö")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç –∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    response = requests.get('http://localhost:5000/api/templates')
    templates = response.json()
    
    political_template = None
    for template in templates:
        if '–ü–æ–ª–∏—Ç–∏–∫–æ' in template['name']:
            political_template = template
            break
    
    if not political_template:
        print("‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    project_data = {
        "name": "–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫",
        "description": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–æ—Ç–∫–∏—Ö –∫–Ω–æ–ø–æ–∫ –≤ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–º —à–∞–±–ª–æ–Ω–µ",
        "data": political_template['data']
    }
    
    create_response = requests.post('http://localhost:5000/api/projects', json=project_data)
    
    if create_response.status_code == 201:
        project_id = create_response.json()['id']
        print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —Å ID: {project_id}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        analyze_button_lengths(political_template['data'])
        
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {create_response.status_code}")
        return False

def analyze_button_lengths(data):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–ª–∏–Ω—É –∫–Ω–æ–ø–æ–∫"""
    
    print(f"\nüìä –ê–ù–ê–õ–ò–ó –î–õ–ò–ù–´ –ö–ù–û–ü–û–ö:")
    print("-" * 30)
    
    total_buttons = 0
    long_buttons = 0
    max_length = 0
    button_samples = []
    
    for node in data['nodes']:
        if 'buttons' in node['data']:
            for button in node['data']['buttons']:
                total_buttons += 1
                button_length = len(button['text'])
                max_length = max(max_length, button_length)
                
                if button_length > 15:
                    long_buttons += 1
                
                if len(button_samples) < 10:
                    button_samples.append({
                        'text': button['text'],
                        'length': button_length,
                        'node': node['id']
                    })
    
    print(f"üìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫: {total_buttons}")
    print(f"üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞: {max_length} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"‚ö†Ô∏è  –î–ª–∏–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ (>15 —Å–∏–º–≤–æ–ª–æ–≤): {long_buttons}")
    print(f"‚úÖ –ö–æ—Ä–æ—Ç–∫–∏—Ö –∫–Ω–æ–ø–æ–∫ (‚â§15 —Å–∏–º–≤–æ–ª–æ–≤): {total_buttons - long_buttons}")
    
    print(f"\nüîç –ü–†–ò–ú–ï–†–´ –ö–ù–û–ü–û–ö:")
    for sample in button_samples:
        status = "‚úÖ" if sample['length'] <= 15 else "‚ö†Ô∏è"
        print(f"   {status} '{sample['text']}' ({sample['length']} —Å–∏–º–≤–æ–ª–æ–≤)")
    
    if long_buttons == 0:
        print(f"\nüéâ –í–°–ï –ö–ù–û–ü–ö–ò –û–ü–¢–ò–ú–ê–õ–¨–ù–û–ô –î–õ–ò–ù–´!")
        print("   –ö–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç —Ö–æ—Ä–æ—à–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ Telegram")
    else:
        print(f"\n‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–û {long_buttons} –î–õ–ò–ù–ù–´–• –ö–ù–û–ü–û–ö")
        print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ")

if __name__ == "__main__":
    success = test_fixed_buttons()
    if success:
        print("\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
    else:
        print("\n‚ùå –¢–ï–°–¢ –ó–ê–í–ï–†–®–ò–õ–°–Ø –° –û–®–ò–ë–ö–û–ô")