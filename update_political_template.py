#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import requests
import json

def update_political_template():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω —Å HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    
    print("üèõÔ∏è –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–û–õ–ò–¢–ò–ß–ï–°–ö–û–ì–û –®–ê–ë–õ–û–ù–ê")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —à–∞–±–ª–æ–Ω
    response = requests.get('http://localhost:5000/api/templates')
    templates = response.json()
    
    political_template = None
    for template in templates:
        if '–ü–æ–ª–∏—Ç–∏–∫–æ' in template['name']:
            political_template = template
            break
    
    if not political_template:
        print("‚ùå –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω: {political_template['name']}")
    print(f"   ID: {political_template['id']}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —É–∑–ª—ã –Ω–∞ HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    updated_data = political_template['data'].copy()
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ markdown –≤ HTML
    def convert_markdown_to_html(text):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ HTML"""
        # –ó–∞–º–µ–Ω—è–µ–º **—Ç–µ–∫—Å—Ç** –Ω–∞ <b>—Ç–µ–∫—Å—Ç</b>
        import re
        text = re.sub(r'\*\*([^*]+)\*\*', r'<b>\1</b>', text)
        # –ó–∞–º–µ–Ω—è–µ–º *—Ç–µ–∫—Å—Ç* –Ω–∞ <i>—Ç–µ–∫—Å—Ç</i>
        text = re.sub(r'\*([^*]+)\*', r'<i>\1</i>', text)
        # –ó–∞–º–µ–Ω—è–µ–º __—Ç–µ–∫—Å—Ç__ –Ω–∞ <u>—Ç–µ–∫—Å—Ç</u>
        text = re.sub(r'__([^_]+)__', r'<u>\1</u>', text)
        return text
    
    nodes_updated = 0
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —É–∑–ª—ã
    for node in updated_data['nodes']:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ markdown
        if 'markdown' in node['data']:
            del node['data']['markdown']
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º formatMode –≤ html
        node['data']['formatMode'] = 'html'
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        if 'messageText' in node['data']:
            original_text = node['data']['messageText']
            converted_text = convert_markdown_to_html(original_text)
            node['data']['messageText'] = converted_text
            
            if original_text != converted_text:
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω —É–∑–µ–ª {node['id']}: {node['type']}")
                nodes_updated += 1
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∏ –∫ –º–µ–¥–∏–∞
        if 'mediaCaption' in node['data']:
            original_caption = node['data']['mediaCaption']
            converted_caption = convert_markdown_to_html(original_caption)
            node['data']['mediaCaption'] = converted_caption
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏—è
        if 'description' in node['data']:
            original_desc = node['data']['description']
            converted_desc = convert_markdown_to_html(original_desc)
            node['data']['description'] = converted_desc
    
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —É–∑–ª–æ–≤: {nodes_updated}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    update_data = {
        'name': political_template['name'],
        'description': political_template['description'],
        'category': political_template['category'],
        'tags': political_template['tags'],
        'difficulty': political_template['difficulty'],
        'data': updated_data,
        'formatMode': 'html'  # –î–æ–±–∞–≤–ª—è–µ–º formatMode –Ω–∞ —É—Ä–æ–≤–Ω–µ —à–∞–±–ª–æ–Ω–∞
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    update_response = requests.put(
        f'http://localhost:5000/api/templates/{political_template["id"]}',
        json=update_data
    )
    
    if update_response.status_code == 200:
        print("‚úÖ –®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        test_response = requests.get(f'http://localhost:5000/api/templates/{political_template["id"]}')
        if test_response.status_code == 200:
            updated_template = test_response.json()
            first_node = updated_template['data']['nodes'][0]
            
            print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø:")
            print(f"   FormatMode: {first_node['data'].get('formatMode', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"   Markdown –ø–æ–ª–µ: {'—É–¥–∞–ª–µ–Ω–æ' if 'markdown' not in first_node['data'] else '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
            print(f"   –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {first_node['data']['messageText'][:100]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ HTML —Ç–µ–≥–æ–≤
            if '<b>' in first_node['data']['messageText']:
                print("‚úÖ HTML —Ç–µ–≥–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤ —Ç–µ–∫—Å—Ç–µ")
            else:
                print("‚ùå HTML —Ç–µ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {test_response.status_code}")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞: {update_response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {update_response.text}")
        return False

if __name__ == "__main__":
    success = update_political_template()
    if success:
        print("\nüéâ –ü–û–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –®–ê–ë–õ–û–ù –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù!")
        print("   –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
        print("   –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("\n‚ùå –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ò–õ–û–°–¨ –° –û–®–ò–ë–ö–û–ô")