#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums import ParseMode

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
BOT_TOKEN = "YOUR_BOT_TOKEN_HERE"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(CommandStart())
async def start_handler(message: types.Message):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    # Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    markdown_text = """üèõÔ∏è **–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –£–õ–¨–¢–†–ê-–ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –ü–û–õ–ò–¢–ò–ö–û-–ò–°–¢–û–†–ò–ß–ï–°–ö–ò–ô –û–ü–†–û–°!**

üìö –≠—Ç–æ—Ç –æ–ø—Ä–æ—Å –≤–∫–ª—é—á–∞–µ—Ç:
‚Ä¢ üó≥Ô∏è **–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã** (20+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ üìú **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞–Ω–∏–µ** (25+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ ü§î **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –≤–æ–∑–∑—Ä–µ–Ω–∏—è** (15+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ üåç **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑** (20+ –≤–æ–ø—Ä–æ—Å–æ–≤)

‚è±Ô∏è **–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:** 45-60 –º–∏–Ω—É—Ç
üéØ **–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –≤–∑–≥–ª—è–¥–æ–≤

**–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –≥–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?**"""
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úÖ Markdown —Ç–µ—Å—Ç", callback_data="markdown"))
    builder.add(InlineKeyboardButton(text="üîß HTML —Ç–µ—Å—Ç", callback_data="html"))
    keyboard = builder.as_markup()
    
    await message.answer(markdown_text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "markdown")
async def handle_markdown_test(callback_query: types.CallbackQuery):
    await callback_query.answer()
    
    markdown_text = """‚úÖ **MARKDOWN –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù!**

*–ö—É—Ä—Å–∏–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç*
**–ñ–∏—Ä–Ω—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç**
__–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç__
~~–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç~~
`–ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç`

> –¶–∏—Ç–∞—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back"))
    keyboard = builder.as_markup()
    
    await callback_query.message.edit_text(markdown_text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query(lambda c: c.data == "html")
async def handle_html_test(callback_query: types.CallbackQuery):
    await callback_query.answer()
    
    html_text = """üîß <b>HTML –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù!</b>

<i>–ö—É—Ä—Å–∏–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç</i>
<b>–ñ–∏—Ä–Ω—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç</b>
<u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç</u>
<s>–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç</s>
<code>–ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç</code>

<blockquote>–¶–∏—Ç–∞—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç</blockquote>"""
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back"))
    keyboard = builder.as_markup()
    
    await callback_query.message.edit_text(html_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

@dp.callback_query(lambda c: c.data == "back")
async def handle_back(callback_query: types.CallbackQuery):
    await callback_query.answer()
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    markdown_text = """üèõÔ∏è **–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –£–õ–¨–¢–†–ê-–ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –ü–û–õ–ò–¢–ò–ö–û-–ò–°–¢–û–†–ò–ß–ï–°–ö–ò–ô –û–ü–†–û–°!**

üìö –≠—Ç–æ—Ç –æ–ø—Ä–æ—Å –≤–∫–ª—é—á–∞–µ—Ç:
‚Ä¢ üó≥Ô∏è **–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–∑–≥–ª—è–¥—ã** (20+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ üìú **–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞–Ω–∏–µ** (25+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ ü§î **–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –≤–æ–∑–∑—Ä–µ–Ω–∏—è** (15+ –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ üåç **–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑** (20+ –≤–æ–ø—Ä–æ—Å–æ–≤)

‚è±Ô∏è **–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:** 45-60 –º–∏–Ω—É—Ç
üéØ **–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –≤–∑–≥–ª—è–¥–æ–≤

**–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –≥–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?**"""
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úÖ Markdown —Ç–µ—Å—Ç", callback_data="markdown"))
    builder.add(InlineKeyboardButton(text="üîß HTML —Ç–µ—Å—Ç", callback_data="html"))
    keyboard = builder.as_markup()
    
    await callback_query.message.edit_text(markdown_text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:")
    print("1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ç–æ–∫–µ–Ω–µ –±–æ—Ç–∞")
    print("2. –£—Å—Ç–∞—Ä–µ–≤—à–µ–º –∫–ª–∏–µ–Ω—Ç–µ Telegram")
    print("3. –ü—Ä–æ–±–ª–µ–º–∞—Ö —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π")
    
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())