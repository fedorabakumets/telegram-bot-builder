#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å inline –∫–Ω–æ–ø–∫–∞–º–∏
"""
import asyncio
import aiohttp
import re

async def test_inline_keyboards():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —Å inline –∫–Ω–æ–ø–∫–∞–º–∏"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ inline –∫–Ω–æ–ø–æ–∫ –∏ —É–¥–∞–ª–µ–Ω–∏—è reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    print("\nüîÑ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞")
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get('http://localhost:5000/api/projects/1/bot') as response:
                if response.status == 200:
                    data = await response.json()
                    if data['status'] == 'running':
                        print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                    else:
                        print(f"‚ùå –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {data['status']}")
                        return False
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status}")
                    return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
            return False
    
    # –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
    print("\nüîÑ –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ —Å inline –∫–Ω–æ–ø–∫–∞–º–∏")
    try:
        with open('bots/bot_1.py', 'r', encoding='utf-8') as f:
            bot_code = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
        if 'InlineKeyboardButton' in bot_code:
            print("‚úÖ InlineKeyboardButton –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        else:
            print("‚ùå InlineKeyboardButton –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–º–ø–æ—Ä—Ç–∞—Ö")
            return False
            
        if 'ReplyKeyboardRemove' in bot_code:
            print("‚úÖ ReplyKeyboardRemove –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        else:
            print("‚ùå ReplyKeyboardRemove –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–º–ø–æ—Ä—Ç–∞—Ö")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ InlineKeyboardBuilder
        inline_builders = bot_code.count('InlineKeyboardBuilder()')
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {inline_builders} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π InlineKeyboardBuilder")
        
        if inline_builders > 0:
            print("‚úÖ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ùå Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ù–ï–¢ —Å–æ–∑–¥–∞–Ω–∏—è reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä
        if 'ReplyKeyboardBuilder()' not in bot_code:
            print("‚úÖ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ù–ï —Å–æ–∑–¥–∞—é—Ç—Å—è (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
        else:
            print("‚ùå Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–¥–µ (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ReplyKeyboardRemove
        remove_calls = bot_code.count('ReplyKeyboardRemove()')
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {remove_calls} –≤—ã–∑–æ–≤–æ–≤ ReplyKeyboardRemove()")
        
        if remove_calls >= 3:  # –û–∂–∏–¥–∞–µ–º –º–∏–Ω–∏–º—É–º 3 –≤—ã–∑–æ–≤–∞ (–ø–æ –æ–¥–Ω–æ–º—É –≤ –∫–∞–∂–¥–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ)
            print("‚úÖ ReplyKeyboardRemove() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∞—Å—Ç–æ")
        else:
            print("‚ùå ReplyKeyboardRemove() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ")
            return False
        
        print("‚úÖ –ö–æ–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –±–æ—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    print("\nüîÑ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ inline –∫–Ω–æ–ø–æ–∫ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º start_handler
    if 'async def start_handler' in bot_code:
        print("‚úÖ start_handler –Ω–∞–π–¥–µ–Ω")
        
        start_match = re.search(r'async def start_handler.*?(?=async def|\Z)', bot_code, re.DOTALL)
        if start_match:
            start_code = start_match.group(0)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º inline –∫–Ω–æ–ø–∫–∏
            if 'InlineKeyboardButton' in start_code:
                print("‚úÖ start_handler —Å–æ–∑–¥–∞–µ—Ç inline –∫–Ω–æ–ø–∫–∏")
            else:
                print("‚ùå start_handler –Ω–µ —Å–æ–∑–¥–∞–µ—Ç inline –∫–Ω–æ–ø–∫–∏")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –∫–Ω–æ–ø–∫—É
            if 'url=' in start_code:
                print("‚úÖ start_handler —Å–æ–¥–µ—Ä–∂–∏—Ç URL –∫–Ω–æ–ø–∫—É")
            else:
                print("‚ùå start_handler –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç URL –∫–Ω–æ–ø–∫—É")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä
            if 'ReplyKeyboardRemove()' in start_code:
                print("‚úÖ start_handler —É–¥–∞–ª—è–µ—Ç reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
            else:
                print("‚ùå start_handler –Ω–µ —É–¥–∞–ª—è–µ—Ç reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
                return False
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–æ–π–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–µ–∫—Å—Ç + –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
            message_calls = start_code.count('await message.answer')
            if message_calls >= 2:
                print("‚úÖ start_handler –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–µ–∫—Å—Ç + –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)")
            else:
                print("‚ùå start_handler –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π")
                return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º menu_handler
    if 'async def menu_handler' in bot_code:
        print("‚úÖ menu_handler –Ω–∞–π–¥–µ–Ω")
        
        menu_match = re.search(r'async def menu_handler.*?(?=async def|\Z)', bot_code, re.DOTALL)
        if menu_match:
            menu_code = menu_match.group(0)
            
            if 'InlineKeyboardButton' in menu_code and 'ReplyKeyboardRemove()' in menu_code:
                print("‚úÖ menu_handler –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
            else:
                print("‚ùå menu_handler –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
                return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º message handler
    if 'async def message_msg_1_handler' in bot_code:
        print("‚úÖ message_handler –Ω–∞–π–¥–µ–Ω")
        
        msg_match = re.search(r'async def message_msg_1_handler.*?(?=async def|\Z)', bot_code, re.DOTALL)
        if msg_match:
            msg_code = msg_match.group(0)
            
            if 'ReplyKeyboardRemove()' in msg_code and 'InlineKeyboardButton' not in msg_code:
                print("‚úÖ message_handler –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω (—Ç–æ–ª—å–∫–æ —É–¥–∞–ª–µ–Ω–∏–µ, –±–µ–∑ –∫–Ω–æ–ø–æ–∫)")
            else:
                print("‚ùå message_handler –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
                return False
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    print("\nüîÑ –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞")
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get('http://localhost:5000/api/projects/1') as response:
                if response.status == 200:
                    project_data = await response.json()
                    nodes = project_data['data']['nodes']
                    
                    inline_nodes = [n for n in nodes if n['data'].get('keyboardType') == 'inline']
                    none_nodes = [n for n in nodes if n['data'].get('keyboardType') == 'none']
                    
                    print(f"‚úÖ –£–∑–ª–æ–≤ —Å inline –∫–Ω–æ–ø–∫–∞–º–∏: {len(inline_nodes)}")
                    print(f"‚úÖ –£–∑–ª–æ–≤ –±–µ–∑ –∫–Ω–æ–ø–æ–∫: {len(none_nodes)}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º inline —É–∑–ª—ã
                    for node in inline_nodes:
                        buttons = node['data'].get('buttons', [])
                        if buttons:
                            print(f"‚úÖ –£–∑–µ–ª {node['id']} –∏–º–µ–µ—Ç {len(buttons)} inline –∫–Ω–æ–ø–æ–∫")
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫
                            for btn in buttons:
                                if btn.get('action') == 'url':
                                    print(f"  ‚úÖ URL –∫–Ω–æ–ø–∫–∞: {btn['text']}")
                                else:
                                    print(f"  ‚úÖ Callback –∫–Ω–æ–ø–∫–∞: {btn['text']}")
                        else:
                            print(f"‚ùå –£–∑–µ–ª {node['id']} –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∫–Ω–æ–ø–∫–∏")
                            return False
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–∑–ª—ã –±–µ–∑ –∫–Ω–æ–ø–æ–∫
                    for node in none_nodes:
                        buttons = node['data'].get('buttons', [])
                        if not buttons:
                            print(f"‚úÖ –£–∑–µ–ª {node['id']} –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–µ –∏–º–µ–µ—Ç –∫–Ω–æ–ø–æ–∫")
                        else:
                            print(f"‚ùå –£–∑–µ–ª {node['id']} –Ω–µ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∫–Ω–æ–ø–∫–∏")
                            return False
                            
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {response.status}")
                    return False
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {e}")
            return False
    
    # –¢–µ—Å—Ç 5: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–≤—ã—Ö —á–∞—Å—Ç–µ–π –∫–æ–¥–∞
    print("\nüîÑ –¢–µ—Å—Ç 5: –ö–ª—é—á–µ–≤—ã–µ —á–∞—Å—Ç–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞")
    print("=" * 60)
    
    lines = bot_code.split('\n')
    for i, line in enumerate(lines):
        if ('InlineKeyboardButton' in line or 
            'ReplyKeyboardRemove()' in line or
            'InlineKeyboardBuilder()' in line):
            print(f"–°—Ç—Ä–æ–∫–∞ {i+1}: {line.strip()}")
    
    print("=" * 60)
    
    print("\nüéâ –¢–µ—Å—Ç inline –∫–Ω–æ–ø–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    
    # –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è inline –∫–Ω–æ–ø–æ–∫:")
    print("‚úÖ Inline –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ URL –∫–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("‚úÖ Callback –∫–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤–µ—Ä–Ω–æ")
    print("‚úÖ ReplyKeyboardRemove –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º inline –∫–Ω–æ–ø–æ–∫")
    print("‚úÖ –î–≤–æ–π–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–µ–∫—Å—Ç + –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)")
    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª—è—é—Ç reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
    print("‚úÖ –ö–æ–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    
    return True

if __name__ == "__main__":
    asyncio.run(test_inline_keyboards())