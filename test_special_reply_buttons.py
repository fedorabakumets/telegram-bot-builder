#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö Reply –∫–Ω–æ–ø–æ–∫ (–∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è)
"""

import re

def test_special_button_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö Reply –∫–Ω–æ–ø–æ–∫"""
    
    print("üìû –¢–ï–°–¢ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–• REPLY –ö–ù–û–ü–û–ö")
    print("=" * 35)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–¥ Reply –±–æ—Ç–∞
    try:
        with open('reply_keyboard_test_4_final.py', 'r', encoding='utf-8') as f:
            code = f.read()
        print(f"üìÑ –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω: {len(code)} —Å–∏–º–≤–æ–ª–æ–≤\n")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–¥–∞: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    print("üìû –ü–†–û–í–ï–†–ö–ê –ö–û–ù–¢–ê–ö–¢–ù–´–• –ö–ù–û–ü–û–ö:")
    print("-" * 28)
    
    contact_button_pattern = r'KeyboardButton\([^)]*request_contact=True'
    contact_buttons = re.findall(contact_button_pattern, code)
    
    print(f"  ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫: {len(contact_buttons)}")
    
    if contact_buttons:
        print("  ‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        for i, button in enumerate(contact_buttons[:3]):
            print(f"    - –ö–Ω–æ–ø–∫–∞ {i+1}: {button}")
    else:
        print("  ‚ùå –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    print("\nüìç –ü–†–û–í–ï–†–ö–ê –ö–ù–û–ü–û–ö –ì–ï–û–õ–û–ö–ê–¶–ò–ò:")
    print("-" * 30)
    
    location_button_pattern = r'KeyboardButton\([^)]*request_location=True'
    location_buttons = re.findall(location_button_pattern, code)
    
    print(f"  ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: {len(location_buttons)}")
    
    if location_buttons:
        print("  ‚úÖ –ö–Ω–æ–ø–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        for i, button in enumerate(location_buttons[:3]):
            print(f"    - –ö–Ω–æ–ø–∫–∞ {i+1}: {button}")
    else:
        print("  ‚ùå –ö–Ω–æ–ø–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    print("\nüîß –ü–†–û–í–ï–†–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –ö–û–ù–¢–ê–ö–¢–û–í:")
    print("-" * 33)
    
    contact_handler_patterns = [
        r'@dp\.message\([^)]*content_types.*contact',
        r'message\.contact',
        r'types\.ContentType\.CONTACT'
    ]
    
    contact_handlers_found = 0
    for pattern in contact_handler_patterns:
        matches = re.findall(pattern, code, re.IGNORECASE)
        contact_handlers_found += len(matches)
        if matches:
            print(f"  ‚Ä¢ –ù–∞–π–¥–µ–Ω –ø–∞—Ç—Ç–µ—Ä–Ω '{pattern}': {len(matches)} —Ä–∞–∑")
    
    if contact_handlers_found > 0:
        print("  ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    else:
        print("  ‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    print("\nüó∫Ô∏è –ü–†–û–í–ï–†–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –ì–ï–û–õ–û–ö–ê–¶–ò–ò:")
    print("-" * 34)
    
    location_handler_patterns = [
        r'@dp\.message\([^)]*content_types.*location',
        r'message\.location',
        r'types\.ContentType\.LOCATION'
    ]
    
    location_handlers_found = 0
    for pattern in location_handler_patterns:
        matches = re.findall(pattern, code, re.IGNORECASE)
        location_handlers_found += len(matches)
        if matches:
            print(f"  ‚Ä¢ –ù–∞–π–¥–µ–Ω –ø–∞—Ç—Ç–µ—Ä–Ω '{pattern}': {len(matches)} —Ä–∞–∑")
    
    if location_handlers_found > 0:
        print("  ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    else:
        print("  ‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    print("\nüéØ –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–• –ö–ù–û–ü–û–ö:")
    print("-" * 38)
    
    # –ò—â–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    correct_contact_structure = r'KeyboardButton\(text="[^"]*", request_contact=True\)'
    correct_contact_matches = re.findall(correct_contact_structure, code)
    
    print(f"  ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫: {len(correct_contact_matches)}")
    
    # –ò—â–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    correct_location_structure = r'KeyboardButton\(text="[^"]*", request_location=True\)'
    correct_location_matches = re.findall(correct_location_structure, code)
    
    print(f"  ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–Ω–æ–ø–æ–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: {len(correct_location_matches)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö
    print("\nüîí –ü–†–û–í–ï–†–ö–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í REPLY –ö–õ–ê–í–ò–ê–¢–£–†–ê–•:")
    print("-" * 43)
    
    # –ò—â–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –≤ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö (–æ—à–∏–±–∫–∞)
    inline_contact_error = re.findall(r'InlineKeyboardButton\([^)]*request_contact', code)
    inline_location_error = re.findall(r'InlineKeyboardButton\([^)]*request_location', code)
    
    if inline_contact_error:
        print(f"  ‚ùå –û–®–ò–ë–ö–ê: –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö: {len(inline_contact_error)}")
    else:
        print("  ‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –≤ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö")
    
    if inline_location_error:
        print(f"  ‚ùå –û–®–ò–ë–ö–ê: –ö–Ω–æ–ø–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –≤ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö: {len(inline_location_error)}")
    else:
        print("  ‚úÖ –ö–Ω–æ–ø–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –≤ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    print("\nüèÜ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –°–ü–ï–¶–ò–ê–õ–¨–ù–´–• –ö–ù–û–ü–û–ö:")
    print("-" * 38)
    
    score = 0
    max_score = 100
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ (40 –±–∞–ª–ª–æ–≤)
    if contact_buttons:
        score += 20
    if location_buttons:
        score += 20
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (30 –±–∞–ª–ª–æ–≤)
    if contact_handlers_found > 0:
        score += 15
    if location_handlers_found > 0:
        score += 15
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (20 –±–∞–ª–ª–æ–≤)
    if correct_contact_matches:
        score += 10
    if correct_location_matches:
        score += 10
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (10 –±–∞–ª–ª–æ–≤)
    if not inline_contact_error:
        score += 5
    if not inline_location_error:
        score += 5
    
    print(f"üéñÔ∏è –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª: {score}/{max_score} ({score/max_score*100:.1f}%)")
    
    if score >= 80:
        print("üåü –û–¢–õ–ò–ß–ù–û! –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ Reply –∫–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∞–ª—å–Ω–æ")
        return True
    elif score >= 60:
        print("üëç –•–û–†–û–®–û! –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–º–∏ –Ω–µ–¥–æ—á–µ—Ç–∞–º–∏")
        return True
    elif score >= 40:
        print("‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û! –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏")
        return False
    else:
        print("‚ùå –ü–õ–û–•–û! –°–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏")
        return False

def analyze_reply_vs_inline_comparison():
    """–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ Reply –∏ Inline –∫–Ω–æ–ø–æ–∫"""
    print("\nüìä –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó REPLY VS INLINE:")
    print("-" * 40)
    
    try:
        # Reply –±–æ—Ç
        with open('reply_keyboard_test_4.py', 'r', encoding='utf-8') as f:
            reply_code = f.read()
        
        # Inline –±–æ—Ç  
        with open('complex_test_bot_3.py', 'r', encoding='utf-8') as f:
            inline_code = f.read()
        
        # –ê–Ω–∞–ª–∏–∑ Reply
        reply_keyboards = len(re.findall(r'ReplyKeyboardBuilder\(\)', reply_code))
        reply_buttons = len(re.findall(r'KeyboardButton\(', reply_code))
        reply_contact = len(re.findall(r'request_contact=True', reply_code))
        reply_location = len(re.findall(r'request_location=True', reply_code))
        reply_removals = len(re.findall(r'ReplyKeyboardRemove\(\)', reply_code))
        
        # –ê–Ω–∞–ª–∏–∑ Inline
        inline_keyboards = len(re.findall(r'InlineKeyboardBuilder\(\)', inline_code))
        inline_buttons = len(re.findall(r'InlineKeyboardButton\(', inline_code))
        inline_callbacks = len(re.findall(r'callback_data=', inline_code))
        inline_urls = len(re.findall(r'url=', inline_code))
        
        print("Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:")
        print(f"  ‚Ä¢ –ö–ª–∞–≤–∏–∞—Ç—É—Ä: {reply_keyboards}")
        print(f"  ‚Ä¢ –ö–Ω–æ–ø–æ–∫: {reply_buttons}")
        print(f"  ‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫: {reply_contact}")
        print(f"  ‚Ä¢ –ö–Ω–æ–ø–æ–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: {reply_location}")
        print(f"  ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä: {reply_removals}")
        
        print("\nInline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:")
        print(f"  ‚Ä¢ –ö–ª–∞–≤–∏–∞—Ç—É—Ä: {inline_keyboards}")
        print(f"  ‚Ä¢ –ö–Ω–æ–ø–æ–∫: {inline_buttons}")
        print(f"  ‚Ä¢ Callback –∫–Ω–æ–ø–æ–∫: {inline_callbacks}")
        print(f"  ‚Ä¢ URL –∫–Ω–æ–ø–æ–∫: {inline_urls}")
        
        print("\n–í—ã–≤–æ–¥—ã:")
        print(f"  ‚Ä¢ Reply –±–æ—Ç—ã –ª—É—á—à–µ –¥–ª—è: –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print(f"  ‚Ä¢ Inline –±–æ—Ç—ã –ª—É—á—à–µ –¥–ª—è: –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –≤–µ–±-—Å—Å—ã–ª–æ–∫")
        print(f"  ‚Ä¢ Reply: –±–æ–ª—å—à–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ {((reply_buttons/inline_buttons-1)*100):.0f}%")
        print(f"  ‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ Reply: –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫"""
    success = test_special_button_generation()
    analyze_reply_vs_inline_comparison()
    
    print(f"\n" + "="*50)
    if success:
        print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ü–ï–¶–ò–ê–õ–¨–ù–´–• REPLY –ö–ù–û–ü–û–ö –ó–ê–í–ï–†–®–ï–ù–û!")
        print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é")
        print("üéØ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ö†Ô∏è –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –°–û –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ú–ò –ö–ù–û–ü–ö–ê–ú–ò")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π")

if __name__ == "__main__":
    main()