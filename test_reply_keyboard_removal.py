#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä
"""
import asyncio
import json
import aiohttp
import time

async def test_reply_keyboard_removal():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
    print("\nüîÑ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞")
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get('http://localhost:5000/api/projects/1/bot') as response:
                if response.status == 200:
                    data = await response.json()
                    if data['status'] == 'running':
                        print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                        print(f"   Process ID: {data['instance']['processId']}")
                        print(f"   –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {data['instance']['startedAt']}")
                    else:
                        print(f"‚ùå –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {data['status']}")
                        return False
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status}")
                    return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
            return False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
    print("\nüîÑ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞")
    try:
        with open('bots/bot_1.py', 'r', encoding='utf-8') as f:
            bot_code = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç ReplyKeyboardRemove
        if 'ReplyKeyboardRemove' in bot_code:
            print("‚úÖ ReplyKeyboardRemove –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        else:
            print("‚ùå ReplyKeyboardRemove –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–º–ø–æ—Ä—Ç–∞—Ö")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ReplyKeyboardRemove
        if 'reply_markup=ReplyKeyboardRemove()' in bot_code:
            print("‚úÖ ReplyKeyboardRemove() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–¥–µ")
        else:
            print("‚ùå ReplyKeyboardRemove() –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
        if '–£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã' in bot_code:
            print("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        print("‚úÖ –ö–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –±–æ—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
    print("\nüîÑ –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä")
    
    test_configs = [
        {
            "name": "Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ‚Üí –°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã",
            "data": {
                "nodes": [
                    {
                        "id": "start-1",
                        "type": "start",
                        "position": {"x": 100, "y": 100},
                        "data": {
                            "command": "/start",
                            "messageText": "–ú–µ–Ω—é —Å reply –∫–Ω–æ–ø–∫–∞–º–∏",
                            "keyboardType": "reply",
                            "buttons": [
                                {"id": "btn1", "text": "–ö–Ω–æ–ø–∫–∞ 1", "action": "goto"},
                                {"id": "btn2", "text": "–ö–Ω–æ–ø–∫–∞ 2", "action": "goto"}
                            ],
                            "resizeKeyboard": True,
                            "oneTimeKeyboard": False
                        }
                    },
                    {
                        "id": "msg-1",
                        "type": "message",
                        "position": {"x": 300, "y": 100},
                        "data": {
                            "messageText": "–°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫ (–¥–æ–ª–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É)",
                            "keyboardType": "none",
                            "buttons": []
                        }
                    }
                ],
                "connections": []
            }
        },
        {
            "name": "Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ‚Üí Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞",
            "data": {
                "nodes": [
                    {
                        "id": "start-1",
                        "type": "start",
                        "position": {"x": 100, "y": 100},
                        "data": {
                            "command": "/start",
                            "messageText": "–ú–µ–Ω—é —Å reply –∫–Ω–æ–ø–∫–∞–º–∏",
                            "keyboardType": "reply",
                            "buttons": [
                                {"id": "btn1", "text": "Reply –∫–Ω–æ–ø–∫–∞", "action": "goto"}
                            ],
                            "resizeKeyboard": True,
                            "oneTimeKeyboard": False
                        }
                    },
                    {
                        "id": "msg-1",
                        "type": "message",
                        "position": {"x": 300, "y": 100},
                        "data": {
                            "messageText": "–ú–µ–Ω—é —Å inline –∫–Ω–æ–ø–∫–∞–º–∏",
                            "keyboardType": "inline",
                            "buttons": [
                                {"id": "btn2", "text": "Inline –∫–Ω–æ–ø–∫–∞", "action": "goto"}
                            ]
                        }
                    }
                ],
                "connections": []
            }
        }
    ]
    
    async with aiohttp.ClientSession() as session:
        for i, config in enumerate(test_configs, 1):
            print(f"\n   –¢–µ—Å—Ç 3.{i}: {config['name']}")
            try:
                async with session.put(
                    'http://localhost:5000/api/projects/1',
                    json=config,
                    headers={'Content-Type': 'application/json'}
                ) as response:
                    if response.status == 200:
                        print(f"   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è {i} –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
                        
                        # –ñ–¥–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
                        await asyncio.sleep(6)
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–ª—Å—è
                        async with session.get('http://localhost:5000/api/projects/1/bot') as status_response:
                            if status_response.status == 200:
                                status_data = await status_response.json()
                                if status_data['status'] == 'running':
                                    print(f"   ‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
                                else:
                                    print(f"   ‚ùå –ë–æ—Ç –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–ª—Å—è: {status_data['status']}")
                            else:
                                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {status_response.status}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
                        with open('bots/bot_1.py', 'r', encoding='utf-8') as f:
                            new_code = f.read()
                        
                        if 'ReplyKeyboardRemove()' in new_code:
                            print(f"   ‚úÖ ReplyKeyboardRemove() –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–¥–µ")
                        else:
                            print(f"   ‚ùå ReplyKeyboardRemove() –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–¥–µ")
                            
                    else:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {i}: {response.status}")
                        
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {i}: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    
    # –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("‚úÖ –ò–º–ø–æ—Ä—Ç ReplyKeyboardRemove —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ —Å ReplyKeyboardRemove —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    return True

if __name__ == "__main__":
    asyncio.run(test_reply_keyboard_removal())