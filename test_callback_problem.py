"""
–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
"""
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand, ReplyKeyboardRemove
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.enums import ParseMode

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)
BOT_TOKEN = "YOUR_BOT_TOKEN_HERE"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(CommandStart())
async def start_handler(message: types.Message):
    text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç callback –∫–Ω–æ–ø–æ–∫."
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info-msg"))
    builder.add(InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings-msg"))
    keyboard = builder.as_markup()
    
    await message.answer(text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline –∫–Ω–æ–ø–æ–∫
@dp.callback_query(lambda c: c.data == "info-msg")
async def handle_callback_info(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n\n–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="start-msg"))
    keyboard = builder.as_markup()
    
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "settings-msg")
async def handle_callback_settings(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n–ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞."
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="start-msg"))
    keyboard = builder.as_markup()
    
    await callback_query.message.edit_text(text, reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "start-msg")
async def handle_callback_back(callback_query: types.CallbackQuery):
    await callback_query.answer()
    text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç callback –∫–Ω–æ–ø–æ–∫."
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info-msg"))
    builder.add(InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings-msg"))
    keyboard = builder.as_markup()
    
    await callback_query.message.edit_text(text, reply_markup=keyboard)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())