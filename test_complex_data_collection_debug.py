"""
–¢–µ—Å—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
"""
import requests
import json

def test_complex_template_creation():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç –∏–∑ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–¥"""
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —à–∞–±–ª–æ–Ω
    try:
        response = requests.get('http://localhost:5000/api/templates')
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤: {response.status_code}")
            return
            
        templates = response.json()
        complex_template = None
        
        for template in templates:
            if template.get('name') == 'üìä –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö':
                complex_template = template
                break
        
        if not complex_template:
            print("‚ùå –®–∞–±–ª–æ–Ω 'üìä –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω: {complex_template['name']}")
        
        # 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞
        project_data = {
            "name": "–¢–µ—Å—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö - DEBUG",
            "description": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏",
            "data": complex_template['data']  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞
        }
        
        create_response = requests.post('http://localhost:5000/api/projects', json=project_data)
        if create_response.status_code != 201:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {create_response.status_code}")
            print(create_response.text)
            return
        
        project = create_response.json()
        project_id = project['id']
        print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —Å ID: {project_id}")
        
        # 3. –ü–æ–ª—É—á–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
        export_response = requests.post(f'http://localhost:5000/api/projects/{project_id}/export')
        if export_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {export_response.status_code}")
            return
        
        export_data = export_response.json()
        generated_code = export_data.get('code', '')
        
        # 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        with open('complex_data_collection_debug.py', 'w', encoding='utf-8') as f:
            f.write(generated_code)
        
        print("‚úÖ –ö–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: complex_data_collection_debug.py")
        
        # 5. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–µ—Å—Ç–∞
        print("\nüîç –ê–ù–ê–õ–ò–ó –ö–û–î–ê:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è name-input
        if 'handle_callback_name_input' in generated_code:
            print("‚úÖ –ù–∞–π–¥–µ–Ω callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è name-input")
        else:
            print("‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è name-input")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
        if 'handle_user_input' in generated_code:
            print("‚úÖ –ù–∞–π–¥–µ–Ω —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞")
        else:
            print("‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É waiting_for_input
        if 'waiting_for_input' in generated_code:
            print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è waiting_for_input")
        else:
            print("‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è waiting_for_input")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ age-buttons
        if 'age-buttons' in generated_code:
            print("‚úÖ –ù–∞–π–¥–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–∑–ª–∞ age-buttons")
        else:
            print("‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–∑–ª–∞ age-buttons")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º next_node_id –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if 'next_node_id' in generated_code:
            print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ next_node_id –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
        else:
            print("‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ next_node_id –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
        
        return project_id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    print("üß™ –¢–ï–°–¢: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    
    project_id = test_complex_template_creation()
    
    if project_id:
        print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ü—Ä–æ–µ–∫—Ç ID: {project_id}")
        print("üìÇ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª 'complex_data_collection_debug.py' –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è")